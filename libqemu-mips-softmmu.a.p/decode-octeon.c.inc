/* This file is autogenerated by scripts/decodetree.py.  */

typedef struct {
    int set;
    int rs;
    int offset;
    int p;
} arg_decode_ext_octeon0;

typedef struct {
    int rs;
    int rt;
    int rd;
} arg_decode_ext_octeon1;

typedef struct {
    int rs;
    int rt;
    int lenm1;
    int p;
} arg_decode_ext_octeon2;

typedef struct {
    int rs;
    int rd;
    int dw;
} arg_decode_ext_octeon3;

typedef struct {
    int rs;
    int rt;
    int rd;
    int ne;
} arg_decode_ext_octeon4;

typedef struct {
    int rs;
    int rt;
    int imm;
    int ne;
} arg_decode_ext_octeon5;

typedef arg_decode_ext_octeon0 arg_BBIT;
static bool trans_BBIT(DisasContext *ctx, arg_BBIT *a);
typedef arg_decode_ext_octeon1 arg_BADDU;
static bool trans_BADDU(DisasContext *ctx, arg_BADDU *a);
typedef arg_decode_ext_octeon1 arg_DMUL;
static bool trans_DMUL(DisasContext *ctx, arg_DMUL *a);
typedef arg_decode_ext_octeon2 arg_EXTS;
static bool trans_EXTS(DisasContext *ctx, arg_EXTS *a);
typedef arg_decode_ext_octeon2 arg_CINS;
static bool trans_CINS(DisasContext *ctx, arg_CINS *a);
typedef arg_decode_ext_octeon3 arg_POP;
static bool trans_POP(DisasContext *ctx, arg_POP *a);
typedef arg_decode_ext_octeon4 arg_SEQNE;
static bool trans_SEQNE(DisasContext *ctx, arg_SEQNE *a);
typedef arg_decode_ext_octeon5 arg_SEQNEI;
static bool trans_SEQNEI(DisasContext *ctx, arg_SEQNEI *a);

static void decode_ext_octeon_extract_bitfield(DisasContext *ctx, arg_decode_ext_octeon2 *a, uint32_t insn)
{
    a->rs = extract32(insn, 21, 5);
    a->rt = extract32(insn, 16, 5);
    a->lenm1 = extract32(insn, 11, 5);
    a->p = deposit32(extract32(insn, 6, 5), 5, 27, extract32(insn, 0, 1));
}

static void decode_ext_octeon_extract_decode_ext_octeon_Fmt_0(DisasContext *ctx, arg_decode_ext_octeon0 *a, uint32_t insn)
{
    a->rs = extract32(insn, 21, 5);
    a->offset = sextract32(insn, 0, 16);
    a->set = extract32(insn, 29, 1);
    a->p = deposit32(extract32(insn, 16, 5), 5, 27, extract32(insn, 28, 1));
}

static void decode_ext_octeon_extract_decode_ext_octeon_Fmt_3(DisasContext *ctx, arg_decode_ext_octeon3 *a, uint32_t insn)
{
    a->rs = extract32(insn, 21, 5);
    a->rd = extract32(insn, 11, 5);
    a->dw = extract32(insn, 0, 1);
}

static void decode_ext_octeon_extract_decode_ext_octeon_Fmt_4(DisasContext *ctx, arg_decode_ext_octeon4 *a, uint32_t insn)
{
    a->rs = extract32(insn, 21, 5);
    a->ne = extract32(insn, 0, 1);
    a->rt = extract32(insn, 16, 5);
    a->rd = extract32(insn, 11, 5);
}

static void decode_ext_octeon_extract_decode_ext_octeon_Fmt_5(DisasContext *ctx, arg_decode_ext_octeon5 *a, uint32_t insn)
{
    a->rs = extract32(insn, 21, 5);
    a->ne = extract32(insn, 0, 1);
    a->rt = extract32(insn, 16, 5);
    a->imm = sextract32(insn, 6, 10);
}

static void decode_ext_octeon_extract_r3(DisasContext *ctx, arg_decode_ext_octeon1 *a, uint32_t insn)
{
    a->rs = extract32(insn, 21, 5);
    a->rt = extract32(insn, 16, 5);
    a->rd = extract32(insn, 11, 5);
}

bool decode_ext_octeon(DisasContext *ctx, uint32_t insn)
{
    union {
        arg_decode_ext_octeon0 f_decode_ext_octeon0;
        arg_decode_ext_octeon1 f_decode_ext_octeon1;
        arg_decode_ext_octeon2 f_decode_ext_octeon2;
        arg_decode_ext_octeon3 f_decode_ext_octeon3;
        arg_decode_ext_octeon4 f_decode_ext_octeon4;
        arg_decode_ext_octeon5 f_decode_ext_octeon5;
    } u;

    switch (insn & 0xcc000000u) {
    case 0x40000000:
        /* 01..00.. ........ ........ ........ */
        switch (insn & 0x3000003e) {
        case 0x30000002:
            /* 011100.. ........ ........ ..00001. */
            decode_ext_octeon_extract_r3(ctx, &u.f_decode_ext_octeon1, insn);
            switch (insn & 0x000007c1) {
            case 0x00000001:
                /* 011100.. ........ .....000 00000011 */
                /* ../target/mips/tcg/octeon.decode:36 */
                if (trans_DMUL(ctx, &u.f_decode_ext_octeon1)) return true;
                break;
            }
            break;
        case 0x30000028:
            /* 011100.. ........ ........ ..10100. */
            decode_ext_octeon_extract_r3(ctx, &u.f_decode_ext_octeon1, insn);
            switch (insn & 0x000007c1) {
            case 0x00000000:
                /* 011100.. ........ .....000 00101000 */
                /* ../target/mips/tcg/octeon.decode:35 */
                if (trans_BADDU(ctx, &u.f_decode_ext_octeon1)) return true;
                break;
            }
            break;
        case 0x3000002a:
            /* 011100.. ........ ........ ..10101. */
            decode_ext_octeon_extract_decode_ext_octeon_Fmt_4(ctx, &u.f_decode_ext_octeon4, insn);
            switch ((insn >> 6) & 0x1f) {
            case 0x0:
                /* 011100.. ........ .....000 0010101. */
                /* ../target/mips/tcg/octeon.decode:40 */
                if (trans_SEQNE(ctx, &u.f_decode_ext_octeon4)) return true;
                break;
            }
            break;
        case 0x3000002c:
            /* 011100.. ........ ........ ..10110. */
            decode_ext_octeon_extract_decode_ext_octeon_Fmt_3(ctx, &u.f_decode_ext_octeon3, insn);
            switch (insn & 0x001f07c0) {
            case 0x00000000:
                /* 011100.. ...00000 .....000 0010110. */
                /* ../target/mips/tcg/octeon.decode:39 */
                if (trans_POP(ctx, &u.f_decode_ext_octeon3)) return true;
                break;
            }
            break;
        case 0x3000002e:
            /* 011100.. ........ ........ ..10111. */
            /* ../target/mips/tcg/octeon.decode:41 */
            decode_ext_octeon_extract_decode_ext_octeon_Fmt_5(ctx, &u.f_decode_ext_octeon5, insn);
            if (trans_SEQNEI(ctx, &u.f_decode_ext_octeon5)) return true;
            break;
        case 0x30000032:
            /* 011100.. ........ ........ ..11001. */
            /* ../target/mips/tcg/octeon.decode:38 */
            decode_ext_octeon_extract_bitfield(ctx, &u.f_decode_ext_octeon2, insn);
            if (trans_CINS(ctx, &u.f_decode_ext_octeon2)) return true;
            break;
        case 0x3000003a:
            /* 011100.. ........ ........ ..11101. */
            /* ../target/mips/tcg/octeon.decode:37 */
            decode_ext_octeon_extract_bitfield(ctx, &u.f_decode_ext_octeon2, insn);
            if (trans_EXTS(ctx, &u.f_decode_ext_octeon2)) return true;
            break;
        }
        break;
    case 0xc8000000u:
        /* 11..10.. ........ ........ ........ */
        /* ../target/mips/tcg/octeon.decode:15 */
        decode_ext_octeon_extract_decode_ext_octeon_Fmt_0(ctx, &u.f_decode_ext_octeon0, insn);
        if (trans_BBIT(ctx, &u.f_decode_ext_octeon0)) return true;
        break;
    }
    return false;
}
