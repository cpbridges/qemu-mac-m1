/* This file is autogenerated by scripts/decodetree.py.  */

typedef struct {
    int rs;
    int rn;
    int rt;
    int a;
    int r;
    int sz;
} arg_atomic;

typedef struct {
    int rd;
    int rn;
    int sf;
    int immr;
    int imms;
} arg_bitfield;

typedef struct {
    int rn;
    int rm;
    int m;
} arg_bra;

typedef struct {
    int rn;
    int m;
} arg_braz;

typedef struct {
    int rt;
    int imm;
    int sf;
    int nz;
} arg_cbz;

typedef struct {
    int rs;
    int rn;
    int rd;
    int options;
} arg_cpy;

typedef struct {
    int rd;
    int rn;
    int rm;
    int imm;
} arg_crypto3i;

typedef struct {
    int c;
    int cond;
    int imm;
} arg_disas_a6421;

typedef struct {
} arg_disas_a6425;

typedef struct {
    int rd;
} arg_disas_a6426;

typedef struct {
    int domain;
    int types;
} arg_disas_a6427;

typedef struct {
    int mask;
    int imm;
} arg_disas_a6428;

typedef struct {
    int l;
    int op1;
    int crn;
    int crm;
    int op2;
    int rt;
    int op0;
} arg_disas_a6429;

typedef struct {
    int rs;
    int rn;
    int rt;
    int sz;
} arg_disas_a6432;

typedef struct {
    int sz;
    int rn;
    int rt;
} arg_disas_a6438;

typedef struct {
    int m;
    int w;
    int rn;
    int rt;
    int imm;
} arg_disas_a6439;

typedef struct {
    int q;
    int p;
    int rm;
    int scale;
    int rn;
    int rt;
    int selem;
} arg_disas_a6443;

typedef struct {
    int imm;
    int rn;
    int rd;
} arg_disas_a6448;

typedef struct {
    int q;
    int imm;
    int rn;
    int rd;
} arg_disas_a6449;

typedef struct {
    int di;
    int si;
    int rn;
    int rd;
} arg_disas_a6450;

typedef struct {
    int q;
    int esz;
    int rm;
    int rot;
    int rn;
    int rd;
} arg_disas_a6451;

typedef struct {
    int idx;
    int rm;
    int rot;
    int rn;
    int rd;
    int esz;
    int q;
} arg_disas_a6452;

typedef struct {
    int rm;
    int cond;
    int rn;
    int rd;
    int esz;
} arg_disas_a6453;

typedef struct {
    int q;
    int rm;
    int len;
    int tbx;
    int rn;
    int rd;
} arg_disas_a6454;

typedef struct {
    int imm;
    int rd;
    int esz;
} arg_disas_a6455;

typedef struct {
    int q;
    int rd;
    int abcdefgh;
} arg_disas_a6456;

typedef struct {
    int q;
    int op;
    int cmode;
    int rd;
    int abcdefgh;
} arg_disas_a6457;

typedef struct {
    int rd;
    int rn;
    int rm;
    int imm;
    int sf;
} arg_extract;

typedef struct {
    int imm;
} arg_i;

typedef struct {
    int rn;
    int rt;
    int imm;
    int sz;
    int sign;
    int ext;
} arg_ldapr_stlr_i;

typedef struct {
    int rt;
    int imm;
    int sz;
    int sign;
} arg_ldlit;

typedef struct {
    int rm;
    int rn;
    int rt;
    int sign;
    int ext;
    int sz;
    int opt;
    int s;
} arg_ldst;

typedef struct {
    int rt;
    int rn;
    int imm;
    int sz;
    int sign;
    int w;
    int p;
    int unpriv;
    int ext;
} arg_ldst_imm;

typedef struct {
    int rm;
    int rn;
    int rt;
    int sz;
    int q;
    int p;
    int rpt;
    int selem;
} arg_ldst_mult;

typedef struct {
    int rm;
    int rn;
    int rt;
    int p;
    int selem;
    int index;
    int scale;
} arg_ldst_single;

typedef struct {
    int rn;
    int rt;
    int imm;
    int p;
    int w;
} arg_ldst_tag;

typedef struct {
    int rt2;
    int rt;
    int rn;
    int imm;
    int sz;
    int sign;
    int w;
    int p;
} arg_ldstpair;

typedef struct {
    int rd;
    int sf;
    int imm;
    int hw;
} arg_movw;

typedef struct {
    int q;
    int rd;
    int rn;
    int esz;
} arg_qrr_e;

typedef struct {
    int q;
    int rd;
    int rn;
    int imm;
    int esz;
} arg_qrri_e;

typedef struct {
    int q;
    int rd;
    int rn;
    int rm;
    int esz;
} arg_qrrr_e;

typedef struct {
    int q;
    int rd;
    int rn;
    int rm;
    int ra;
    int esz;
} arg_qrrrr_e;

typedef struct {
    int q;
    int rd;
    int rn;
    int rm;
    int idx;
    int esz;
} arg_qrrx_e;

typedef struct {
    int rn;
} arg_r;

typedef struct {
    int m;
} arg_reta;

typedef struct {
    int rd;
    int imm;
} arg_ri;

typedef struct {
    int rd;
    int rn;
    int esz;
} arg_rr_e;

typedef struct {
    int rd;
    int rn;
    int imm;
    int esz;
} arg_rri_e;

typedef struct {
    int rd;
    int rn;
    int sf;
    int dbm;
} arg_rri_log;

typedef struct {
    int rd;
    int rn;
    int imm;
    int sf;
} arg_rri_sf;

typedef struct {
    int rd;
    int rn;
    int uimm6;
    int uimm4;
} arg_rri_tag;

typedef struct {
    int rd;
    int rn;
    int rm;
    int esz;
} arg_rrr_e;

typedef struct {
    int rd;
    int rn;
    int rm;
    int ra;
    int esz;
} arg_rrrr_e;

typedef struct {
    int rd;
    int rn;
    int rm;
    int idx;
    int esz;
} arg_rrx_e;

typedef struct {
    int rs;
    int rn;
    int rd;
    int unpriv;
    int nontemp;
} arg_set;

typedef struct {
    int rn;
    int rt;
    int sz;
    int lasr;
} arg_stlr;

typedef struct {
    int rn;
    int rt;
    int rt2;
    int rs;
    int sz;
    int lasr;
} arg_stxr;

typedef struct {
    int rt;
    int imm;
    int nz;
    int bitpos;
} arg_tbz;

typedef arg_ri arg_ADR;
static bool trans_ADR(DisasContext *ctx, arg_ADR *a);
typedef arg_ri arg_ADRP;
static bool trans_ADRP(DisasContext *ctx, arg_ADRP *a);
typedef arg_rri_sf arg_ADD_i;
static bool trans_ADD_i(DisasContext *ctx, arg_ADD_i *a);
typedef arg_rri_sf arg_ADDS_i;
static bool trans_ADDS_i(DisasContext *ctx, arg_ADDS_i *a);
typedef arg_rri_sf arg_SUB_i;
static bool trans_SUB_i(DisasContext *ctx, arg_SUB_i *a);
typedef arg_rri_sf arg_SUBS_i;
static bool trans_SUBS_i(DisasContext *ctx, arg_SUBS_i *a);
typedef arg_rri_tag arg_ADDG_i;
static bool trans_ADDG_i(DisasContext *ctx, arg_ADDG_i *a);
typedef arg_rri_tag arg_SUBG_i;
static bool trans_SUBG_i(DisasContext *ctx, arg_SUBG_i *a);
typedef arg_rri_log arg_AND_i;
static bool trans_AND_i(DisasContext *ctx, arg_AND_i *a);
typedef arg_rri_log arg_ORR_i;
static bool trans_ORR_i(DisasContext *ctx, arg_ORR_i *a);
typedef arg_rri_log arg_EOR_i;
static bool trans_EOR_i(DisasContext *ctx, arg_EOR_i *a);
typedef arg_rri_log arg_ANDS_i;
static bool trans_ANDS_i(DisasContext *ctx, arg_ANDS_i *a);
typedef arg_movw arg_MOVN;
static bool trans_MOVN(DisasContext *ctx, arg_MOVN *a);
typedef arg_movw arg_MOVZ;
static bool trans_MOVZ(DisasContext *ctx, arg_MOVZ *a);
typedef arg_movw arg_MOVK;
static bool trans_MOVK(DisasContext *ctx, arg_MOVK *a);
typedef arg_bitfield arg_SBFM;
static bool trans_SBFM(DisasContext *ctx, arg_SBFM *a);
typedef arg_bitfield arg_BFM;
static bool trans_BFM(DisasContext *ctx, arg_BFM *a);
typedef arg_bitfield arg_UBFM;
static bool trans_UBFM(DisasContext *ctx, arg_UBFM *a);
typedef arg_extract arg_EXTR;
static bool trans_EXTR(DisasContext *ctx, arg_EXTR *a);
typedef arg_i arg_B;
static bool trans_B(DisasContext *ctx, arg_B *a);
typedef arg_i arg_BL;
static bool trans_BL(DisasContext *ctx, arg_BL *a);
typedef arg_cbz arg_CBZ;
static bool trans_CBZ(DisasContext *ctx, arg_CBZ *a);
typedef arg_tbz arg_TBZ;
static bool trans_TBZ(DisasContext *ctx, arg_TBZ *a);
typedef arg_disas_a6421 arg_B_cond;
static bool trans_B_cond(DisasContext *ctx, arg_B_cond *a);
typedef arg_r arg_BR;
static bool trans_BR(DisasContext *ctx, arg_BR *a);
typedef arg_r arg_BLR;
static bool trans_BLR(DisasContext *ctx, arg_BLR *a);
typedef arg_r arg_RET;
static bool trans_RET(DisasContext *ctx, arg_RET *a);
typedef arg_braz arg_BRAZ;
static bool trans_BRAZ(DisasContext *ctx, arg_BRAZ *a);
typedef arg_braz arg_BLRAZ;
static bool trans_BLRAZ(DisasContext *ctx, arg_BLRAZ *a);
typedef arg_reta arg_RETA;
static bool trans_RETA(DisasContext *ctx, arg_RETA *a);
typedef arg_bra arg_BRA;
static bool trans_BRA(DisasContext *ctx, arg_BRA *a);
typedef arg_bra arg_BLRA;
static bool trans_BLRA(DisasContext *ctx, arg_BLRA *a);
typedef arg_disas_a6425 arg_ERET;
static bool trans_ERET(DisasContext *ctx, arg_ERET *a);
typedef arg_reta arg_ERETA;
static bool trans_ERETA(DisasContext *ctx, arg_ERETA *a);
typedef arg_disas_a6425 arg_YIELD;
static bool trans_YIELD(DisasContext *ctx, arg_YIELD *a);
typedef arg_disas_a6425 arg_WFE;
static bool trans_WFE(DisasContext *ctx, arg_WFE *a);
typedef arg_disas_a6425 arg_WFI;
static bool trans_WFI(DisasContext *ctx, arg_WFI *a);
typedef arg_disas_a6425 arg_XPACLRI;
static bool trans_XPACLRI(DisasContext *ctx, arg_XPACLRI *a);
typedef arg_disas_a6425 arg_PACIA1716;
static bool trans_PACIA1716(DisasContext *ctx, arg_PACIA1716 *a);
typedef arg_disas_a6425 arg_PACIB1716;
static bool trans_PACIB1716(DisasContext *ctx, arg_PACIB1716 *a);
typedef arg_disas_a6425 arg_AUTIA1716;
static bool trans_AUTIA1716(DisasContext *ctx, arg_AUTIA1716 *a);
typedef arg_disas_a6425 arg_AUTIB1716;
static bool trans_AUTIB1716(DisasContext *ctx, arg_AUTIB1716 *a);
typedef arg_disas_a6425 arg_ESB;
static bool trans_ESB(DisasContext *ctx, arg_ESB *a);
typedef arg_disas_a6425 arg_PACIAZ;
static bool trans_PACIAZ(DisasContext *ctx, arg_PACIAZ *a);
typedef arg_disas_a6425 arg_PACIASP;
static bool trans_PACIASP(DisasContext *ctx, arg_PACIASP *a);
typedef arg_disas_a6425 arg_PACIBZ;
static bool trans_PACIBZ(DisasContext *ctx, arg_PACIBZ *a);
typedef arg_disas_a6425 arg_PACIBSP;
static bool trans_PACIBSP(DisasContext *ctx, arg_PACIBSP *a);
typedef arg_disas_a6425 arg_AUTIAZ;
static bool trans_AUTIAZ(DisasContext *ctx, arg_AUTIAZ *a);
typedef arg_disas_a6425 arg_AUTIASP;
static bool trans_AUTIASP(DisasContext *ctx, arg_AUTIASP *a);
typedef arg_disas_a6425 arg_AUTIBZ;
static bool trans_AUTIBZ(DisasContext *ctx, arg_AUTIBZ *a);
typedef arg_disas_a6425 arg_AUTIBSP;
static bool trans_AUTIBSP(DisasContext *ctx, arg_AUTIBSP *a);
typedef arg_disas_a6425 arg_NOP;
static bool trans_NOP(DisasContext *ctx, arg_NOP *a);
typedef arg_disas_a6426 arg_WFET;
static bool trans_WFET(DisasContext *ctx, arg_WFET *a);
typedef arg_disas_a6426 arg_WFIT;
static bool trans_WFIT(DisasContext *ctx, arg_WFIT *a);
typedef arg_disas_a6425 arg_CLREX;
static bool trans_CLREX(DisasContext *ctx, arg_CLREX *a);
typedef arg_disas_a6427 arg_DSB_DMB;
static bool trans_DSB_DMB(DisasContext *ctx, arg_DSB_DMB *a);
typedef arg_disas_a6425 arg_ISB;
static bool trans_ISB(DisasContext *ctx, arg_ISB *a);
typedef arg_disas_a6425 arg_SB;
static bool trans_SB(DisasContext *ctx, arg_SB *a);
typedef arg_disas_a6425 arg_CFINV;
static bool trans_CFINV(DisasContext *ctx, arg_CFINV *a);
typedef arg_disas_a6425 arg_XAFLAG;
static bool trans_XAFLAG(DisasContext *ctx, arg_XAFLAG *a);
typedef arg_disas_a6425 arg_AXFLAG;
static bool trans_AXFLAG(DisasContext *ctx, arg_AXFLAG *a);
typedef arg_i arg_MSR_i_UAO;
static bool trans_MSR_i_UAO(DisasContext *ctx, arg_MSR_i_UAO *a);
typedef arg_i arg_MSR_i_PAN;
static bool trans_MSR_i_PAN(DisasContext *ctx, arg_MSR_i_PAN *a);
typedef arg_i arg_MSR_i_SPSEL;
static bool trans_MSR_i_SPSEL(DisasContext *ctx, arg_MSR_i_SPSEL *a);
typedef arg_i arg_MSR_i_SBSS;
static bool trans_MSR_i_SBSS(DisasContext *ctx, arg_MSR_i_SBSS *a);
typedef arg_i arg_MSR_i_DIT;
static bool trans_MSR_i_DIT(DisasContext *ctx, arg_MSR_i_DIT *a);
typedef arg_i arg_MSR_i_TCO;
static bool trans_MSR_i_TCO(DisasContext *ctx, arg_MSR_i_TCO *a);
typedef arg_i arg_MSR_i_DAIFSET;
static bool trans_MSR_i_DAIFSET(DisasContext *ctx, arg_MSR_i_DAIFSET *a);
typedef arg_i arg_MSR_i_DAIFCLEAR;
static bool trans_MSR_i_DAIFCLEAR(DisasContext *ctx, arg_MSR_i_DAIFCLEAR *a);
typedef arg_i arg_MSR_i_ALLINT;
static bool trans_MSR_i_ALLINT(DisasContext *ctx, arg_MSR_i_ALLINT *a);
typedef arg_disas_a6428 arg_MSR_i_SVCR;
static bool trans_MSR_i_SVCR(DisasContext *ctx, arg_MSR_i_SVCR *a);
typedef arg_disas_a6429 arg_SYS;
static bool trans_SYS(DisasContext *ctx, arg_SYS *a);
typedef arg_i arg_SVC;
static bool trans_SVC(DisasContext *ctx, arg_SVC *a);
typedef arg_i arg_HVC;
static bool trans_HVC(DisasContext *ctx, arg_HVC *a);
typedef arg_i arg_SMC;
static bool trans_SMC(DisasContext *ctx, arg_SMC *a);
typedef arg_i arg_BRK;
static bool trans_BRK(DisasContext *ctx, arg_BRK *a);
typedef arg_i arg_HLT;
static bool trans_HLT(DisasContext *ctx, arg_HLT *a);
typedef arg_stxr arg_STXR;
static bool trans_STXR(DisasContext *ctx, arg_STXR *a);
typedef arg_stxr arg_LDXR;
static bool trans_LDXR(DisasContext *ctx, arg_LDXR *a);
typedef arg_stlr arg_STLR;
static bool trans_STLR(DisasContext *ctx, arg_STLR *a);
typedef arg_stlr arg_LDAR;
static bool trans_LDAR(DisasContext *ctx, arg_LDAR *a);
typedef arg_stxr arg_STXP;
static bool trans_STXP(DisasContext *ctx, arg_STXP *a);
typedef arg_stxr arg_LDXP;
static bool trans_LDXP(DisasContext *ctx, arg_LDXP *a);
typedef arg_disas_a6432 arg_CASP;
static bool trans_CASP(DisasContext *ctx, arg_CASP *a);
typedef arg_disas_a6432 arg_CAS;
static bool trans_CAS(DisasContext *ctx, arg_CAS *a);
typedef arg_ldlit arg_LD_lit;
static bool trans_LD_lit(DisasContext *ctx, arg_LD_lit *a);
typedef arg_ldlit arg_LD_lit_v;
static bool trans_LD_lit_v(DisasContext *ctx, arg_LD_lit_v *a);
typedef arg_ldstpair arg_STP;
static bool trans_STP(DisasContext *ctx, arg_STP *a);
typedef arg_ldstpair arg_LDP;
static bool trans_LDP(DisasContext *ctx, arg_LDP *a);
typedef arg_ldstpair arg_STP_v;
static bool trans_STP_v(DisasContext *ctx, arg_STP_v *a);
typedef arg_ldstpair arg_LDP_v;
static bool trans_LDP_v(DisasContext *ctx, arg_LDP_v *a);
typedef arg_ldstpair arg_STGP;
static bool trans_STGP(DisasContext *ctx, arg_STGP *a);
typedef arg_ldst_imm arg_STR_i;
static bool trans_STR_i(DisasContext *ctx, arg_STR_i *a);
typedef arg_ldst_imm arg_LDR_i;
static bool trans_LDR_i(DisasContext *ctx, arg_LDR_i *a);
typedef arg_ldst_imm arg_STR_v_i;
static bool trans_STR_v_i(DisasContext *ctx, arg_STR_v_i *a);
typedef arg_ldst_imm arg_LDR_v_i;
static bool trans_LDR_v_i(DisasContext *ctx, arg_LDR_v_i *a);
typedef arg_ldst arg_STR;
static bool trans_STR(DisasContext *ctx, arg_STR *a);
typedef arg_ldst arg_LDR;
static bool trans_LDR(DisasContext *ctx, arg_LDR *a);
typedef arg_ldst arg_STR_v;
static bool trans_STR_v(DisasContext *ctx, arg_STR_v *a);
typedef arg_ldst arg_LDR_v;
static bool trans_LDR_v(DisasContext *ctx, arg_LDR_v *a);
typedef arg_atomic arg_LDADD;
static bool trans_LDADD(DisasContext *ctx, arg_LDADD *a);
typedef arg_atomic arg_LDCLR;
static bool trans_LDCLR(DisasContext *ctx, arg_LDCLR *a);
typedef arg_atomic arg_LDEOR;
static bool trans_LDEOR(DisasContext *ctx, arg_LDEOR *a);
typedef arg_atomic arg_LDSET;
static bool trans_LDSET(DisasContext *ctx, arg_LDSET *a);
typedef arg_atomic arg_LDSMAX;
static bool trans_LDSMAX(DisasContext *ctx, arg_LDSMAX *a);
typedef arg_atomic arg_LDSMIN;
static bool trans_LDSMIN(DisasContext *ctx, arg_LDSMIN *a);
typedef arg_atomic arg_LDUMAX;
static bool trans_LDUMAX(DisasContext *ctx, arg_LDUMAX *a);
typedef arg_atomic arg_LDUMIN;
static bool trans_LDUMIN(DisasContext *ctx, arg_LDUMIN *a);
typedef arg_atomic arg_SWP;
static bool trans_SWP(DisasContext *ctx, arg_SWP *a);
typedef arg_disas_a6438 arg_LDAPR;
static bool trans_LDAPR(DisasContext *ctx, arg_LDAPR *a);
typedef arg_disas_a6439 arg_LDRA;
static bool trans_LDRA(DisasContext *ctx, arg_LDRA *a);
typedef arg_ldapr_stlr_i arg_STLR_i;
static bool trans_STLR_i(DisasContext *ctx, arg_STLR_i *a);
typedef arg_ldapr_stlr_i arg_LDAPR_i;
static bool trans_LDAPR_i(DisasContext *ctx, arg_LDAPR_i *a);
typedef arg_ldst_mult arg_ST_mult;
static bool trans_ST_mult(DisasContext *ctx, arg_ST_mult *a);
typedef arg_ldst_mult arg_LD_mult;
static bool trans_LD_mult(DisasContext *ctx, arg_LD_mult *a);
typedef arg_ldst_single arg_ST_single;
static bool trans_ST_single(DisasContext *ctx, arg_ST_single *a);
typedef arg_ldst_single arg_LD_single;
static bool trans_LD_single(DisasContext *ctx, arg_LD_single *a);
typedef arg_disas_a6443 arg_LD_single_repl;
static bool trans_LD_single_repl(DisasContext *ctx, arg_LD_single_repl *a);
typedef arg_ldst_tag arg_STZGM;
static bool trans_STZGM(DisasContext *ctx, arg_STZGM *a);
typedef arg_ldst_tag arg_STG;
static bool trans_STG(DisasContext *ctx, arg_STG *a);
typedef arg_ldst_tag arg_LDG;
static bool trans_LDG(DisasContext *ctx, arg_LDG *a);
typedef arg_ldst_tag arg_STZG;
static bool trans_STZG(DisasContext *ctx, arg_STZG *a);
typedef arg_ldst_tag arg_STGM;
static bool trans_STGM(DisasContext *ctx, arg_STGM *a);
typedef arg_ldst_tag arg_ST2G;
static bool trans_ST2G(DisasContext *ctx, arg_ST2G *a);
typedef arg_ldst_tag arg_LDGM;
static bool trans_LDGM(DisasContext *ctx, arg_LDGM *a);
typedef arg_ldst_tag arg_STZ2G;
static bool trans_STZ2G(DisasContext *ctx, arg_STZ2G *a);
typedef arg_set arg_SETP;
static bool trans_SETP(DisasContext *ctx, arg_SETP *a);
typedef arg_set arg_SETM;
static bool trans_SETM(DisasContext *ctx, arg_SETM *a);
typedef arg_set arg_SETE;
static bool trans_SETE(DisasContext *ctx, arg_SETE *a);
typedef arg_set arg_SETGP;
static bool trans_SETGP(DisasContext *ctx, arg_SETGP *a);
typedef arg_set arg_SETGM;
static bool trans_SETGM(DisasContext *ctx, arg_SETGM *a);
typedef arg_set arg_SETGE;
static bool trans_SETGE(DisasContext *ctx, arg_SETGE *a);
typedef arg_cpy arg_CPYFP;
static bool trans_CPYFP(DisasContext *ctx, arg_CPYFP *a);
typedef arg_cpy arg_CPYFM;
static bool trans_CPYFM(DisasContext *ctx, arg_CPYFM *a);
typedef arg_cpy arg_CPYFE;
static bool trans_CPYFE(DisasContext *ctx, arg_CPYFE *a);
typedef arg_cpy arg_CPYP;
static bool trans_CPYP(DisasContext *ctx, arg_CPYP *a);
typedef arg_cpy arg_CPYM;
static bool trans_CPYM(DisasContext *ctx, arg_CPYM *a);
typedef arg_cpy arg_CPYE;
static bool trans_CPYE(DisasContext *ctx, arg_CPYE *a);
typedef arg_qrrr_e arg_AESE;
static bool trans_AESE(DisasContext *ctx, arg_AESE *a);
typedef arg_qrrr_e arg_AESD;
static bool trans_AESD(DisasContext *ctx, arg_AESD *a);
typedef arg_qrr_e arg_AESMC;
static bool trans_AESMC(DisasContext *ctx, arg_AESMC *a);
typedef arg_qrr_e arg_AESIMC;
static bool trans_AESIMC(DisasContext *ctx, arg_AESIMC *a);
typedef arg_qrrr_e arg_SHA1C;
static bool trans_SHA1C(DisasContext *ctx, arg_SHA1C *a);
typedef arg_qrrr_e arg_SHA1P;
static bool trans_SHA1P(DisasContext *ctx, arg_SHA1P *a);
typedef arg_qrrr_e arg_SHA1M;
static bool trans_SHA1M(DisasContext *ctx, arg_SHA1M *a);
typedef arg_qrrr_e arg_SHA1SU0;
static bool trans_SHA1SU0(DisasContext *ctx, arg_SHA1SU0 *a);
typedef arg_qrrr_e arg_SHA256H;
static bool trans_SHA256H(DisasContext *ctx, arg_SHA256H *a);
typedef arg_qrrr_e arg_SHA256H2;
static bool trans_SHA256H2(DisasContext *ctx, arg_SHA256H2 *a);
typedef arg_qrrr_e arg_SHA256SU1;
static bool trans_SHA256SU1(DisasContext *ctx, arg_SHA256SU1 *a);
typedef arg_qrr_e arg_SHA1H;
static bool trans_SHA1H(DisasContext *ctx, arg_SHA1H *a);
typedef arg_qrr_e arg_SHA1SU1;
static bool trans_SHA1SU1(DisasContext *ctx, arg_SHA1SU1 *a);
typedef arg_qrr_e arg_SHA256SU0;
static bool trans_SHA256SU0(DisasContext *ctx, arg_SHA256SU0 *a);
typedef arg_qrrr_e arg_SHA512H;
static bool trans_SHA512H(DisasContext *ctx, arg_SHA512H *a);
typedef arg_qrrr_e arg_SHA512H2;
static bool trans_SHA512H2(DisasContext *ctx, arg_SHA512H2 *a);
typedef arg_qrrr_e arg_SHA512SU1;
static bool trans_SHA512SU1(DisasContext *ctx, arg_SHA512SU1 *a);
typedef arg_qrrr_e arg_RAX1;
static bool trans_RAX1(DisasContext *ctx, arg_RAX1 *a);
typedef arg_qrrr_e arg_SM3PARTW1;
static bool trans_SM3PARTW1(DisasContext *ctx, arg_SM3PARTW1 *a);
typedef arg_qrrr_e arg_SM3PARTW2;
static bool trans_SM3PARTW2(DisasContext *ctx, arg_SM3PARTW2 *a);
typedef arg_qrrr_e arg_SM4EKEY;
static bool trans_SM4EKEY(DisasContext *ctx, arg_SM4EKEY *a);
typedef arg_qrr_e arg_SHA512SU0;
static bool trans_SHA512SU0(DisasContext *ctx, arg_SHA512SU0 *a);
typedef arg_qrrr_e arg_SM4E;
static bool trans_SM4E(DisasContext *ctx, arg_SM4E *a);
typedef arg_qrrrr_e arg_EOR3;
static bool trans_EOR3(DisasContext *ctx, arg_EOR3 *a);
typedef arg_qrrrr_e arg_BCAX;
static bool trans_BCAX(DisasContext *ctx, arg_BCAX *a);
typedef arg_qrrrr_e arg_SM3SS1;
static bool trans_SM3SS1(DisasContext *ctx, arg_SM3SS1 *a);
typedef arg_crypto3i arg_SM3TT1A;
static bool trans_SM3TT1A(DisasContext *ctx, arg_SM3TT1A *a);
typedef arg_crypto3i arg_SM3TT1B;
static bool trans_SM3TT1B(DisasContext *ctx, arg_SM3TT1B *a);
typedef arg_crypto3i arg_SM3TT2A;
static bool trans_SM3TT2A(DisasContext *ctx, arg_SM3TT2A *a);
typedef arg_crypto3i arg_SM3TT2B;
static bool trans_SM3TT2B(DisasContext *ctx, arg_SM3TT2B *a);
typedef arg_crypto3i arg_XAR;
static bool trans_XAR(DisasContext *ctx, arg_XAR *a);
typedef arg_disas_a6448 arg_DUP_element_s;
static bool trans_DUP_element_s(DisasContext *ctx, arg_DUP_element_s *a);
typedef arg_disas_a6449 arg_DUP_element_v;
static bool trans_DUP_element_v(DisasContext *ctx, arg_DUP_element_v *a);
typedef arg_disas_a6449 arg_DUP_general;
static bool trans_DUP_general(DisasContext *ctx, arg_DUP_general *a);
typedef arg_disas_a6448 arg_INS_general;
static bool trans_INS_general(DisasContext *ctx, arg_INS_general *a);
typedef arg_disas_a6449 arg_SMOV;
static bool trans_SMOV(DisasContext *ctx, arg_SMOV *a);
typedef arg_disas_a6449 arg_UMOV;
static bool trans_UMOV(DisasContext *ctx, arg_UMOV *a);
typedef arg_disas_a6450 arg_INS_element;
static bool trans_INS_element(DisasContext *ctx, arg_INS_element *a);
typedef arg_rrr_e arg_FADD_s;
static bool trans_FADD_s(DisasContext *ctx, arg_FADD_s *a);
typedef arg_rrr_e arg_FSUB_s;
static bool trans_FSUB_s(DisasContext *ctx, arg_FSUB_s *a);
typedef arg_rrr_e arg_FDIV_s;
static bool trans_FDIV_s(DisasContext *ctx, arg_FDIV_s *a);
typedef arg_rrr_e arg_FMUL_s;
static bool trans_FMUL_s(DisasContext *ctx, arg_FMUL_s *a);
typedef arg_rrr_e arg_FNMUL_s;
static bool trans_FNMUL_s(DisasContext *ctx, arg_FNMUL_s *a);
typedef arg_rrr_e arg_FMAX_s;
static bool trans_FMAX_s(DisasContext *ctx, arg_FMAX_s *a);
typedef arg_rrr_e arg_FMIN_s;
static bool trans_FMIN_s(DisasContext *ctx, arg_FMIN_s *a);
typedef arg_rrr_e arg_FMAXNM_s;
static bool trans_FMAXNM_s(DisasContext *ctx, arg_FMAXNM_s *a);
typedef arg_rrr_e arg_FMINNM_s;
static bool trans_FMINNM_s(DisasContext *ctx, arg_FMINNM_s *a);
typedef arg_rrr_e arg_FMULX_s;
static bool trans_FMULX_s(DisasContext *ctx, arg_FMULX_s *a);
typedef arg_rrr_e arg_FCMEQ_s;
static bool trans_FCMEQ_s(DisasContext *ctx, arg_FCMEQ_s *a);
typedef arg_rrr_e arg_FCMGE_s;
static bool trans_FCMGE_s(DisasContext *ctx, arg_FCMGE_s *a);
typedef arg_rrr_e arg_FCMGT_s;
static bool trans_FCMGT_s(DisasContext *ctx, arg_FCMGT_s *a);
typedef arg_rrr_e arg_FACGE_s;
static bool trans_FACGE_s(DisasContext *ctx, arg_FACGE_s *a);
typedef arg_rrr_e arg_FACGT_s;
static bool trans_FACGT_s(DisasContext *ctx, arg_FACGT_s *a);
typedef arg_rrr_e arg_FABD_s;
static bool trans_FABD_s(DisasContext *ctx, arg_FABD_s *a);
typedef arg_rrr_e arg_FRECPS_s;
static bool trans_FRECPS_s(DisasContext *ctx, arg_FRECPS_s *a);
typedef arg_rrr_e arg_FRSQRTS_s;
static bool trans_FRSQRTS_s(DisasContext *ctx, arg_FRSQRTS_s *a);
typedef arg_rrr_e arg_SQADD_s;
static bool trans_SQADD_s(DisasContext *ctx, arg_SQADD_s *a);
typedef arg_rrr_e arg_UQADD_s;
static bool trans_UQADD_s(DisasContext *ctx, arg_UQADD_s *a);
typedef arg_rrr_e arg_SQSUB_s;
static bool trans_SQSUB_s(DisasContext *ctx, arg_SQSUB_s *a);
typedef arg_rrr_e arg_UQSUB_s;
static bool trans_UQSUB_s(DisasContext *ctx, arg_UQSUB_s *a);
typedef arg_rrr_e arg_SUQADD_s;
static bool trans_SUQADD_s(DisasContext *ctx, arg_SUQADD_s *a);
typedef arg_rrr_e arg_USQADD_s;
static bool trans_USQADD_s(DisasContext *ctx, arg_USQADD_s *a);
typedef arg_rrr_e arg_SSHL_s;
static bool trans_SSHL_s(DisasContext *ctx, arg_SSHL_s *a);
typedef arg_rrr_e arg_USHL_s;
static bool trans_USHL_s(DisasContext *ctx, arg_USHL_s *a);
typedef arg_rrr_e arg_SRSHL_s;
static bool trans_SRSHL_s(DisasContext *ctx, arg_SRSHL_s *a);
typedef arg_rrr_e arg_URSHL_s;
static bool trans_URSHL_s(DisasContext *ctx, arg_URSHL_s *a);
typedef arg_rrr_e arg_SQSHL_s;
static bool trans_SQSHL_s(DisasContext *ctx, arg_SQSHL_s *a);
typedef arg_rrr_e arg_UQSHL_s;
static bool trans_UQSHL_s(DisasContext *ctx, arg_UQSHL_s *a);
typedef arg_rrr_e arg_SQRSHL_s;
static bool trans_SQRSHL_s(DisasContext *ctx, arg_SQRSHL_s *a);
typedef arg_rrr_e arg_UQRSHL_s;
static bool trans_UQRSHL_s(DisasContext *ctx, arg_UQRSHL_s *a);
typedef arg_rrr_e arg_ADD_s;
static bool trans_ADD_s(DisasContext *ctx, arg_ADD_s *a);
typedef arg_rrr_e arg_SUB_s;
static bool trans_SUB_s(DisasContext *ctx, arg_SUB_s *a);
typedef arg_rrr_e arg_CMGT_s;
static bool trans_CMGT_s(DisasContext *ctx, arg_CMGT_s *a);
typedef arg_rrr_e arg_CMHI_s;
static bool trans_CMHI_s(DisasContext *ctx, arg_CMHI_s *a);
typedef arg_rrr_e arg_CMGE_s;
static bool trans_CMGE_s(DisasContext *ctx, arg_CMGE_s *a);
typedef arg_rrr_e arg_CMHS_s;
static bool trans_CMHS_s(DisasContext *ctx, arg_CMHS_s *a);
typedef arg_rrr_e arg_CMTST_s;
static bool trans_CMTST_s(DisasContext *ctx, arg_CMTST_s *a);
typedef arg_rrr_e arg_CMEQ_s;
static bool trans_CMEQ_s(DisasContext *ctx, arg_CMEQ_s *a);
typedef arg_rrr_e arg_SQDMULH_s;
static bool trans_SQDMULH_s(DisasContext *ctx, arg_SQDMULH_s *a);
typedef arg_rrr_e arg_SQRDMULH_s;
static bool trans_SQRDMULH_s(DisasContext *ctx, arg_SQRDMULH_s *a);
typedef arg_rrr_e arg_SQRDMLAH_s;
static bool trans_SQRDMLAH_s(DisasContext *ctx, arg_SQRDMLAH_s *a);
typedef arg_rrr_e arg_SQRDMLSH_s;
static bool trans_SQRDMLSH_s(DisasContext *ctx, arg_SQRDMLSH_s *a);
typedef arg_rrx_e arg_SQDMULL_si;
static bool trans_SQDMULL_si(DisasContext *ctx, arg_SQDMULL_si *a);
typedef arg_rrx_e arg_SQDMLAL_si;
static bool trans_SQDMLAL_si(DisasContext *ctx, arg_SQDMLAL_si *a);
typedef arg_rrx_e arg_SQDMLSL_si;
static bool trans_SQDMLSL_si(DisasContext *ctx, arg_SQDMLSL_si *a);
typedef arg_rr_e arg_FADDP_s;
static bool trans_FADDP_s(DisasContext *ctx, arg_FADDP_s *a);
typedef arg_rr_e arg_FMAXP_s;
static bool trans_FMAXP_s(DisasContext *ctx, arg_FMAXP_s *a);
typedef arg_rr_e arg_FMINP_s;
static bool trans_FMINP_s(DisasContext *ctx, arg_FMINP_s *a);
typedef arg_rr_e arg_FMAXNMP_s;
static bool trans_FMAXNMP_s(DisasContext *ctx, arg_FMAXNMP_s *a);
typedef arg_rr_e arg_FMINNMP_s;
static bool trans_FMINNMP_s(DisasContext *ctx, arg_FMINNMP_s *a);
typedef arg_rr_e arg_ADDP_s;
static bool trans_ADDP_s(DisasContext *ctx, arg_ADDP_s *a);
typedef arg_qrrr_e arg_FADD_v;
static bool trans_FADD_v(DisasContext *ctx, arg_FADD_v *a);
typedef arg_qrrr_e arg_FSUB_v;
static bool trans_FSUB_v(DisasContext *ctx, arg_FSUB_v *a);
typedef arg_qrrr_e arg_FDIV_v;
static bool trans_FDIV_v(DisasContext *ctx, arg_FDIV_v *a);
typedef arg_qrrr_e arg_FMUL_v;
static bool trans_FMUL_v(DisasContext *ctx, arg_FMUL_v *a);
typedef arg_qrrr_e arg_FMAX_v;
static bool trans_FMAX_v(DisasContext *ctx, arg_FMAX_v *a);
typedef arg_qrrr_e arg_FMIN_v;
static bool trans_FMIN_v(DisasContext *ctx, arg_FMIN_v *a);
typedef arg_qrrr_e arg_FMAXNM_v;
static bool trans_FMAXNM_v(DisasContext *ctx, arg_FMAXNM_v *a);
typedef arg_qrrr_e arg_FMINNM_v;
static bool trans_FMINNM_v(DisasContext *ctx, arg_FMINNM_v *a);
typedef arg_qrrr_e arg_FMULX_v;
static bool trans_FMULX_v(DisasContext *ctx, arg_FMULX_v *a);
typedef arg_qrrr_e arg_FMLA_v;
static bool trans_FMLA_v(DisasContext *ctx, arg_FMLA_v *a);
typedef arg_qrrr_e arg_FMLS_v;
static bool trans_FMLS_v(DisasContext *ctx, arg_FMLS_v *a);
typedef arg_qrrr_e arg_FMLAL_v;
static bool trans_FMLAL_v(DisasContext *ctx, arg_FMLAL_v *a);
typedef arg_qrrr_e arg_FMLSL_v;
static bool trans_FMLSL_v(DisasContext *ctx, arg_FMLSL_v *a);
typedef arg_qrrr_e arg_FMLAL2_v;
static bool trans_FMLAL2_v(DisasContext *ctx, arg_FMLAL2_v *a);
typedef arg_qrrr_e arg_FMLSL2_v;
static bool trans_FMLSL2_v(DisasContext *ctx, arg_FMLSL2_v *a);
typedef arg_qrrr_e arg_FCMEQ_v;
static bool trans_FCMEQ_v(DisasContext *ctx, arg_FCMEQ_v *a);
typedef arg_qrrr_e arg_FCMGE_v;
static bool trans_FCMGE_v(DisasContext *ctx, arg_FCMGE_v *a);
typedef arg_qrrr_e arg_FCMGT_v;
static bool trans_FCMGT_v(DisasContext *ctx, arg_FCMGT_v *a);
typedef arg_qrrr_e arg_FACGE_v;
static bool trans_FACGE_v(DisasContext *ctx, arg_FACGE_v *a);
typedef arg_qrrr_e arg_FACGT_v;
static bool trans_FACGT_v(DisasContext *ctx, arg_FACGT_v *a);
typedef arg_qrrr_e arg_FABD_v;
static bool trans_FABD_v(DisasContext *ctx, arg_FABD_v *a);
typedef arg_qrrr_e arg_FRECPS_v;
static bool trans_FRECPS_v(DisasContext *ctx, arg_FRECPS_v *a);
typedef arg_qrrr_e arg_FRSQRTS_v;
static bool trans_FRSQRTS_v(DisasContext *ctx, arg_FRSQRTS_v *a);
typedef arg_qrrr_e arg_FADDP_v;
static bool trans_FADDP_v(DisasContext *ctx, arg_FADDP_v *a);
typedef arg_qrrr_e arg_FMAXP_v;
static bool trans_FMAXP_v(DisasContext *ctx, arg_FMAXP_v *a);
typedef arg_qrrr_e arg_FMINP_v;
static bool trans_FMINP_v(DisasContext *ctx, arg_FMINP_v *a);
typedef arg_qrrr_e arg_FMAXNMP_v;
static bool trans_FMAXNMP_v(DisasContext *ctx, arg_FMAXNMP_v *a);
typedef arg_qrrr_e arg_FMINNMP_v;
static bool trans_FMINNMP_v(DisasContext *ctx, arg_FMINNMP_v *a);
typedef arg_qrrr_e arg_ADDP_v;
static bool trans_ADDP_v(DisasContext *ctx, arg_ADDP_v *a);
typedef arg_qrrr_e arg_SMAXP_v;
static bool trans_SMAXP_v(DisasContext *ctx, arg_SMAXP_v *a);
typedef arg_qrrr_e arg_SMINP_v;
static bool trans_SMINP_v(DisasContext *ctx, arg_SMINP_v *a);
typedef arg_qrrr_e arg_UMAXP_v;
static bool trans_UMAXP_v(DisasContext *ctx, arg_UMAXP_v *a);
typedef arg_qrrr_e arg_UMINP_v;
static bool trans_UMINP_v(DisasContext *ctx, arg_UMINP_v *a);
typedef arg_qrrr_e arg_AND_v;
static bool trans_AND_v(DisasContext *ctx, arg_AND_v *a);
typedef arg_qrrr_e arg_BIC_v;
static bool trans_BIC_v(DisasContext *ctx, arg_BIC_v *a);
typedef arg_qrrr_e arg_ORR_v;
static bool trans_ORR_v(DisasContext *ctx, arg_ORR_v *a);
typedef arg_qrrr_e arg_ORN_v;
static bool trans_ORN_v(DisasContext *ctx, arg_ORN_v *a);
typedef arg_qrrr_e arg_EOR_v;
static bool trans_EOR_v(DisasContext *ctx, arg_EOR_v *a);
typedef arg_qrrr_e arg_BSL_v;
static bool trans_BSL_v(DisasContext *ctx, arg_BSL_v *a);
typedef arg_qrrr_e arg_BIT_v;
static bool trans_BIT_v(DisasContext *ctx, arg_BIT_v *a);
typedef arg_qrrr_e arg_BIF_v;
static bool trans_BIF_v(DisasContext *ctx, arg_BIF_v *a);
typedef arg_qrrr_e arg_SQADD_v;
static bool trans_SQADD_v(DisasContext *ctx, arg_SQADD_v *a);
typedef arg_qrrr_e arg_UQADD_v;
static bool trans_UQADD_v(DisasContext *ctx, arg_UQADD_v *a);
typedef arg_qrrr_e arg_SQSUB_v;
static bool trans_SQSUB_v(DisasContext *ctx, arg_SQSUB_v *a);
typedef arg_qrrr_e arg_UQSUB_v;
static bool trans_UQSUB_v(DisasContext *ctx, arg_UQSUB_v *a);
typedef arg_qrrr_e arg_SUQADD_v;
static bool trans_SUQADD_v(DisasContext *ctx, arg_SUQADD_v *a);
typedef arg_qrrr_e arg_USQADD_v;
static bool trans_USQADD_v(DisasContext *ctx, arg_USQADD_v *a);
typedef arg_qrrr_e arg_SSHL_v;
static bool trans_SSHL_v(DisasContext *ctx, arg_SSHL_v *a);
typedef arg_qrrr_e arg_USHL_v;
static bool trans_USHL_v(DisasContext *ctx, arg_USHL_v *a);
typedef arg_qrrr_e arg_SRSHL_v;
static bool trans_SRSHL_v(DisasContext *ctx, arg_SRSHL_v *a);
typedef arg_qrrr_e arg_URSHL_v;
static bool trans_URSHL_v(DisasContext *ctx, arg_URSHL_v *a);
typedef arg_qrrr_e arg_SQSHL_v;
static bool trans_SQSHL_v(DisasContext *ctx, arg_SQSHL_v *a);
typedef arg_qrrr_e arg_UQSHL_v;
static bool trans_UQSHL_v(DisasContext *ctx, arg_UQSHL_v *a);
typedef arg_qrrr_e arg_SQRSHL_v;
static bool trans_SQRSHL_v(DisasContext *ctx, arg_SQRSHL_v *a);
typedef arg_qrrr_e arg_UQRSHL_v;
static bool trans_UQRSHL_v(DisasContext *ctx, arg_UQRSHL_v *a);
typedef arg_qrrr_e arg_ADD_v;
static bool trans_ADD_v(DisasContext *ctx, arg_ADD_v *a);
typedef arg_qrrr_e arg_SUB_v;
static bool trans_SUB_v(DisasContext *ctx, arg_SUB_v *a);
typedef arg_qrrr_e arg_CMGT_v;
static bool trans_CMGT_v(DisasContext *ctx, arg_CMGT_v *a);
typedef arg_qrrr_e arg_CMHI_v;
static bool trans_CMHI_v(DisasContext *ctx, arg_CMHI_v *a);
typedef arg_qrrr_e arg_CMGE_v;
static bool trans_CMGE_v(DisasContext *ctx, arg_CMGE_v *a);
typedef arg_qrrr_e arg_CMHS_v;
static bool trans_CMHS_v(DisasContext *ctx, arg_CMHS_v *a);
typedef arg_qrrr_e arg_CMTST_v;
static bool trans_CMTST_v(DisasContext *ctx, arg_CMTST_v *a);
typedef arg_qrrr_e arg_CMEQ_v;
static bool trans_CMEQ_v(DisasContext *ctx, arg_CMEQ_v *a);
typedef arg_qrrr_e arg_SHADD_v;
static bool trans_SHADD_v(DisasContext *ctx, arg_SHADD_v *a);
typedef arg_qrrr_e arg_UHADD_v;
static bool trans_UHADD_v(DisasContext *ctx, arg_UHADD_v *a);
typedef arg_qrrr_e arg_SHSUB_v;
static bool trans_SHSUB_v(DisasContext *ctx, arg_SHSUB_v *a);
typedef arg_qrrr_e arg_UHSUB_v;
static bool trans_UHSUB_v(DisasContext *ctx, arg_UHSUB_v *a);
typedef arg_qrrr_e arg_SRHADD_v;
static bool trans_SRHADD_v(DisasContext *ctx, arg_SRHADD_v *a);
typedef arg_qrrr_e arg_URHADD_v;
static bool trans_URHADD_v(DisasContext *ctx, arg_URHADD_v *a);
typedef arg_qrrr_e arg_SMAX_v;
static bool trans_SMAX_v(DisasContext *ctx, arg_SMAX_v *a);
typedef arg_qrrr_e arg_UMAX_v;
static bool trans_UMAX_v(DisasContext *ctx, arg_UMAX_v *a);
typedef arg_qrrr_e arg_SMIN_v;
static bool trans_SMIN_v(DisasContext *ctx, arg_SMIN_v *a);
typedef arg_qrrr_e arg_UMIN_v;
static bool trans_UMIN_v(DisasContext *ctx, arg_UMIN_v *a);
typedef arg_qrrr_e arg_SABD_v;
static bool trans_SABD_v(DisasContext *ctx, arg_SABD_v *a);
typedef arg_qrrr_e arg_UABD_v;
static bool trans_UABD_v(DisasContext *ctx, arg_UABD_v *a);
typedef arg_qrrr_e arg_SABA_v;
static bool trans_SABA_v(DisasContext *ctx, arg_SABA_v *a);
typedef arg_qrrr_e arg_UABA_v;
static bool trans_UABA_v(DisasContext *ctx, arg_UABA_v *a);
typedef arg_qrrr_e arg_MUL_v;
static bool trans_MUL_v(DisasContext *ctx, arg_MUL_v *a);
typedef arg_qrrr_e arg_PMUL_v;
static bool trans_PMUL_v(DisasContext *ctx, arg_PMUL_v *a);
typedef arg_qrrr_e arg_MLA_v;
static bool trans_MLA_v(DisasContext *ctx, arg_MLA_v *a);
typedef arg_qrrr_e arg_MLS_v;
static bool trans_MLS_v(DisasContext *ctx, arg_MLS_v *a);
typedef arg_qrrr_e arg_SQDMULH_v;
static bool trans_SQDMULH_v(DisasContext *ctx, arg_SQDMULH_v *a);
typedef arg_qrrr_e arg_SQRDMULH_v;
static bool trans_SQRDMULH_v(DisasContext *ctx, arg_SQRDMULH_v *a);
typedef arg_qrrr_e arg_SQRDMLAH_v;
static bool trans_SQRDMLAH_v(DisasContext *ctx, arg_SQRDMLAH_v *a);
typedef arg_qrrr_e arg_SQRDMLSH_v;
static bool trans_SQRDMLSH_v(DisasContext *ctx, arg_SQRDMLSH_v *a);
typedef arg_qrrr_e arg_SDOT_v;
static bool trans_SDOT_v(DisasContext *ctx, arg_SDOT_v *a);
typedef arg_qrrr_e arg_UDOT_v;
static bool trans_UDOT_v(DisasContext *ctx, arg_UDOT_v *a);
typedef arg_qrrr_e arg_USDOT_v;
static bool trans_USDOT_v(DisasContext *ctx, arg_USDOT_v *a);
typedef arg_qrrr_e arg_BFDOT_v;
static bool trans_BFDOT_v(DisasContext *ctx, arg_BFDOT_v *a);
typedef arg_qrrr_e arg_BFMLAL_v;
static bool trans_BFMLAL_v(DisasContext *ctx, arg_BFMLAL_v *a);
typedef arg_qrrr_e arg_BFMMLA;
static bool trans_BFMMLA(DisasContext *ctx, arg_BFMMLA *a);
typedef arg_qrrr_e arg_SMMLA;
static bool trans_SMMLA(DisasContext *ctx, arg_SMMLA *a);
typedef arg_qrrr_e arg_UMMLA;
static bool trans_UMMLA(DisasContext *ctx, arg_UMMLA *a);
typedef arg_qrrr_e arg_USMMLA;
static bool trans_USMMLA(DisasContext *ctx, arg_USMMLA *a);
typedef arg_qrrr_e arg_FCADD_90;
static bool trans_FCADD_90(DisasContext *ctx, arg_FCADD_90 *a);
typedef arg_qrrr_e arg_FCADD_270;
static bool trans_FCADD_270(DisasContext *ctx, arg_FCADD_270 *a);
typedef arg_disas_a6451 arg_FCMLA_v;
static bool trans_FCMLA_v(DisasContext *ctx, arg_FCMLA_v *a);
typedef arg_qrrr_e arg_SMULL_v;
static bool trans_SMULL_v(DisasContext *ctx, arg_SMULL_v *a);
typedef arg_qrrr_e arg_UMULL_v;
static bool trans_UMULL_v(DisasContext *ctx, arg_UMULL_v *a);
typedef arg_qrrr_e arg_SMLAL_v;
static bool trans_SMLAL_v(DisasContext *ctx, arg_SMLAL_v *a);
typedef arg_qrrr_e arg_UMLAL_v;
static bool trans_UMLAL_v(DisasContext *ctx, arg_UMLAL_v *a);
typedef arg_qrrr_e arg_SMLSL_v;
static bool trans_SMLSL_v(DisasContext *ctx, arg_SMLSL_v *a);
typedef arg_qrrr_e arg_UMLSL_v;
static bool trans_UMLSL_v(DisasContext *ctx, arg_UMLSL_v *a);
typedef arg_qrrr_e arg_SADDL_v;
static bool trans_SADDL_v(DisasContext *ctx, arg_SADDL_v *a);
typedef arg_qrrr_e arg_UADDL_v;
static bool trans_UADDL_v(DisasContext *ctx, arg_UADDL_v *a);
typedef arg_qrrr_e arg_SSUBL_v;
static bool trans_SSUBL_v(DisasContext *ctx, arg_SSUBL_v *a);
typedef arg_qrrr_e arg_USUBL_v;
static bool trans_USUBL_v(DisasContext *ctx, arg_USUBL_v *a);
typedef arg_qrrr_e arg_SABAL_v;
static bool trans_SABAL_v(DisasContext *ctx, arg_SABAL_v *a);
typedef arg_qrrr_e arg_UABAL_v;
static bool trans_UABAL_v(DisasContext *ctx, arg_UABAL_v *a);
typedef arg_qrrr_e arg_SABDL_v;
static bool trans_SABDL_v(DisasContext *ctx, arg_SABDL_v *a);
typedef arg_qrrr_e arg_UABDL_v;
static bool trans_UABDL_v(DisasContext *ctx, arg_UABDL_v *a);
typedef arg_qrrr_e arg_SQDMULL_v;
static bool trans_SQDMULL_v(DisasContext *ctx, arg_SQDMULL_v *a);
typedef arg_qrrr_e arg_SQDMLAL_v;
static bool trans_SQDMLAL_v(DisasContext *ctx, arg_SQDMLAL_v *a);
typedef arg_qrrr_e arg_SQDMLSL_v;
static bool trans_SQDMLSL_v(DisasContext *ctx, arg_SQDMLSL_v *a);
typedef arg_qrrr_e arg_SADDW;
static bool trans_SADDW(DisasContext *ctx, arg_SADDW *a);
typedef arg_qrrr_e arg_UADDW;
static bool trans_UADDW(DisasContext *ctx, arg_UADDW *a);
typedef arg_qrrr_e arg_SSUBW;
static bool trans_SSUBW(DisasContext *ctx, arg_SSUBW *a);
typedef arg_qrrr_e arg_USUBW;
static bool trans_USUBW(DisasContext *ctx, arg_USUBW *a);
typedef arg_qrrr_e arg_ADDHN;
static bool trans_ADDHN(DisasContext *ctx, arg_ADDHN *a);
typedef arg_qrrr_e arg_RADDHN;
static bool trans_RADDHN(DisasContext *ctx, arg_RADDHN *a);
typedef arg_qrrr_e arg_SUBHN;
static bool trans_SUBHN(DisasContext *ctx, arg_SUBHN *a);
typedef arg_qrrr_e arg_RSUBHN;
static bool trans_RSUBHN(DisasContext *ctx, arg_RSUBHN *a);
typedef arg_qrrr_e arg_PMULL_p8;
static bool trans_PMULL_p8(DisasContext *ctx, arg_PMULL_p8 *a);
typedef arg_qrrr_e arg_PMULL_p64;
static bool trans_PMULL_p64(DisasContext *ctx, arg_PMULL_p64 *a);
typedef arg_rrx_e arg_FMUL_si;
static bool trans_FMUL_si(DisasContext *ctx, arg_FMUL_si *a);
typedef arg_rrx_e arg_FMLA_si;
static bool trans_FMLA_si(DisasContext *ctx, arg_FMLA_si *a);
typedef arg_rrx_e arg_FMLS_si;
static bool trans_FMLS_si(DisasContext *ctx, arg_FMLS_si *a);
typedef arg_rrx_e arg_FMULX_si;
static bool trans_FMULX_si(DisasContext *ctx, arg_FMULX_si *a);
typedef arg_rrx_e arg_SQDMULH_si;
static bool trans_SQDMULH_si(DisasContext *ctx, arg_SQDMULH_si *a);
typedef arg_rrx_e arg_SQRDMULH_si;
static bool trans_SQRDMULH_si(DisasContext *ctx, arg_SQRDMULH_si *a);
typedef arg_rrx_e arg_SQRDMLAH_si;
static bool trans_SQRDMLAH_si(DisasContext *ctx, arg_SQRDMLAH_si *a);
typedef arg_rrx_e arg_SQRDMLSH_si;
static bool trans_SQRDMLSH_si(DisasContext *ctx, arg_SQRDMLSH_si *a);
typedef arg_qrrx_e arg_FMUL_vi;
static bool trans_FMUL_vi(DisasContext *ctx, arg_FMUL_vi *a);
typedef arg_qrrx_e arg_FMLA_vi;
static bool trans_FMLA_vi(DisasContext *ctx, arg_FMLA_vi *a);
typedef arg_qrrx_e arg_FMLS_vi;
static bool trans_FMLS_vi(DisasContext *ctx, arg_FMLS_vi *a);
typedef arg_qrrx_e arg_FMULX_vi;
static bool trans_FMULX_vi(DisasContext *ctx, arg_FMULX_vi *a);
typedef arg_qrrx_e arg_FMLAL_vi;
static bool trans_FMLAL_vi(DisasContext *ctx, arg_FMLAL_vi *a);
typedef arg_qrrx_e arg_FMLSL_vi;
static bool trans_FMLSL_vi(DisasContext *ctx, arg_FMLSL_vi *a);
typedef arg_qrrx_e arg_FMLAL2_vi;
static bool trans_FMLAL2_vi(DisasContext *ctx, arg_FMLAL2_vi *a);
typedef arg_qrrx_e arg_FMLSL2_vi;
static bool trans_FMLSL2_vi(DisasContext *ctx, arg_FMLSL2_vi *a);
typedef arg_qrrx_e arg_MUL_vi;
static bool trans_MUL_vi(DisasContext *ctx, arg_MUL_vi *a);
typedef arg_qrrx_e arg_MLA_vi;
static bool trans_MLA_vi(DisasContext *ctx, arg_MLA_vi *a);
typedef arg_qrrx_e arg_MLS_vi;
static bool trans_MLS_vi(DisasContext *ctx, arg_MLS_vi *a);
typedef arg_qrrx_e arg_SQDMULH_vi;
static bool trans_SQDMULH_vi(DisasContext *ctx, arg_SQDMULH_vi *a);
typedef arg_qrrx_e arg_SQRDMULH_vi;
static bool trans_SQRDMULH_vi(DisasContext *ctx, arg_SQRDMULH_vi *a);
typedef arg_qrrx_e arg_SQRDMLAH_vi;
static bool trans_SQRDMLAH_vi(DisasContext *ctx, arg_SQRDMLAH_vi *a);
typedef arg_qrrx_e arg_SQRDMLSH_vi;
static bool trans_SQRDMLSH_vi(DisasContext *ctx, arg_SQRDMLSH_vi *a);
typedef arg_qrrx_e arg_SDOT_vi;
static bool trans_SDOT_vi(DisasContext *ctx, arg_SDOT_vi *a);
typedef arg_qrrx_e arg_UDOT_vi;
static bool trans_UDOT_vi(DisasContext *ctx, arg_UDOT_vi *a);
typedef arg_qrrx_e arg_SUDOT_vi;
static bool trans_SUDOT_vi(DisasContext *ctx, arg_SUDOT_vi *a);
typedef arg_qrrx_e arg_USDOT_vi;
static bool trans_USDOT_vi(DisasContext *ctx, arg_USDOT_vi *a);
typedef arg_qrrx_e arg_BFDOT_vi;
static bool trans_BFDOT_vi(DisasContext *ctx, arg_BFDOT_vi *a);
typedef arg_qrrx_e arg_BFMLAL_vi;
static bool trans_BFMLAL_vi(DisasContext *ctx, arg_BFMLAL_vi *a);
typedef arg_disas_a6452 arg_FCMLA_vi;
static bool trans_FCMLA_vi(DisasContext *ctx, arg_FCMLA_vi *a);
typedef arg_qrrx_e arg_SMULL_vi;
static bool trans_SMULL_vi(DisasContext *ctx, arg_SMULL_vi *a);
typedef arg_qrrx_e arg_UMULL_vi;
static bool trans_UMULL_vi(DisasContext *ctx, arg_UMULL_vi *a);
typedef arg_qrrx_e arg_SMLAL_vi;
static bool trans_SMLAL_vi(DisasContext *ctx, arg_SMLAL_vi *a);
typedef arg_qrrx_e arg_UMLAL_vi;
static bool trans_UMLAL_vi(DisasContext *ctx, arg_UMLAL_vi *a);
typedef arg_qrrx_e arg_SMLSL_vi;
static bool trans_SMLSL_vi(DisasContext *ctx, arg_SMLSL_vi *a);
typedef arg_qrrx_e arg_UMLSL_vi;
static bool trans_UMLSL_vi(DisasContext *ctx, arg_UMLSL_vi *a);
typedef arg_qrrx_e arg_SQDMULL_vi;
static bool trans_SQDMULL_vi(DisasContext *ctx, arg_SQDMULL_vi *a);
typedef arg_qrrx_e arg_SQDMLAL_vi;
static bool trans_SQDMLAL_vi(DisasContext *ctx, arg_SQDMLAL_vi *a);
typedef arg_qrrx_e arg_SQDMLSL_vi;
static bool trans_SQDMLSL_vi(DisasContext *ctx, arg_SQDMLSL_vi *a);
typedef arg_disas_a6453 arg_FCSEL;
static bool trans_FCSEL(DisasContext *ctx, arg_FCSEL *a);
typedef arg_rrrr_e arg_FMADD;
static bool trans_FMADD(DisasContext *ctx, arg_FMADD *a);
typedef arg_rrrr_e arg_FMSUB;
static bool trans_FMSUB(DisasContext *ctx, arg_FMSUB *a);
typedef arg_rrrr_e arg_FNMADD;
static bool trans_FNMADD(DisasContext *ctx, arg_FNMADD *a);
typedef arg_rrrr_e arg_FNMSUB;
static bool trans_FNMSUB(DisasContext *ctx, arg_FNMSUB *a);
typedef arg_crypto3i arg_EXT_d;
static bool trans_EXT_d(DisasContext *ctx, arg_EXT_d *a);
typedef arg_crypto3i arg_EXT_q;
static bool trans_EXT_q(DisasContext *ctx, arg_EXT_q *a);
typedef arg_disas_a6454 arg_TBL_TBX;
static bool trans_TBL_TBX(DisasContext *ctx, arg_TBL_TBX *a);
typedef arg_qrrr_e arg_UZP1;
static bool trans_UZP1(DisasContext *ctx, arg_UZP1 *a);
typedef arg_qrrr_e arg_UZP2;
static bool trans_UZP2(DisasContext *ctx, arg_UZP2 *a);
typedef arg_qrrr_e arg_TRN1;
static bool trans_TRN1(DisasContext *ctx, arg_TRN1 *a);
typedef arg_qrrr_e arg_TRN2;
static bool trans_TRN2(DisasContext *ctx, arg_TRN2 *a);
typedef arg_qrrr_e arg_ZIP1;
static bool trans_ZIP1(DisasContext *ctx, arg_ZIP1 *a);
typedef arg_qrrr_e arg_ZIP2;
static bool trans_ZIP2(DisasContext *ctx, arg_ZIP2 *a);
typedef arg_qrr_e arg_ADDV;
static bool trans_ADDV(DisasContext *ctx, arg_ADDV *a);
typedef arg_qrr_e arg_SADDLV;
static bool trans_SADDLV(DisasContext *ctx, arg_SADDLV *a);
typedef arg_qrr_e arg_UADDLV;
static bool trans_UADDLV(DisasContext *ctx, arg_UADDLV *a);
typedef arg_qrr_e arg_SMAXV;
static bool trans_SMAXV(DisasContext *ctx, arg_SMAXV *a);
typedef arg_qrr_e arg_UMAXV;
static bool trans_UMAXV(DisasContext *ctx, arg_UMAXV *a);
typedef arg_qrr_e arg_SMINV;
static bool trans_SMINV(DisasContext *ctx, arg_SMINV *a);
typedef arg_qrr_e arg_UMINV;
static bool trans_UMINV(DisasContext *ctx, arg_UMINV *a);
typedef arg_qrr_e arg_FMAXNMV_h;
static bool trans_FMAXNMV_h(DisasContext *ctx, arg_FMAXNMV_h *a);
typedef arg_qrr_e arg_FMAXNMV_s;
static bool trans_FMAXNMV_s(DisasContext *ctx, arg_FMAXNMV_s *a);
typedef arg_qrr_e arg_FMINNMV_h;
static bool trans_FMINNMV_h(DisasContext *ctx, arg_FMINNMV_h *a);
typedef arg_qrr_e arg_FMINNMV_s;
static bool trans_FMINNMV_s(DisasContext *ctx, arg_FMINNMV_s *a);
typedef arg_qrr_e arg_FMAXV_h;
static bool trans_FMAXV_h(DisasContext *ctx, arg_FMAXV_h *a);
typedef arg_qrr_e arg_FMAXV_s;
static bool trans_FMAXV_s(DisasContext *ctx, arg_FMAXV_s *a);
typedef arg_qrr_e arg_FMINV_h;
static bool trans_FMINV_h(DisasContext *ctx, arg_FMINV_h *a);
typedef arg_qrr_e arg_FMINV_s;
static bool trans_FMINV_s(DisasContext *ctx, arg_FMINV_s *a);
typedef arg_disas_a6455 arg_FMOVI_s;
static bool trans_FMOVI_s(DisasContext *ctx, arg_FMOVI_s *a);
typedef arg_disas_a6456 arg_FMOVI_v_h;
static bool trans_FMOVI_v_h(DisasContext *ctx, arg_FMOVI_v_h *a);
typedef arg_disas_a6457 arg_Vimm;
static bool trans_Vimm(DisasContext *ctx, arg_Vimm *a);
typedef arg_qrri_e arg_SSHR_v;
static bool trans_SSHR_v(DisasContext *ctx, arg_SSHR_v *a);
typedef arg_qrri_e arg_USHR_v;
static bool trans_USHR_v(DisasContext *ctx, arg_USHR_v *a);
typedef arg_qrri_e arg_SSRA_v;
static bool trans_SSRA_v(DisasContext *ctx, arg_SSRA_v *a);
typedef arg_qrri_e arg_USRA_v;
static bool trans_USRA_v(DisasContext *ctx, arg_USRA_v *a);
typedef arg_qrri_e arg_SRSHR_v;
static bool trans_SRSHR_v(DisasContext *ctx, arg_SRSHR_v *a);
typedef arg_qrri_e arg_URSHR_v;
static bool trans_URSHR_v(DisasContext *ctx, arg_URSHR_v *a);
typedef arg_qrri_e arg_SRSRA_v;
static bool trans_SRSRA_v(DisasContext *ctx, arg_SRSRA_v *a);
typedef arg_qrri_e arg_URSRA_v;
static bool trans_URSRA_v(DisasContext *ctx, arg_URSRA_v *a);
typedef arg_qrri_e arg_SRI_v;
static bool trans_SRI_v(DisasContext *ctx, arg_SRI_v *a);
typedef arg_qrri_e arg_SHL_v;
static bool trans_SHL_v(DisasContext *ctx, arg_SHL_v *a);
typedef arg_qrri_e arg_SLI_v;
static bool trans_SLI_v(DisasContext *ctx, arg_SLI_v *a);
typedef arg_qrri_e arg_SSHLL_v;
static bool trans_SSHLL_v(DisasContext *ctx, arg_SSHLL_v *a);
typedef arg_qrri_e arg_USHLL_v;
static bool trans_USHLL_v(DisasContext *ctx, arg_USHLL_v *a);
typedef arg_qrri_e arg_SHRN_v;
static bool trans_SHRN_v(DisasContext *ctx, arg_SHRN_v *a);
typedef arg_qrri_e arg_RSHRN_v;
static bool trans_RSHRN_v(DisasContext *ctx, arg_RSHRN_v *a);
typedef arg_qrri_e arg_SQSHL_vi;
static bool trans_SQSHL_vi(DisasContext *ctx, arg_SQSHL_vi *a);
typedef arg_qrri_e arg_UQSHL_vi;
static bool trans_UQSHL_vi(DisasContext *ctx, arg_UQSHL_vi *a);
typedef arg_qrri_e arg_SQSHLU_vi;
static bool trans_SQSHLU_vi(DisasContext *ctx, arg_SQSHLU_vi *a);
typedef arg_qrri_e arg_SQSHRN_v;
static bool trans_SQSHRN_v(DisasContext *ctx, arg_SQSHRN_v *a);
typedef arg_qrri_e arg_UQSHRN_v;
static bool trans_UQSHRN_v(DisasContext *ctx, arg_UQSHRN_v *a);
typedef arg_qrri_e arg_SQSHRUN_v;
static bool trans_SQSHRUN_v(DisasContext *ctx, arg_SQSHRUN_v *a);
typedef arg_qrri_e arg_SQRSHRN_v;
static bool trans_SQRSHRN_v(DisasContext *ctx, arg_SQRSHRN_v *a);
typedef arg_qrri_e arg_UQRSHRN_v;
static bool trans_UQRSHRN_v(DisasContext *ctx, arg_UQRSHRN_v *a);
typedef arg_qrri_e arg_SQRSHRUN_v;
static bool trans_SQRSHRUN_v(DisasContext *ctx, arg_SQRSHRUN_v *a);
typedef arg_rri_e arg_SSHR_s;
static bool trans_SSHR_s(DisasContext *ctx, arg_SSHR_s *a);
typedef arg_rri_e arg_USHR_s;
static bool trans_USHR_s(DisasContext *ctx, arg_USHR_s *a);
typedef arg_rri_e arg_SSRA_s;
static bool trans_SSRA_s(DisasContext *ctx, arg_SSRA_s *a);
typedef arg_rri_e arg_USRA_s;
static bool trans_USRA_s(DisasContext *ctx, arg_USRA_s *a);
typedef arg_rri_e arg_SRSHR_s;
static bool trans_SRSHR_s(DisasContext *ctx, arg_SRSHR_s *a);
typedef arg_rri_e arg_URSHR_s;
static bool trans_URSHR_s(DisasContext *ctx, arg_URSHR_s *a);
typedef arg_rri_e arg_SRSRA_s;
static bool trans_SRSRA_s(DisasContext *ctx, arg_SRSRA_s *a);
typedef arg_rri_e arg_URSRA_s;
static bool trans_URSRA_s(DisasContext *ctx, arg_URSRA_s *a);
typedef arg_rri_e arg_SRI_s;
static bool trans_SRI_s(DisasContext *ctx, arg_SRI_s *a);
typedef arg_rri_e arg_SHL_s;
static bool trans_SHL_s(DisasContext *ctx, arg_SHL_s *a);
typedef arg_rri_e arg_SLI_s;
static bool trans_SLI_s(DisasContext *ctx, arg_SLI_s *a);
typedef arg_rri_e arg_SQSHL_si;
static bool trans_SQSHL_si(DisasContext *ctx, arg_SQSHL_si *a);
typedef arg_rri_e arg_UQSHL_si;
static bool trans_UQSHL_si(DisasContext *ctx, arg_UQSHL_si *a);
typedef arg_rri_e arg_SQSHLU_si;
static bool trans_SQSHLU_si(DisasContext *ctx, arg_SQSHLU_si *a);
typedef arg_rri_e arg_SQSHRN_si;
static bool trans_SQSHRN_si(DisasContext *ctx, arg_SQSHRN_si *a);
typedef arg_rri_e arg_UQSHRN_si;
static bool trans_UQSHRN_si(DisasContext *ctx, arg_UQSHRN_si *a);
typedef arg_rri_e arg_SQSHRUN_si;
static bool trans_SQSHRUN_si(DisasContext *ctx, arg_SQSHRUN_si *a);
typedef arg_rri_e arg_SQRSHRN_si;
static bool trans_SQRSHRN_si(DisasContext *ctx, arg_SQRSHRN_si *a);
typedef arg_rri_e arg_UQRSHRN_si;
static bool trans_UQRSHRN_si(DisasContext *ctx, arg_UQRSHRN_si *a);
typedef arg_rri_e arg_SQRSHRUN_si;
static bool trans_SQRSHRUN_si(DisasContext *ctx, arg_SQRSHRUN_si *a);

static void disas_a64_extract_addsub_imm(DisasContext *ctx, arg_rri_sf *a, uint32_t insn)
{
    a->imm = extract32(insn, 10, 12);
    a->rd = extract32(insn, 0, 5);
    a->sf = extract32(insn, 31, 1);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_addsub_imm12(DisasContext *ctx, arg_rri_sf *a, uint32_t insn)
{
    a->imm = shl_12(ctx, extract32(insn, 10, 12));
    a->rd = extract32(insn, 0, 5);
    a->sf = extract32(insn, 31, 1);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_addsub_imm_tag(DisasContext *ctx, arg_rri_tag *a, uint32_t insn)
{
    a->uimm6 = extract32(insn, 16, 6);
    a->uimm4 = extract32(insn, 10, 4);
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_atomic(DisasContext *ctx, arg_atomic *a, uint32_t insn)
{
    a->sz = extract32(insn, 30, 2);
    a->rt = extract32(insn, 0, 5);
    a->a = extract32(insn, 23, 1);
    a->rs = extract32(insn, 16, 5);
    a->r = extract32(insn, 22, 1);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_bitfield_32(DisasContext *ctx, arg_bitfield *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->imms = extract32(insn, 10, 5);
    a->sf = 0;
    a->immr = extract32(insn, 16, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_bitfield_64(DisasContext *ctx, arg_bitfield *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->imms = extract32(insn, 10, 6);
    a->sf = 1;
    a->immr = extract32(insn, 16, 6);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_branch(DisasContext *ctx, arg_i *a, uint32_t insn)
{
    a->imm = times_4(ctx, sextract32(insn, 0, 26));
}

static void disas_a64_extract_cpy(DisasContext *ctx, arg_cpy *a, uint32_t insn)
{
    a->options = extract32(insn, 12, 4);
    a->rn = extract32(insn, 5, 5);
    a->rd = extract32(insn, 0, 5);
    a->rs = extract32(insn, 16, 5);
}

static void disas_a64_extract_crypto3i(DisasContext *ctx, arg_crypto3i *a, uint32_t insn)
{
    a->imm = extract32(insn, 12, 2);
    a->rd = extract32(insn, 0, 5);
    a->rm = extract32(insn, 16, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_disas_a64_Fmt_100(DisasContext *ctx, arg_disas_a6452 *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 2;
    a->idx = extract32(insn, 11, 1);
    a->rd = extract32(insn, 0, 5);
    a->rot = extract32(insn, 13, 2);
    a->rn = extract32(insn, 5, 5);
    a->q = 1;
}

static void disas_a64_extract_disas_a64_Fmt_101(DisasContext *ctx, arg_disas_a6453 *a, uint32_t insn)
{
    a->cond = extract32(insn, 12, 4);
    a->rm = extract32(insn, 16, 5);
    a->esz = xor_2(ctx, extract32(insn, 22, 2));
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_disas_a64_Fmt_103(DisasContext *ctx, arg_crypto3i *a, uint32_t insn)
{
    a->imm = extract32(insn, 11, 3);
    a->rd = extract32(insn, 0, 5);
    a->rm = extract32(insn, 16, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_disas_a64_Fmt_104(DisasContext *ctx, arg_crypto3i *a, uint32_t insn)
{
    a->imm = extract32(insn, 11, 4);
    a->rd = extract32(insn, 0, 5);
    a->rm = extract32(insn, 16, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_disas_a64_Fmt_105(DisasContext *ctx, arg_disas_a6454 *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->len = extract32(insn, 13, 2);
    a->rd = extract32(insn, 0, 5);
    a->tbx = extract32(insn, 12, 1);
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_disas_a64_Fmt_106(DisasContext *ctx, arg_disas_a6455 *a, uint32_t insn)
{
    a->imm = extract32(insn, 13, 8);
    a->rd = extract32(insn, 0, 5);
    a->esz = xor_2(ctx, extract32(insn, 22, 2));
}

static void disas_a64_extract_disas_a64_Fmt_115(DisasContext *ctx, arg_disas_a6456 *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->abcdefgh = deposit32(extract32(insn, 5, 5), 5, 27, extract32(insn, 16, 3));
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_disas_a64_Fmt_116(DisasContext *ctx, arg_disas_a6457 *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->abcdefgh = deposit32(extract32(insn, 5, 5), 5, 27, extract32(insn, 16, 3));
    a->cmode = extract32(insn, 12, 4);
    a->op = extract32(insn, 29, 1);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_disas_a64_Fmt_39(DisasContext *ctx, arg_extract *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->rd = extract32(insn, 0, 5);
    a->sf = 1;
    a->imm = extract32(insn, 10, 6);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_disas_a64_Fmt_40(DisasContext *ctx, arg_extract *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->rd = extract32(insn, 0, 5);
    a->sf = 0;
    a->imm = extract32(insn, 10, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_disas_a64_Fmt_42(DisasContext *ctx, arg_cbz *a, uint32_t insn)
{
    a->imm = times_4(ctx, sextract32(insn, 5, 19));
    a->sf = extract32(insn, 31, 1);
    a->rt = extract32(insn, 0, 5);
    a->nz = extract32(insn, 24, 1);
}

static void disas_a64_extract_disas_a64_Fmt_43(DisasContext *ctx, arg_tbz *a, uint32_t insn)
{
    a->imm = times_4(ctx, sextract32(insn, 5, 14));
    a->bitpos = deposit32(extract32(insn, 19, 5), 5, 27, extract32(insn, 31, 1));
    a->rt = extract32(insn, 0, 5);
    a->nz = extract32(insn, 24, 1);
}

static void disas_a64_extract_disas_a64_Fmt_44(DisasContext *ctx, arg_disas_a6421 *a, uint32_t insn)
{
    a->imm = times_4(ctx, sextract32(insn, 5, 19));
    a->c = extract32(insn, 4, 1);
    a->cond = extract32(insn, 0, 4);
}

static void disas_a64_extract_disas_a64_Fmt_45(DisasContext *ctx, arg_r *a, uint32_t insn)
{
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_disas_a64_Fmt_46(DisasContext *ctx, arg_braz *a, uint32_t insn)
{
    a->m = extract32(insn, 10, 1);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_disas_a64_Fmt_47(DisasContext *ctx, arg_reta *a, uint32_t insn)
{
    a->m = extract32(insn, 10, 1);
}

static void disas_a64_extract_disas_a64_Fmt_48(DisasContext *ctx, arg_bra *a, uint32_t insn)
{
    a->rm = extract32(insn, 0, 5);
    a->m = extract32(insn, 10, 1);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_disas_a64_Fmt_49(DisasContext *ctx, arg_disas_a6425 *a, uint32_t insn)
{
}

static void disas_a64_extract_disas_a64_Fmt_50(DisasContext *ctx, arg_disas_a6426 *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
}

static void disas_a64_extract_disas_a64_Fmt_51(DisasContext *ctx, arg_disas_a6427 *a, uint32_t insn)
{
    a->types = extract32(insn, 8, 2);
    a->domain = extract32(insn, 10, 2);
}

static void disas_a64_extract_disas_a64_Fmt_53(DisasContext *ctx, arg_i *a, uint32_t insn)
{
    a->imm = extract32(insn, 8, 1);
}

static void disas_a64_extract_disas_a64_Fmt_54(DisasContext *ctx, arg_disas_a6428 *a, uint32_t insn)
{
    a->imm = extract32(insn, 8, 1);
    a->mask = extract32(insn, 9, 2);
}

static void disas_a64_extract_disas_a64_Fmt_55(DisasContext *ctx, arg_disas_a6429 *a, uint32_t insn)
{
    a->rt = extract32(insn, 0, 5);
    a->op1 = extract32(insn, 16, 3);
    a->crm = extract32(insn, 8, 4);
    a->op2 = extract32(insn, 5, 3);
    a->l = extract32(insn, 21, 1);
    a->crn = extract32(insn, 12, 4);
    a->op0 = 1;
}

static void disas_a64_extract_disas_a64_Fmt_56(DisasContext *ctx, arg_disas_a6429 *a, uint32_t insn)
{
    a->rt = extract32(insn, 0, 5);
    a->op1 = extract32(insn, 16, 3);
    a->crm = extract32(insn, 8, 4);
    a->op2 = extract32(insn, 5, 3);
    a->l = extract32(insn, 21, 1);
    a->crn = extract32(insn, 12, 4);
    a->op0 = 2;
}

static void disas_a64_extract_disas_a64_Fmt_57(DisasContext *ctx, arg_disas_a6429 *a, uint32_t insn)
{
    a->rt = extract32(insn, 0, 5);
    a->op1 = extract32(insn, 16, 3);
    a->crm = extract32(insn, 8, 4);
    a->op2 = extract32(insn, 5, 3);
    a->l = extract32(insn, 21, 1);
    a->crn = extract32(insn, 12, 4);
    a->op0 = 3;
}

static void disas_a64_extract_disas_a64_Fmt_62(DisasContext *ctx, arg_disas_a6432 *a, uint32_t insn)
{
    a->rn = extract32(insn, 5, 5);
    a->sz = plus_2(ctx, extract32(insn, 30, 1));
    a->rs = extract32(insn, 16, 5);
    a->rt = extract32(insn, 0, 5);
}

static void disas_a64_extract_disas_a64_Fmt_63(DisasContext *ctx, arg_disas_a6432 *a, uint32_t insn)
{
    a->rn = extract32(insn, 5, 5);
    a->sz = extract32(insn, 30, 2);
    a->rs = extract32(insn, 16, 5);
    a->rt = extract32(insn, 0, 5);
}

static void disas_a64_extract_disas_a64_Fmt_73(DisasContext *ctx, arg_disas_a6438 *a, uint32_t insn)
{
    a->sz = extract32(insn, 30, 2);
    a->rn = extract32(insn, 5, 5);
    a->rt = extract32(insn, 0, 5);
}

static void disas_a64_extract_disas_a64_Fmt_74(DisasContext *ctx, arg_disas_a6439 *a, uint32_t insn)
{
    a->rt = extract32(insn, 0, 5);
    a->imm = times_8(ctx, deposit32(extract32(insn, 12, 9), 9, 23, sextract32(insn, 22, 1)));
    a->m = extract32(insn, 23, 1);
    a->rn = extract32(insn, 5, 5);
    a->w = extract32(insn, 11, 1);
}

static void disas_a64_extract_disas_a64_Fmt_81(DisasContext *ctx, arg_disas_a6443 *a, uint32_t insn)
{
    a->scale = extract32(insn, 10, 2);
    a->p = extract32(insn, 23, 1);
    a->rm = extract32(insn, 16, 5);
    a->rt = extract32(insn, 0, 5);
    a->selem = plus_1(ctx, deposit32(extract32(insn, 21, 1), 1, 31, extract32(insn, 13, 1)));
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_disas_a64_Fmt_87(DisasContext *ctx, arg_crypto3i *a, uint32_t insn)
{
    a->imm = extract32(insn, 10, 6);
    a->rd = extract32(insn, 0, 5);
    a->rm = extract32(insn, 16, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_disas_a64_Fmt_88(DisasContext *ctx, arg_disas_a6448 *a, uint32_t insn)
{
    a->imm = extract32(insn, 16, 5);
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_disas_a64_Fmt_89(DisasContext *ctx, arg_disas_a6449 *a, uint32_t insn)
{
    a->imm = extract32(insn, 16, 5);
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_disas_a64_Fmt_90(DisasContext *ctx, arg_disas_a6450 *a, uint32_t insn)
{
    a->si = extract32(insn, 11, 4);
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->di = extract32(insn, 16, 5);
}

static void disas_a64_extract_disas_a64_Fmt_91(DisasContext *ctx, arg_rrx_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 1;
    a->idx = 0;
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_disas_a64_Fmt_92(DisasContext *ctx, arg_rrx_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 2;
    a->idx = 0;
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_disas_a64_Fmt_93(DisasContext *ctx, arg_rrx_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 1;
    a->idx = 0;
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_disas_a64_Fmt_94(DisasContext *ctx, arg_rrx_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 2;
    a->idx = 0;
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_disas_a64_Fmt_95(DisasContext *ctx, arg_rrx_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 1;
    a->idx = 0;
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_disas_a64_Fmt_96(DisasContext *ctx, arg_rrx_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 2;
    a->idx = 0;
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_disas_a64_Fmt_97(DisasContext *ctx, arg_disas_a6451 *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = extract32(insn, 22, 2);
    a->rd = extract32(insn, 0, 5);
    a->rot = extract32(insn, 11, 2);
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_disas_a64_Fmt_98(DisasContext *ctx, arg_disas_a6452 *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 1;
    a->idx = extract32(insn, 21, 1);
    a->rd = extract32(insn, 0, 5);
    a->rot = extract32(insn, 13, 2);
    a->rn = extract32(insn, 5, 5);
    a->q = 0;
}

static void disas_a64_extract_disas_a64_Fmt_99(DisasContext *ctx, arg_disas_a6452 *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 1;
    a->idx = deposit32(extract32(insn, 21, 1), 1, 31, extract32(insn, 11, 1));
    a->rd = extract32(insn, 0, 5);
    a->rot = extract32(insn, 13, 2);
    a->rn = extract32(insn, 5, 5);
    a->q = 1;
}

static void disas_a64_extract_i16(DisasContext *ctx, arg_i *a, uint32_t insn)
{
    a->imm = extract32(insn, 5, 16);
}

static void disas_a64_extract_ldapr_stlr_i(DisasContext *ctx, arg_ldapr_stlr_i *a, uint32_t insn)
{
    a->imm = sextract32(insn, 12, 9);
    a->rn = extract32(insn, 5, 5);
    a->rt = extract32(insn, 0, 5);
}

static void disas_a64_extract_ldlit(DisasContext *ctx, arg_ldlit *a, uint32_t insn)
{
    a->imm = times_4(ctx, sextract32(insn, 5, 19));
    a->rt = extract32(insn, 0, 5);
}

static void disas_a64_extract_ldst(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->s = extract32(insn, 12, 1);
    a->rm = extract32(insn, 16, 5);
    a->rt = extract32(insn, 0, 5);
    a->opt = extract32(insn, 13, 3);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_ldst_imm(DisasContext *ctx, arg_ldst_imm *a, uint32_t insn)
{
    a->p = 0;
    a->rt = extract32(insn, 0, 5);
    a->unpriv = 0;
    a->imm = sextract32(insn, 12, 9);
    a->rn = extract32(insn, 5, 5);
    a->w = 0;
}

static void disas_a64_extract_ldst_imm_post(DisasContext *ctx, arg_ldst_imm *a, uint32_t insn)
{
    a->p = 1;
    a->rt = extract32(insn, 0, 5);
    a->unpriv = 0;
    a->imm = sextract32(insn, 12, 9);
    a->rn = extract32(insn, 5, 5);
    a->w = 1;
}

static void disas_a64_extract_ldst_imm_pre(DisasContext *ctx, arg_ldst_imm *a, uint32_t insn)
{
    a->p = 0;
    a->rt = extract32(insn, 0, 5);
    a->unpriv = 0;
    a->imm = sextract32(insn, 12, 9);
    a->rn = extract32(insn, 5, 5);
    a->w = 1;
}

static void disas_a64_extract_ldst_imm_user(DisasContext *ctx, arg_ldst_imm *a, uint32_t insn)
{
    a->p = 0;
    a->rt = extract32(insn, 0, 5);
    a->unpriv = 1;
    a->imm = sextract32(insn, 12, 9);
    a->rn = extract32(insn, 5, 5);
    a->w = 0;
}

static void disas_a64_extract_ldst_mult(DisasContext *ctx, arg_ldst_mult *a, uint32_t insn)
{
    a->sz = extract32(insn, 10, 2);
    a->p = extract32(insn, 23, 1);
    a->rm = extract32(insn, 16, 5);
    a->rt = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_ldst_single_b(DisasContext *ctx, arg_ldst_single *a, uint32_t insn)
{
    a->index = deposit32(extract32(insn, 10, 3), 3, 29, extract32(insn, 30, 1));
    a->scale = 0;
    a->p = extract32(insn, 23, 1);
    a->rm = extract32(insn, 16, 5);
    a->rt = extract32(insn, 0, 5);
    a->selem = plus_1(ctx, deposit32(extract32(insn, 21, 1), 1, 31, extract32(insn, 13, 1)));
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_ldst_single_d(DisasContext *ctx, arg_ldst_single *a, uint32_t insn)
{
    a->index = extract32(insn, 30, 1);
    a->scale = 3;
    a->p = extract32(insn, 23, 1);
    a->rm = extract32(insn, 16, 5);
    a->rt = extract32(insn, 0, 5);
    a->selem = plus_1(ctx, deposit32(extract32(insn, 21, 1), 1, 31, extract32(insn, 13, 1)));
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_ldst_single_h(DisasContext *ctx, arg_ldst_single *a, uint32_t insn)
{
    a->index = deposit32(extract32(insn, 11, 2), 2, 30, extract32(insn, 30, 1));
    a->scale = 1;
    a->p = extract32(insn, 23, 1);
    a->rm = extract32(insn, 16, 5);
    a->rt = extract32(insn, 0, 5);
    a->selem = plus_1(ctx, deposit32(extract32(insn, 21, 1), 1, 31, extract32(insn, 13, 1)));
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_ldst_single_s(DisasContext *ctx, arg_ldst_single *a, uint32_t insn)
{
    a->index = deposit32(extract32(insn, 12, 1), 1, 31, extract32(insn, 30, 1));
    a->scale = 2;
    a->p = extract32(insn, 23, 1);
    a->rm = extract32(insn, 16, 5);
    a->rt = extract32(insn, 0, 5);
    a->selem = plus_1(ctx, deposit32(extract32(insn, 21, 1), 1, 31, extract32(insn, 13, 1)));
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_ldst_tag(DisasContext *ctx, arg_ldst_tag *a, uint32_t insn)
{
    a->imm = scale_by_log2_tag_granule(ctx, sextract32(insn, 12, 9));
    a->rn = extract32(insn, 5, 5);
    a->rt = extract32(insn, 0, 5);
}

static void disas_a64_extract_ldst_tag_mult(DisasContext *ctx, arg_ldst_tag *a, uint32_t insn)
{
    a->imm = 0;
    a->rn = extract32(insn, 5, 5);
    a->rt = extract32(insn, 0, 5);
}

static void disas_a64_extract_ldst_uimm(DisasContext *ctx, arg_ldst_imm *a, uint32_t insn)
{
    a->p = 0;
    a->rt = extract32(insn, 0, 5);
    a->unpriv = 0;
    a->w = 0;
    a->rn = extract32(insn, 5, 5);
    a->imm = uimm_scaled(ctx, deposit32(extract32(a->sz, 0, 3), 3, 29, extract32(insn, 10, 12)));
}

static void disas_a64_extract_ldstpair(DisasContext *ctx, arg_ldstpair *a, uint32_t insn)
{
    a->imm = sextract32(insn, 15, 7);
    a->rt2 = extract32(insn, 10, 5);
    a->rn = extract32(insn, 5, 5);
    a->rt = extract32(insn, 0, 5);
}

static void disas_a64_extract_logic_imm_32(DisasContext *ctx, arg_rri_log *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->sf = 0;
    a->rn = extract32(insn, 5, 5);
    a->dbm = extract32(insn, 10, 12);
}

static void disas_a64_extract_logic_imm_64(DisasContext *ctx, arg_rri_log *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->sf = 1;
    a->rn = extract32(insn, 5, 5);
    a->dbm = extract32(insn, 10, 13);
}

static void disas_a64_extract_movw_32(DisasContext *ctx, arg_movw *a, uint32_t insn)
{
    a->imm = extract32(insn, 5, 16);
    a->rd = extract32(insn, 0, 5);
    a->sf = 0;
    a->hw = extract32(insn, 21, 1);
}

static void disas_a64_extract_movw_64(DisasContext *ctx, arg_movw *a, uint32_t insn)
{
    a->imm = extract32(insn, 5, 16);
    a->rd = extract32(insn, 0, 5);
    a->sf = 1;
    a->hw = extract32(insn, 21, 2);
}

static void disas_a64_extract_msr_i(DisasContext *ctx, arg_i *a, uint32_t insn)
{
    a->imm = extract32(insn, 8, 4);
}

static void disas_a64_extract_pcrel(DisasContext *ctx, arg_ri *a, uint32_t insn)
{
    a->imm = deposit32(extract32(insn, 29, 2), 2, 30, sextract32(insn, 5, 19));
    a->rd = extract32(insn, 0, 5);
}

static void disas_a64_extract_q_shli_b(DisasContext *ctx, arg_qrri_e *a, uint32_t insn)
{
    a->esz = 0;
    a->rd = extract32(insn, 0, 5);
    a->imm = extract32(insn, 16, 3);
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_q_shli_d(DisasContext *ctx, arg_qrri_e *a, uint32_t insn)
{
    a->esz = 3;
    a->rd = extract32(insn, 0, 5);
    a->imm = extract32(insn, 16, 6);
    a->rn = extract32(insn, 5, 5);
    a->q = 1;
}

static void disas_a64_extract_q_shli_h(DisasContext *ctx, arg_qrri_e *a, uint32_t insn)
{
    a->esz = 1;
    a->rd = extract32(insn, 0, 5);
    a->imm = extract32(insn, 16, 4);
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_q_shli_s(DisasContext *ctx, arg_qrri_e *a, uint32_t insn)
{
    a->esz = 2;
    a->rd = extract32(insn, 0, 5);
    a->imm = extract32(insn, 16, 5);
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_q_shri_b(DisasContext *ctx, arg_qrri_e *a, uint32_t insn)
{
    a->esz = 0;
    a->rd = extract32(insn, 0, 5);
    a->imm = rsub_8(ctx, extract32(insn, 16, 3));
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_q_shri_d(DisasContext *ctx, arg_qrri_e *a, uint32_t insn)
{
    a->esz = 3;
    a->rd = extract32(insn, 0, 5);
    a->imm = rsub_64(ctx, extract32(insn, 16, 6));
    a->rn = extract32(insn, 5, 5);
    a->q = 1;
}

static void disas_a64_extract_q_shri_h(DisasContext *ctx, arg_qrri_e *a, uint32_t insn)
{
    a->esz = 1;
    a->rd = extract32(insn, 0, 5);
    a->imm = rsub_16(ctx, extract32(insn, 16, 4));
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_q_shri_s(DisasContext *ctx, arg_qrri_e *a, uint32_t insn)
{
    a->esz = 2;
    a->rd = extract32(insn, 0, 5);
    a->imm = rsub_32(ctx, extract32(insn, 16, 5));
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_qr2r_e(DisasContext *ctx, arg_qrrr_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 5, 5);
    a->esz = extract32(insn, 22, 2);
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 0, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_qrr_e(DisasContext *ctx, arg_qrr_e *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = extract32(insn, 22, 2);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_qrr_h(DisasContext *ctx, arg_qrr_e *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = 1;
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_qrrr_b(DisasContext *ctx, arg_qrrr_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 0;
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_qrrr_e(DisasContext *ctx, arg_qrrr_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = extract32(insn, 22, 2);
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_qrrr_h(DisasContext *ctx, arg_qrrr_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 1;
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_qrrr_s(DisasContext *ctx, arg_qrrr_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 2;
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_qrrr_sd(DisasContext *ctx, arg_qrrr_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = plus_2(ctx, extract32(insn, 22, 1));
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_qrrx_d(DisasContext *ctx, arg_qrrx_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 3;
    a->idx = extract32(insn, 11, 1);
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_qrrx_h(DisasContext *ctx, arg_qrrx_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 4);
    a->esz = 1;
    a->idx = deposit32(extract32(insn, 20, 2), 2, 30, extract32(insn, 11, 1));
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_qrrx_s(DisasContext *ctx, arg_qrrx_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 2;
    a->idx = deposit32(extract32(insn, 21, 1), 1, 31, extract32(insn, 11, 1));
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->q = extract32(insn, 30, 1);
}

static void disas_a64_extract_r2r_e(DisasContext *ctx, arg_rrr_e *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->rm = extract32(insn, 5, 5);
    a->rn = extract32(insn, 0, 5);
    a->esz = extract32(insn, 22, 2);
}

static void disas_a64_extract_r2r_q1e0(DisasContext *ctx, arg_qrrr_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 5, 5);
    a->esz = 0;
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 0, 5);
    a->q = 1;
}

static void disas_a64_extract_rr_d(DisasContext *ctx, arg_rr_e *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = 3;
}

static void disas_a64_extract_rr_h(DisasContext *ctx, arg_rr_e *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = 1;
}

static void disas_a64_extract_rr_q1e0(DisasContext *ctx, arg_qrr_e *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = 0;
    a->q = 1;
}

static void disas_a64_extract_rr_q1e2(DisasContext *ctx, arg_qrr_e *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = 2;
    a->q = 1;
}

static void disas_a64_extract_rr_sd(DisasContext *ctx, arg_rr_e *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = plus_2(ctx, extract32(insn, 22, 1));
}

static void disas_a64_extract_rrr_d(DisasContext *ctx, arg_rrr_e *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->rm = extract32(insn, 16, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = 3;
}

static void disas_a64_extract_rrr_e(DisasContext *ctx, arg_rrr_e *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->rm = extract32(insn, 16, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = extract32(insn, 22, 2);
}

static void disas_a64_extract_rrr_h(DisasContext *ctx, arg_rrr_e *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->rm = extract32(insn, 16, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = 1;
}

static void disas_a64_extract_rrr_hsd(DisasContext *ctx, arg_rrr_e *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->rm = extract32(insn, 16, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = xor_2(ctx, extract32(insn, 22, 2));
}

static void disas_a64_extract_rrr_q1e0(DisasContext *ctx, arg_qrrr_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 0;
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->q = 1;
}

static void disas_a64_extract_rrr_q1e3(DisasContext *ctx, arg_qrrr_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 3;
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->q = 1;
}

static void disas_a64_extract_rrr_sd(DisasContext *ctx, arg_rrr_e *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->rm = extract32(insn, 16, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = plus_2(ctx, extract32(insn, 22, 1));
}

static void disas_a64_extract_rrrr_hsd(DisasContext *ctx, arg_rrrr_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = xor_2(ctx, extract32(insn, 22, 2));
    a->rd = extract32(insn, 0, 5);
    a->ra = extract32(insn, 10, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_rrrr_q1e3(DisasContext *ctx, arg_qrrrr_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 3;
    a->rd = extract32(insn, 0, 5);
    a->ra = extract32(insn, 10, 5);
    a->rn = extract32(insn, 5, 5);
    a->q = 1;
}

static void disas_a64_extract_rrx_d(DisasContext *ctx, arg_rrx_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 3;
    a->idx = extract32(insn, 11, 1);
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_rrx_h(DisasContext *ctx, arg_rrx_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 4);
    a->esz = 1;
    a->idx = deposit32(extract32(insn, 20, 2), 2, 30, extract32(insn, 11, 1));
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_rrx_s(DisasContext *ctx, arg_rrx_e *a, uint32_t insn)
{
    a->rm = extract32(insn, 16, 5);
    a->esz = 2;
    a->idx = deposit32(extract32(insn, 21, 1), 1, 31, extract32(insn, 11, 1));
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
}

static void disas_a64_extract_set(DisasContext *ctx, arg_set *a, uint32_t insn)
{
    a->rd = extract32(insn, 0, 5);
    a->rs = extract32(insn, 16, 5);
    a->unpriv = extract32(insn, 12, 1);
    a->rn = extract32(insn, 5, 5);
    a->nontemp = extract32(insn, 13, 1);
}

static void disas_a64_extract_shli_b(DisasContext *ctx, arg_rri_e *a, uint32_t insn)
{
    a->imm = extract32(insn, 16, 3);
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = 0;
}

static void disas_a64_extract_shli_d(DisasContext *ctx, arg_rri_e *a, uint32_t insn)
{
    a->imm = extract32(insn, 16, 6);
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = 3;
}

static void disas_a64_extract_shli_h(DisasContext *ctx, arg_rri_e *a, uint32_t insn)
{
    a->imm = extract32(insn, 16, 4);
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = 1;
}

static void disas_a64_extract_shli_s(DisasContext *ctx, arg_rri_e *a, uint32_t insn)
{
    a->imm = extract32(insn, 16, 5);
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = 2;
}

static void disas_a64_extract_shri_b(DisasContext *ctx, arg_rri_e *a, uint32_t insn)
{
    a->imm = rsub_8(ctx, extract32(insn, 16, 3));
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = 0;
}

static void disas_a64_extract_shri_d(DisasContext *ctx, arg_rri_e *a, uint32_t insn)
{
    a->imm = rsub_64(ctx, extract32(insn, 16, 6));
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = 3;
}

static void disas_a64_extract_shri_h(DisasContext *ctx, arg_rri_e *a, uint32_t insn)
{
    a->imm = rsub_16(ctx, extract32(insn, 16, 4));
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = 1;
}

static void disas_a64_extract_shri_s(DisasContext *ctx, arg_rri_e *a, uint32_t insn)
{
    a->imm = rsub_32(ctx, extract32(insn, 16, 5));
    a->rd = extract32(insn, 0, 5);
    a->rn = extract32(insn, 5, 5);
    a->esz = 2;
}

static void disas_a64_extract_stlr(DisasContext *ctx, arg_stlr *a, uint32_t insn)
{
    a->rn = extract32(insn, 5, 5);
    a->sz = extract32(insn, 30, 2);
    a->lasr = extract32(insn, 15, 1);
    a->rt = extract32(insn, 0, 5);
}

static void disas_a64_extract_stxp(DisasContext *ctx, arg_stxr *a, uint32_t insn)
{
    a->sz = plus_2(ctx, extract32(insn, 30, 1));
    a->rt = extract32(insn, 0, 5);
    a->lasr = extract32(insn, 15, 1);
    a->rs = extract32(insn, 16, 5);
    a->rn = extract32(insn, 5, 5);
    a->rt2 = extract32(insn, 10, 5);
}

static void disas_a64_extract_stxr(DisasContext *ctx, arg_stxr *a, uint32_t insn)
{
    a->sz = extract32(insn, 30, 2);
    a->rt = extract32(insn, 0, 5);
    a->lasr = extract32(insn, 15, 1);
    a->rs = extract32(insn, 16, 5);
    a->rn = extract32(insn, 5, 5);
    a->rt2 = extract32(insn, 10, 5);
}

static bool disas_a64(DisasContext *ctx, uint32_t insn)
{
    union {
        arg_atomic f_atomic;
        arg_bitfield f_bitfield;
        arg_bra f_bra;
        arg_braz f_braz;
        arg_cbz f_cbz;
        arg_cpy f_cpy;
        arg_crypto3i f_crypto3i;
        arg_disas_a6421 f_disas_a6421;
        arg_disas_a6425 f_disas_a6425;
        arg_disas_a6426 f_disas_a6426;
        arg_disas_a6427 f_disas_a6427;
        arg_disas_a6428 f_disas_a6428;
        arg_disas_a6429 f_disas_a6429;
        arg_disas_a6432 f_disas_a6432;
        arg_disas_a6438 f_disas_a6438;
        arg_disas_a6439 f_disas_a6439;
        arg_disas_a6443 f_disas_a6443;
        arg_disas_a6448 f_disas_a6448;
        arg_disas_a6449 f_disas_a6449;
        arg_disas_a6450 f_disas_a6450;
        arg_disas_a6451 f_disas_a6451;
        arg_disas_a6452 f_disas_a6452;
        arg_disas_a6453 f_disas_a6453;
        arg_disas_a6454 f_disas_a6454;
        arg_disas_a6455 f_disas_a6455;
        arg_disas_a6456 f_disas_a6456;
        arg_disas_a6457 f_disas_a6457;
        arg_extract f_extract;
        arg_i f_i;
        arg_ldapr_stlr_i f_ldapr_stlr_i;
        arg_ldlit f_ldlit;
        arg_ldst f_ldst;
        arg_ldst_imm f_ldst_imm;
        arg_ldst_mult f_ldst_mult;
        arg_ldst_single f_ldst_single;
        arg_ldst_tag f_ldst_tag;
        arg_ldstpair f_ldstpair;
        arg_movw f_movw;
        arg_qrr_e f_qrr_e;
        arg_qrri_e f_qrri_e;
        arg_qrrr_e f_qrrr_e;
        arg_qrrrr_e f_qrrrr_e;
        arg_qrrx_e f_qrrx_e;
        arg_r f_r;
        arg_reta f_reta;
        arg_ri f_ri;
        arg_rr_e f_rr_e;
        arg_rri_e f_rri_e;
        arg_rri_log f_rri_log;
        arg_rri_sf f_rri_sf;
        arg_rri_tag f_rri_tag;
        arg_rrr_e f_rrr_e;
        arg_rrrr_e f_rrrr_e;
        arg_rrx_e f_rrx_e;
        arg_set f_set;
        arg_stlr f_stlr;
        arg_stxr f_stxr;
        arg_tbz f_tbz;
    } u;

    switch ((insn >> 26) & 0x7) {
    case 0x2:
        /* ...010.. ........ ........ ........ */
        switch (insn & 0x23800000) {
        case 0x00000000:
            /* ..001000 0....... ........ ........ */
            switch ((insn >> 21) & 0x1) {
            case 0x0:
                /* ..001000 0.0..... ........ ........ */
                disas_a64_extract_stxr(ctx, &u.f_stxr, insn);
                switch ((insn >> 22) & 0x1) {
                case 0x0:
                    /* ..001000 000..... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:302 */
                    if (trans_STXR(ctx, &u.f_stxr)) return true;
                    break;
                case 0x1:
                    /* ..001000 010..... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:303 */
                    if (trans_LDXR(ctx, &u.f_stxr)) return true;
                    break;
                }
                break;
            case 0x1:
                /* ..001000 0.1..... ........ ........ */
                switch ((insn >> 31) & 0x1) {
                case 0x0:
                    /* 0.001000 0.1..... ........ ........ */
                    disas_a64_extract_disas_a64_Fmt_62(ctx, &u.f_disas_a6432, insn);
                    switch ((insn >> 10) & 0x1f) {
                    case 0x1f:
                        /* 0.001000 0.1..... .11111.. ........ */
                        /* ../target/arm/tcg/a64.decode:312 */
                        if (trans_CASP(ctx, &u.f_disas_a6432)) return true;
                        break;
                    }
                    break;
                case 0x1:
                    /* 1.001000 0.1..... ........ ........ */
                    disas_a64_extract_stxp(ctx, &u.f_stxr, insn);
                    switch ((insn >> 22) & 0x1) {
                    case 0x0:
                        /* 1.001000 001..... ........ ........ */
                        /* ../target/arm/tcg/a64.decode:307 */
                        if (trans_STXP(ctx, &u.f_stxr)) return true;
                        break;
                    case 0x1:
                        /* 1.001000 011..... ........ ........ */
                        /* ../target/arm/tcg/a64.decode:308 */
                        if (trans_LDXP(ctx, &u.f_stxr)) return true;
                        break;
                    }
                    break;
                }
                break;
            }
            break;
        case 0x00800000:
            /* ..001000 1....... ........ ........ */
            switch (insn & 0x00207c00) {
            case 0x00007c00:
                /* ..001000 1.0..... .11111.. ........ */
                disas_a64_extract_stlr(ctx, &u.f_stlr, insn);
                switch (insn & 0x005f0000) {
                case 0x001f0000:
                    /* ..001000 10011111 .11111.. ........ */
                    /* ../target/arm/tcg/a64.decode:304 */
                    if (trans_STLR(ctx, &u.f_stlr)) return true;
                    break;
                case 0x005f0000:
                    /* ..001000 11011111 .11111.. ........ */
                    /* ../target/arm/tcg/a64.decode:305 */
                    if (trans_LDAR(ctx, &u.f_stlr)) return true;
                    break;
                }
                break;
            case 0x00207c00:
                /* ..001000 1.1..... .11111.. ........ */
                /* ../target/arm/tcg/a64.decode:314 */
                disas_a64_extract_disas_a64_Fmt_63(ctx, &u.f_disas_a6432, insn);
                if (trans_CAS(ctx, &u.f_disas_a6432)) return true;
                break;
            }
            break;
        case 0x20000000:
            /* ..101000 0....... ........ ........ */
            disas_a64_extract_ldstpair(ctx, &u.f_ldstpair, insn);
            switch (insn & 0xc0400000u) {
            case 0x00000000:
                /* 00101000 00...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:335 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 2;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 0;
                if (trans_STP(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x00400000:
                /* 00101000 01...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:336 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 2;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 0;
                if (trans_LDP(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x80000000u:
                /* 10101000 00...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:337 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 3;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 0;
                if (trans_STP(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x80400000u:
                /* 10101000 01...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:338 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 3;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 0;
                if (trans_LDP(ctx, &u.f_ldstpair)) return true;
                break;
            }
            break;
        case 0x20800000:
            /* ..101000 1....... ........ ........ */
            disas_a64_extract_ldstpair(ctx, &u.f_ldstpair, insn);
            switch (insn & 0xc0400000u) {
            case 0x00000000:
                /* 00101000 10...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:347 */
                u.f_ldstpair.p = 1;
                u.f_ldstpair.sz = 2;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 1;
                if (trans_STP(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x00400000:
                /* 00101000 11...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:348 */
                u.f_ldstpair.p = 1;
                u.f_ldstpair.sz = 2;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 1;
                if (trans_LDP(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x40000000:
                /* 01101000 10...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:386 */
                u.f_ldstpair.p = 1;
                u.f_ldstpair.sz = 3;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 1;
                if (trans_STGP(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x40400000:
                /* 01101000 11...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:349 */
                u.f_ldstpair.p = 1;
                u.f_ldstpair.sz = 2;
                u.f_ldstpair.sign = 1;
                u.f_ldstpair.w = 1;
                if (trans_LDP(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x80000000u:
                /* 10101000 10...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:350 */
                u.f_ldstpair.p = 1;
                u.f_ldstpair.sz = 3;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 1;
                if (trans_STP(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x80400000u:
                /* 10101000 11...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:351 */
                u.f_ldstpair.p = 1;
                u.f_ldstpair.sz = 3;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 1;
                if (trans_LDP(ctx, &u.f_ldstpair)) return true;
                break;
            }
            break;
        case 0x21000000:
            /* ..101001 0....... ........ ........ */
            disas_a64_extract_ldstpair(ctx, &u.f_ldstpair, insn);
            switch (insn & 0xc0400000u) {
            case 0x00000000:
                /* 00101001 00...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:360 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 2;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 0;
                if (trans_STP(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x00400000:
                /* 00101001 01...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:361 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 2;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 0;
                if (trans_LDP(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x40000000:
                /* 01101001 00...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:387 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 3;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 0;
                if (trans_STGP(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x40400000:
                /* 01101001 01...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:362 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 2;
                u.f_ldstpair.sign = 1;
                u.f_ldstpair.w = 0;
                if (trans_LDP(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x80000000u:
                /* 10101001 00...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:363 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 3;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 0;
                if (trans_STP(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x80400000u:
                /* 10101001 01...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:364 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 3;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 0;
                if (trans_LDP(ctx, &u.f_ldstpair)) return true;
                break;
            }
            break;
        case 0x21800000:
            /* ..101001 1....... ........ ........ */
            disas_a64_extract_ldstpair(ctx, &u.f_ldstpair, insn);
            switch (insn & 0xc0400000u) {
            case 0x00000000:
                /* 00101001 10...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:373 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 2;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 1;
                if (trans_STP(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x00400000:
                /* 00101001 11...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:374 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 2;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 1;
                if (trans_LDP(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x40000000:
                /* 01101001 10...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:388 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 3;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 1;
                if (trans_STGP(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x40400000:
                /* 01101001 11...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:375 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 2;
                u.f_ldstpair.sign = 1;
                u.f_ldstpair.w = 1;
                if (trans_LDP(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x80000000u:
                /* 10101001 10...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:376 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 3;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 1;
                if (trans_STP(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x80400000u:
                /* 10101001 11...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:377 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 3;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 1;
                if (trans_LDP(ctx, &u.f_ldstpair)) return true;
                break;
            }
            break;
        }
        break;
    case 0x3:
        /* ...011.. ........ ........ ........ */
        switch (insn & 0x83000000u) {
        case 0x00000000:
            /* 0..01100 ........ ........ ........ */
            switch (insn & 0x20400000) {
            case 0x00000000:
                /* 0.001100 .0...... ........ ........ */
                disas_a64_extract_ldst_mult(ctx, &u.f_ldst_mult, insn);
                switch (insn & 0x0020f000) {
                case 0x00000000:
                    /* 0.001100 .00..... 0000.... ........ */
                    /* ../target/arm/tcg/a64.decode:542 */
                    u.f_ldst_mult.selem = 4;
                    u.f_ldst_mult.rpt = 1;
                    if (trans_ST_mult(ctx, &u.f_ldst_mult)) return true;
                    break;
                case 0x00002000:
                    /* 0.001100 .00..... 0010.... ........ */
                    /* ../target/arm/tcg/a64.decode:543 */
                    u.f_ldst_mult.selem = 1;
                    u.f_ldst_mult.rpt = 4;
                    if (trans_ST_mult(ctx, &u.f_ldst_mult)) return true;
                    break;
                case 0x00004000:
                    /* 0.001100 .00..... 0100.... ........ */
                    /* ../target/arm/tcg/a64.decode:544 */
                    u.f_ldst_mult.selem = 3;
                    u.f_ldst_mult.rpt = 1;
                    if (trans_ST_mult(ctx, &u.f_ldst_mult)) return true;
                    break;
                case 0x00006000:
                    /* 0.001100 .00..... 0110.... ........ */
                    /* ../target/arm/tcg/a64.decode:545 */
                    u.f_ldst_mult.selem = 1;
                    u.f_ldst_mult.rpt = 3;
                    if (trans_ST_mult(ctx, &u.f_ldst_mult)) return true;
                    break;
                case 0x00007000:
                    /* 0.001100 .00..... 0111.... ........ */
                    /* ../target/arm/tcg/a64.decode:546 */
                    u.f_ldst_mult.selem = 1;
                    u.f_ldst_mult.rpt = 1;
                    if (trans_ST_mult(ctx, &u.f_ldst_mult)) return true;
                    break;
                case 0x00008000:
                    /* 0.001100 .00..... 1000.... ........ */
                    /* ../target/arm/tcg/a64.decode:547 */
                    u.f_ldst_mult.selem = 2;
                    u.f_ldst_mult.rpt = 1;
                    if (trans_ST_mult(ctx, &u.f_ldst_mult)) return true;
                    break;
                case 0x0000a000:
                    /* 0.001100 .00..... 1010.... ........ */
                    /* ../target/arm/tcg/a64.decode:548 */
                    u.f_ldst_mult.selem = 1;
                    u.f_ldst_mult.rpt = 2;
                    if (trans_ST_mult(ctx, &u.f_ldst_mult)) return true;
                    break;
                }
                break;
            case 0x00400000:
                /* 0.001100 .1...... ........ ........ */
                disas_a64_extract_ldst_mult(ctx, &u.f_ldst_mult, insn);
                switch (insn & 0x0020f000) {
                case 0x00000000:
                    /* 0.001100 .10..... 0000.... ........ */
                    /* ../target/arm/tcg/a64.decode:550 */
                    u.f_ldst_mult.selem = 4;
                    u.f_ldst_mult.rpt = 1;
                    if (trans_LD_mult(ctx, &u.f_ldst_mult)) return true;
                    break;
                case 0x00002000:
                    /* 0.001100 .10..... 0010.... ........ */
                    /* ../target/arm/tcg/a64.decode:551 */
                    u.f_ldst_mult.selem = 1;
                    u.f_ldst_mult.rpt = 4;
                    if (trans_LD_mult(ctx, &u.f_ldst_mult)) return true;
                    break;
                case 0x00004000:
                    /* 0.001100 .10..... 0100.... ........ */
                    /* ../target/arm/tcg/a64.decode:552 */
                    u.f_ldst_mult.selem = 3;
                    u.f_ldst_mult.rpt = 1;
                    if (trans_LD_mult(ctx, &u.f_ldst_mult)) return true;
                    break;
                case 0x00006000:
                    /* 0.001100 .10..... 0110.... ........ */
                    /* ../target/arm/tcg/a64.decode:553 */
                    u.f_ldst_mult.selem = 1;
                    u.f_ldst_mult.rpt = 3;
                    if (trans_LD_mult(ctx, &u.f_ldst_mult)) return true;
                    break;
                case 0x00007000:
                    /* 0.001100 .10..... 0111.... ........ */
                    /* ../target/arm/tcg/a64.decode:554 */
                    u.f_ldst_mult.selem = 1;
                    u.f_ldst_mult.rpt = 1;
                    if (trans_LD_mult(ctx, &u.f_ldst_mult)) return true;
                    break;
                case 0x00008000:
                    /* 0.001100 .10..... 1000.... ........ */
                    /* ../target/arm/tcg/a64.decode:555 */
                    u.f_ldst_mult.selem = 2;
                    u.f_ldst_mult.rpt = 1;
                    if (trans_LD_mult(ctx, &u.f_ldst_mult)) return true;
                    break;
                case 0x0000a000:
                    /* 0.001100 .10..... 1010.... ........ */
                    /* ../target/arm/tcg/a64.decode:556 */
                    u.f_ldst_mult.selem = 1;
                    u.f_ldst_mult.rpt = 2;
                    if (trans_LD_mult(ctx, &u.f_ldst_mult)) return true;
                    break;
                }
                break;
            case 0x20000000:
                /* 0.101100 .0...... ........ ........ */
                disas_a64_extract_ldstpair(ctx, &u.f_ldstpair, insn);
                switch (insn & 0x40800000) {
                case 0x00000000:
                    /* 00101100 00...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:339 */
                    u.f_ldstpair.p = 0;
                    u.f_ldstpair.sz = 2;
                    u.f_ldstpair.sign = 0;
                    u.f_ldstpair.w = 0;
                    if (trans_STP_v(ctx, &u.f_ldstpair)) return true;
                    break;
                case 0x00800000:
                    /* 00101100 10...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:352 */
                    u.f_ldstpair.p = 1;
                    u.f_ldstpair.sz = 2;
                    u.f_ldstpair.sign = 0;
                    u.f_ldstpair.w = 1;
                    if (trans_STP_v(ctx, &u.f_ldstpair)) return true;
                    break;
                case 0x40000000:
                    /* 01101100 00...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:341 */
                    u.f_ldstpair.p = 0;
                    u.f_ldstpair.sz = 3;
                    u.f_ldstpair.sign = 0;
                    u.f_ldstpair.w = 0;
                    if (trans_STP_v(ctx, &u.f_ldstpair)) return true;
                    break;
                case 0x40800000:
                    /* 01101100 10...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:354 */
                    u.f_ldstpair.p = 1;
                    u.f_ldstpair.sz = 3;
                    u.f_ldstpair.sign = 0;
                    u.f_ldstpair.w = 1;
                    if (trans_STP_v(ctx, &u.f_ldstpair)) return true;
                    break;
                }
                break;
            case 0x20400000:
                /* 0.101100 .1...... ........ ........ */
                disas_a64_extract_ldstpair(ctx, &u.f_ldstpair, insn);
                switch (insn & 0x40800000) {
                case 0x00000000:
                    /* 00101100 01...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:340 */
                    u.f_ldstpair.p = 0;
                    u.f_ldstpair.sz = 2;
                    u.f_ldstpair.sign = 0;
                    u.f_ldstpair.w = 0;
                    if (trans_LDP_v(ctx, &u.f_ldstpair)) return true;
                    break;
                case 0x00800000:
                    /* 00101100 11...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:353 */
                    u.f_ldstpair.p = 1;
                    u.f_ldstpair.sz = 2;
                    u.f_ldstpair.sign = 0;
                    u.f_ldstpair.w = 1;
                    if (trans_LDP_v(ctx, &u.f_ldstpair)) return true;
                    break;
                case 0x40000000:
                    /* 01101100 01...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:342 */
                    u.f_ldstpair.p = 0;
                    u.f_ldstpair.sz = 3;
                    u.f_ldstpair.sign = 0;
                    u.f_ldstpair.w = 0;
                    if (trans_LDP_v(ctx, &u.f_ldstpair)) return true;
                    break;
                case 0x40800000:
                    /* 01101100 11...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:355 */
                    u.f_ldstpair.p = 1;
                    u.f_ldstpair.sz = 3;
                    u.f_ldstpair.sign = 0;
                    u.f_ldstpair.w = 1;
                    if (trans_LDP_v(ctx, &u.f_ldstpair)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x01000000:
            /* 0..01101 ........ ........ ........ */
            switch (insn & 0x20400000) {
            case 0x00000000:
                /* 0.001101 .0...... ........ ........ */
                switch ((insn >> 14) & 0x3) {
                case 0x0:
                    /* 0.001101 .0...... 00...... ........ */
                    /* ../target/arm/tcg/a64.decode:579 */
                    disas_a64_extract_ldst_single_b(ctx, &u.f_ldst_single, insn);
                    if (trans_ST_single(ctx, &u.f_ldst_single)) return true;
                    break;
                case 0x1:
                    /* 0.001101 .0...... 01...... ........ */
                    disas_a64_extract_ldst_single_h(ctx, &u.f_ldst_single, insn);
                    switch ((insn >> 10) & 0x1) {
                    case 0x0:
                        /* 0.001101 .0...... 01...0.. ........ */
                        /* ../target/arm/tcg/a64.decode:580 */
                        if (trans_ST_single(ctx, &u.f_ldst_single)) return true;
                        break;
                    }
                    break;
                case 0x2:
                    /* 0.001101 .0...... 10...... ........ */
                    switch ((insn >> 10) & 0x3) {
                    case 0x0:
                        /* 0.001101 .0...... 10..00.. ........ */
                        /* ../target/arm/tcg/a64.decode:581 */
                        disas_a64_extract_ldst_single_s(ctx, &u.f_ldst_single, insn);
                        if (trans_ST_single(ctx, &u.f_ldst_single)) return true;
                        break;
                    case 0x1:
                        /* 0.001101 .0...... 10..01.. ........ */
                        disas_a64_extract_ldst_single_d(ctx, &u.f_ldst_single, insn);
                        switch ((insn >> 12) & 0x1) {
                        case 0x0:
                            /* 0.001101 .0...... 10.001.. ........ */
                            /* ../target/arm/tcg/a64.decode:582 */
                            if (trans_ST_single(ctx, &u.f_ldst_single)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                }
                break;
            case 0x00400000:
                /* 0.001101 .1...... ........ ........ */
                switch ((insn >> 14) & 0x3) {
                case 0x0:
                    /* 0.001101 .1...... 00...... ........ */
                    /* ../target/arm/tcg/a64.decode:584 */
                    disas_a64_extract_ldst_single_b(ctx, &u.f_ldst_single, insn);
                    if (trans_LD_single(ctx, &u.f_ldst_single)) return true;
                    break;
                case 0x1:
                    /* 0.001101 .1...... 01...... ........ */
                    disas_a64_extract_ldst_single_h(ctx, &u.f_ldst_single, insn);
                    switch ((insn >> 10) & 0x1) {
                    case 0x0:
                        /* 0.001101 .1...... 01...0.. ........ */
                        /* ../target/arm/tcg/a64.decode:585 */
                        if (trans_LD_single(ctx, &u.f_ldst_single)) return true;
                        break;
                    }
                    break;
                case 0x2:
                    /* 0.001101 .1...... 10...... ........ */
                    switch ((insn >> 10) & 0x3) {
                    case 0x0:
                        /* 0.001101 .1...... 10..00.. ........ */
                        /* ../target/arm/tcg/a64.decode:586 */
                        disas_a64_extract_ldst_single_s(ctx, &u.f_ldst_single, insn);
                        if (trans_LD_single(ctx, &u.f_ldst_single)) return true;
                        break;
                    case 0x1:
                        /* 0.001101 .1...... 10..01.. ........ */
                        disas_a64_extract_ldst_single_d(ctx, &u.f_ldst_single, insn);
                        switch ((insn >> 12) & 0x1) {
                        case 0x0:
                            /* 0.001101 .1...... 10.001.. ........ */
                            /* ../target/arm/tcg/a64.decode:587 */
                            if (trans_LD_single(ctx, &u.f_ldst_single)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                case 0x3:
                    /* 0.001101 .1...... 11...... ........ */
                    disas_a64_extract_disas_a64_Fmt_81(ctx, &u.f_disas_a6443, insn);
                    switch ((insn >> 12) & 0x1) {
                    case 0x0:
                        /* 0.001101 .1...... 11.0.... ........ */
                        /* ../target/arm/tcg/a64.decode:590 */
                        if (trans_LD_single_repl(ctx, &u.f_disas_a6443)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x20000000:
                /* 0.101101 .0...... ........ ........ */
                disas_a64_extract_ldstpair(ctx, &u.f_ldstpair, insn);
                switch (insn & 0x40800000) {
                case 0x00000000:
                    /* 00101101 00...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:365 */
                    u.f_ldstpair.p = 0;
                    u.f_ldstpair.sz = 2;
                    u.f_ldstpair.sign = 0;
                    u.f_ldstpair.w = 0;
                    if (trans_STP_v(ctx, &u.f_ldstpair)) return true;
                    break;
                case 0x00800000:
                    /* 00101101 10...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:378 */
                    u.f_ldstpair.p = 0;
                    u.f_ldstpair.sz = 2;
                    u.f_ldstpair.sign = 0;
                    u.f_ldstpair.w = 1;
                    if (trans_STP_v(ctx, &u.f_ldstpair)) return true;
                    break;
                case 0x40000000:
                    /* 01101101 00...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:367 */
                    u.f_ldstpair.p = 0;
                    u.f_ldstpair.sz = 3;
                    u.f_ldstpair.sign = 0;
                    u.f_ldstpair.w = 0;
                    if (trans_STP_v(ctx, &u.f_ldstpair)) return true;
                    break;
                case 0x40800000:
                    /* 01101101 10...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:380 */
                    u.f_ldstpair.p = 0;
                    u.f_ldstpair.sz = 3;
                    u.f_ldstpair.sign = 0;
                    u.f_ldstpair.w = 1;
                    if (trans_STP_v(ctx, &u.f_ldstpair)) return true;
                    break;
                }
                break;
            case 0x20400000:
                /* 0.101101 .1...... ........ ........ */
                disas_a64_extract_ldstpair(ctx, &u.f_ldstpair, insn);
                switch (insn & 0x40800000) {
                case 0x00000000:
                    /* 00101101 01...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:366 */
                    u.f_ldstpair.p = 0;
                    u.f_ldstpair.sz = 2;
                    u.f_ldstpair.sign = 0;
                    u.f_ldstpair.w = 0;
                    if (trans_LDP_v(ctx, &u.f_ldstpair)) return true;
                    break;
                case 0x00800000:
                    /* 00101101 11...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:379 */
                    u.f_ldstpair.p = 0;
                    u.f_ldstpair.sz = 2;
                    u.f_ldstpair.sign = 0;
                    u.f_ldstpair.w = 1;
                    if (trans_LDP_v(ctx, &u.f_ldstpair)) return true;
                    break;
                case 0x40000000:
                    /* 01101101 01...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:368 */
                    u.f_ldstpair.p = 0;
                    u.f_ldstpair.sz = 3;
                    u.f_ldstpair.sign = 0;
                    u.f_ldstpair.w = 0;
                    if (trans_LDP_v(ctx, &u.f_ldstpair)) return true;
                    break;
                case 0x40800000:
                    /* 01101101 11...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:381 */
                    u.f_ldstpair.p = 0;
                    u.f_ldstpair.sz = 3;
                    u.f_ldstpair.sign = 0;
                    u.f_ldstpair.w = 1;
                    if (trans_LDP_v(ctx, &u.f_ldstpair)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x02000000:
            /* 0..01110 ........ ........ ........ */
            switch (insn & 0x20208400) {
            case 0x00000000:
                /* 0.001110 ..0..... 0....0.. ........ */
                switch ((insn >> 11) & 0x1) {
                case 0x0:
                    /* 0.001110 ..0..... 0...00.. ........ */
                    disas_a64_extract_disas_a64_Fmt_105(ctx, &u.f_disas_a6454, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x0:
                        /* 0.001110 000..... 0...00.. ........ */
                        /* ../target/arm/tcg/a64.decode:1153 */
                        if (trans_TBL_TBX(ctx, &u.f_disas_a6454)) return true;
                        break;
                    }
                    break;
                case 0x1:
                    /* 0.001110 ..0..... 0...10.. ........ */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 12) & 0x7) {
                    case 0x1:
                        /* 0.001110 ..0..... 000110.. ........ */
                        /* ../target/arm/tcg/a64.decode:1157 */
                        if (trans_UZP1(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x2:
                        /* 0.001110 ..0..... 001010.. ........ */
                        /* ../target/arm/tcg/a64.decode:1159 */
                        if (trans_TRN1(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x3:
                        /* 0.001110 ..0..... 001110.. ........ */
                        /* ../target/arm/tcg/a64.decode:1161 */
                        if (trans_ZIP1(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x5:
                        /* 0.001110 ..0..... 010110.. ........ */
                        /* ../target/arm/tcg/a64.decode:1158 */
                        if (trans_UZP2(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x6:
                        /* 0.001110 ..0..... 011010.. ........ */
                        /* ../target/arm/tcg/a64.decode:1160 */
                        if (trans_TRN2(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x7:
                        /* 0.001110 ..0..... 011110.. ........ */
                        /* ../target/arm/tcg/a64.decode:1162 */
                        if (trans_ZIP2(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x00000400:
                /* 0.001110 ..0..... 0....1.. ........ */
                switch (insn & 0x00c07800) {
                case 0x00000000:
                    /* 0.001110 000..... 000001.. ........ */
                    /* ../target/arm/tcg/a64.decode:716 */
                    disas_a64_extract_disas_a64_Fmt_89(ctx, &u.f_disas_a6449, insn);
                    if (trans_DUP_element_v(ctx, &u.f_disas_a6449)) return true;
                    break;
                case 0x00000800:
                    /* 0.001110 000..... 000011.. ........ */
                    /* ../target/arm/tcg/a64.decode:717 */
                    disas_a64_extract_disas_a64_Fmt_89(ctx, &u.f_disas_a6449, insn);
                    if (trans_DUP_general(ctx, &u.f_disas_a6449)) return true;
                    break;
                case 0x00001800:
                    /* 0.001110 000..... 000111.. ........ */
                    disas_a64_extract_disas_a64_Fmt_88(ctx, &u.f_disas_a6448, insn);
                    switch ((insn >> 30) & 0x1) {
                    case 0x1:
                        /* 01001110 000..... 000111.. ........ */
                        /* ../target/arm/tcg/a64.decode:718 */
                        if (trans_INS_general(ctx, &u.f_disas_a6448)) return true;
                        break;
                    }
                    break;
                case 0x00002800:
                    /* 0.001110 000..... 001011.. ........ */
                    /* ../target/arm/tcg/a64.decode:719 */
                    disas_a64_extract_disas_a64_Fmt_89(ctx, &u.f_disas_a6449, insn);
                    if (trans_SMOV(ctx, &u.f_disas_a6449)) return true;
                    break;
                case 0x00003800:
                    /* 0.001110 000..... 001111.. ........ */
                    /* ../target/arm/tcg/a64.decode:720 */
                    disas_a64_extract_disas_a64_Fmt_89(ctx, &u.f_disas_a6449, insn);
                    if (trans_UMOV(ctx, &u.f_disas_a6449)) return true;
                    break;
                case 0x00400000:
                    /* 0.001110 010..... 000001.. ........ */
                    /* ../target/arm/tcg/a64.decode:841 */
                    disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                    if (trans_FMAXNM_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00400800:
                    /* 0.001110 010..... 000011.. ........ */
                    /* ../target/arm/tcg/a64.decode:850 */
                    disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                    if (trans_FMLA_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00401000:
                    /* 0.001110 010..... 000101.. ........ */
                    /* ../target/arm/tcg/a64.decode:823 */
                    disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                    if (trans_FADD_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00401800:
                    /* 0.001110 010..... 000111.. ........ */
                    /* ../target/arm/tcg/a64.decode:847 */
                    disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                    if (trans_FMULX_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00402000:
                    /* 0.001110 010..... 001001.. ........ */
                    /* ../target/arm/tcg/a64.decode:861 */
                    disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                    if (trans_FCMEQ_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00403000:
                    /* 0.001110 010..... 001101.. ........ */
                    /* ../target/arm/tcg/a64.decode:835 */
                    disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                    if (trans_FMAX_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00403800:
                    /* 0.001110 010..... 001111.. ........ */
                    /* ../target/arm/tcg/a64.decode:879 */
                    disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                    if (trans_FRECPS_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00c00000:
                    /* 0.001110 110..... 000001.. ........ */
                    /* ../target/arm/tcg/a64.decode:844 */
                    disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                    if (trans_FMINNM_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00c00800:
                    /* 0.001110 110..... 000011.. ........ */
                    /* ../target/arm/tcg/a64.decode:853 */
                    disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                    if (trans_FMLS_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00c01000:
                    /* 0.001110 110..... 000101.. ........ */
                    /* ../target/arm/tcg/a64.decode:826 */
                    disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                    if (trans_FSUB_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00c03000:
                    /* 0.001110 110..... 001101.. ........ */
                    /* ../target/arm/tcg/a64.decode:838 */
                    disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                    if (trans_FMIN_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00c03800:
                    /* 0.001110 110..... 001111.. ........ */
                    /* ../target/arm/tcg/a64.decode:882 */
                    disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                    if (trans_FRSQRTS_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                }
                break;
            case 0x00008400:
                /* 0.001110 ..0..... 1....1.. ........ */
                switch (insn & 0x00c07800) {
                case 0x00801000:
                    /* 0.001110 100..... 100101.. ........ */
                    /* ../target/arm/tcg/a64.decode:964 */
                    disas_a64_extract_qrrr_s(ctx, &u.f_qrrr_e, insn);
                    if (trans_SDOT_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00801800:
                    /* 0.001110 100..... 100111.. ........ */
                    /* ../target/arm/tcg/a64.decode:966 */
                    disas_a64_extract_qrrr_s(ctx, &u.f_qrrr_e, insn);
                    if (trans_USDOT_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00802000:
                    /* 0.001110 100..... 101001.. ........ */
                    disas_a64_extract_rrr_q1e0(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 30) & 0x1) {
                    case 0x1:
                        /* 01001110 100..... 101001.. ........ */
                        /* ../target/arm/tcg/a64.decode:970 */
                        if (trans_SMMLA(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0x00802800:
                    /* 0.001110 100..... 101011.. ........ */
                    disas_a64_extract_rrr_q1e0(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 30) & 0x1) {
                    case 0x1:
                        /* 01001110 100..... 101011.. ........ */
                        /* ../target/arm/tcg/a64.decode:972 */
                        if (trans_USMMLA(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x00200000:
                /* 0.001110 ..1..... 0....0.. ........ */
                switch ((insn >> 11) & 0xf) {
                case 0x0:
                    /* 0.001110 ..1..... 000000.. ........ */
                    /* ../target/arm/tcg/a64.decode:986 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SADDL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x2:
                    /* 0.001110 ..1..... 000100.. ........ */
                    /* ../target/arm/tcg/a64.decode:1002 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SADDW(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x4:
                    /* 0.001110 ..1..... 001000.. ........ */
                    /* ../target/arm/tcg/a64.decode:988 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SSUBL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x6:
                    /* 0.001110 ..1..... 001100.. ........ */
                    /* ../target/arm/tcg/a64.decode:1004 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SSUBW(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x7:
                    /* 0.001110 ..1..... 001110.. ........ */
                    switch ((insn >> 16) & 0x1f) {
                    case 0x0:
                        /* 0.001110 ..100000 001110.. ........ */
                        /* ../target/arm/tcg/a64.decode:920 */
                        disas_a64_extract_qr2r_e(ctx, &u.f_qrrr_e, insn);
                        if (trans_SUQADD_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x10:
                        /* 0.001110 ..110000 001110.. ........ */
                        /* ../target/arm/tcg/a64.decode:1167 */
                        disas_a64_extract_qrr_e(ctx, &u.f_qrr_e, insn);
                        if (trans_SADDLV(ctx, &u.f_qrr_e)) return true;
                        break;
                    }
                    break;
                case 0x8:
                    /* 0.001110 ..1..... 010000.. ........ */
                    /* ../target/arm/tcg/a64.decode:1007 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_ADDHN(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x9:
                    /* 0.001110 ..1..... 010010.. ........ */
                    disas_a64_extract_r2r_q1e0(ctx, &u.f_qrrr_e, insn);
                    switch (insn & 0x40df0000) {
                    case 0x40080000:
                        /* 01001110 00101000 010010.. ........ */
                        /* ../target/arm/tcg/a64.decode:654 */
                        if (trans_AESE(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0xa:
                    /* 0.001110 ..1..... 010100.. ........ */
                    /* ../target/arm/tcg/a64.decode:990 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SABAL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0xb:
                    /* 0.001110 ..1..... 010110.. ........ */
                    disas_a64_extract_r2r_q1e0(ctx, &u.f_qrrr_e, insn);
                    switch (insn & 0x40df0000) {
                    case 0x40080000:
                        /* 01001110 00101000 010110.. ........ */
                        /* ../target/arm/tcg/a64.decode:655 */
                        if (trans_AESD(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0xc:
                    /* 0.001110 ..1..... 011000.. ........ */
                    /* ../target/arm/tcg/a64.decode:1009 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SUBHN(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0xd:
                    /* 0.001110 ..1..... 011010.. ........ */
                    disas_a64_extract_rr_q1e0(ctx, &u.f_qrr_e, insn);
                    switch (insn & 0x40df0000) {
                    case 0x40080000:
                        /* 01001110 00101000 011010.. ........ */
                        /* ../target/arm/tcg/a64.decode:656 */
                        if (trans_AESMC(ctx, &u.f_qrr_e)) return true;
                        break;
                    }
                    break;
                case 0xe:
                    /* 0.001110 ..1..... 011100.. ........ */
                    /* ../target/arm/tcg/a64.decode:992 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SABDL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0xf:
                    /* 0.001110 ..1..... 011110.. ........ */
                    disas_a64_extract_rr_q1e0(ctx, &u.f_qrr_e, insn);
                    switch (insn & 0x40df0000) {
                    case 0x40080000:
                        /* 01001110 00101000 011110.. ........ */
                        /* ../target/arm/tcg/a64.decode:657 */
                        if (trans_AESIMC(ctx, &u.f_qrr_e)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x00200400:
                /* 0.001110 ..1..... 0....1.. ........ */
                switch ((insn >> 11) & 0xf) {
                case 0x0:
                    /* 0.001110 ..1..... 000001.. ........ */
                    /* ../target/arm/tcg/a64.decode:940 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SHADD_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x1:
                    /* 0.001110 ..1..... 000011.. ........ */
                    /* ../target/arm/tcg/a64.decode:915 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SQADD_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x2:
                    /* 0.001110 ..1..... 000101.. ........ */
                    /* ../target/arm/tcg/a64.decode:944 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SRHADD_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x3:
                    /* 0.001110 ..1..... 000111.. ........ */
                    disas_a64_extract_qrrr_b(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x0:
                        /* 0.001110 001..... 000111.. ........ */
                        /* ../target/arm/tcg/a64.decode:906 */
                        if (trans_AND_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x1:
                        /* 0.001110 011..... 000111.. ........ */
                        /* ../target/arm/tcg/a64.decode:907 */
                        if (trans_BIC_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x2:
                        /* 0.001110 101..... 000111.. ........ */
                        /* ../target/arm/tcg/a64.decode:908 */
                        if (trans_ORR_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x3:
                        /* 0.001110 111..... 000111.. ........ */
                        /* ../target/arm/tcg/a64.decode:909 */
                        if (trans_ORN_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0x4:
                    /* 0.001110 ..1..... 001001.. ........ */
                    /* ../target/arm/tcg/a64.decode:942 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SHSUB_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x5:
                    /* 0.001110 ..1..... 001011.. ........ */
                    /* ../target/arm/tcg/a64.decode:917 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SQSUB_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x6:
                    /* 0.001110 ..1..... 001101.. ........ */
                    /* ../target/arm/tcg/a64.decode:934 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_CMGT_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x7:
                    /* 0.001110 ..1..... 001111.. ........ */
                    /* ../target/arm/tcg/a64.decode:936 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_CMGE_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x8:
                    /* 0.001110 ..1..... 010001.. ........ */
                    /* ../target/arm/tcg/a64.decode:923 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SSHL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x9:
                    /* 0.001110 ..1..... 010011.. ........ */
                    /* ../target/arm/tcg/a64.decode:927 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SQSHL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0xa:
                    /* 0.001110 ..1..... 010101.. ........ */
                    /* ../target/arm/tcg/a64.decode:925 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SRSHL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0xb:
                    /* 0.001110 ..1..... 010111.. ........ */
                    /* ../target/arm/tcg/a64.decode:929 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SQRSHL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0xc:
                    /* 0.001110 ..1..... 011001.. ........ */
                    /* ../target/arm/tcg/a64.decode:946 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SMAX_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0xd:
                    /* 0.001110 ..1..... 011011.. ........ */
                    /* ../target/arm/tcg/a64.decode:948 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SMIN_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0xe:
                    /* 0.001110 ..1..... 011101.. ........ */
                    /* ../target/arm/tcg/a64.decode:950 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SABD_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0xf:
                    /* 0.001110 ..1..... 011111.. ........ */
                    /* ../target/arm/tcg/a64.decode:952 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SABA_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                }
                break;
            case 0x00208000:
                /* 0.001110 ..1..... 1....0.. ........ */
                switch ((insn >> 11) & 0xf) {
                case 0x0:
                    /* 0.001110 ..1..... 100000.. ........ */
                    /* ../target/arm/tcg/a64.decode:981 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SMLAL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x2:
                    /* 0.001110 ..1..... 100100.. ........ */
                    switch ((insn >> 22) & 0x3) {
                    case 0x1:
                        /* 0.001110 011..... 100100.. ........ */
                        /* ../target/arm/tcg/a64.decode:997 */
                        disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                        if (trans_SQDMLAL_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x2:
                        /* 0.001110 101..... 100100.. ........ */
                        /* ../target/arm/tcg/a64.decode:998 */
                        disas_a64_extract_qrrr_s(ctx, &u.f_qrrr_e, insn);
                        if (trans_SQDMLAL_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0x4:
                    /* 0.001110 ..1..... 101000.. ........ */
                    /* ../target/arm/tcg/a64.decode:983 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SMLSL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x5:
                    /* 0.001110 ..1..... 101010.. ........ */
                    disas_a64_extract_qrr_e(ctx, &u.f_qrr_e, insn);
                    switch ((insn >> 16) & 0x1f) {
                    case 0x10:
                        /* 0.001110 ..110000 101010.. ........ */
                        /* ../target/arm/tcg/a64.decode:1169 */
                        if (trans_SMAXV(ctx, &u.f_qrr_e)) return true;
                        break;
                    case 0x11:
                        /* 0.001110 ..110001 101010.. ........ */
                        /* ../target/arm/tcg/a64.decode:1171 */
                        if (trans_SMINV(ctx, &u.f_qrr_e)) return true;
                        break;
                    }
                    break;
                case 0x6:
                    /* 0.001110 ..1..... 101100.. ........ */
                    switch ((insn >> 22) & 0x3) {
                    case 0x1:
                        /* 0.001110 011..... 101100.. ........ */
                        /* ../target/arm/tcg/a64.decode:999 */
                        disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                        if (trans_SQDMLSL_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x2:
                        /* 0.001110 101..... 101100.. ........ */
                        /* ../target/arm/tcg/a64.decode:1000 */
                        disas_a64_extract_qrrr_s(ctx, &u.f_qrrr_e, insn);
                        if (trans_SQDMLSL_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0x7:
                    /* 0.001110 ..1..... 101110.. ........ */
                    disas_a64_extract_qrr_e(ctx, &u.f_qrr_e, insn);
                    switch ((insn >> 16) & 0x1f) {
                    case 0x11:
                        /* 0.001110 ..110001 101110.. ........ */
                        /* ../target/arm/tcg/a64.decode:1166 */
                        if (trans_ADDV(ctx, &u.f_qrr_e)) return true;
                        break;
                    }
                    break;
                case 0x8:
                    /* 0.001110 ..1..... 110000.. ........ */
                    /* ../target/arm/tcg/a64.decode:979 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SMULL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x9:
                    /* 0.001110 ..1..... 110010.. ........ */
                    disas_a64_extract_qrr_h(ctx, &u.f_qrr_e, insn);
                    switch (insn & 0x00df0000) {
                    case 0x00100000:
                        /* 0.001110 00110000 110010.. ........ */
                        /* ../target/arm/tcg/a64.decode:1174 */
                        if (trans_FMAXNMV_h(ctx, &u.f_qrr_e)) return true;
                        break;
                    case 0x00900000:
                        /* 0.001110 10110000 110010.. ........ */
                        /* ../target/arm/tcg/a64.decode:1177 */
                        if (trans_FMINNMV_h(ctx, &u.f_qrr_e)) return true;
                        break;
                    }
                    break;
                case 0xa:
                    /* 0.001110 ..1..... 110100.. ........ */
                    switch ((insn >> 22) & 0x3) {
                    case 0x1:
                        /* 0.001110 011..... 110100.. ........ */
                        /* ../target/arm/tcg/a64.decode:995 */
                        disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                        if (trans_SQDMULL_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x2:
                        /* 0.001110 101..... 110100.. ........ */
                        /* ../target/arm/tcg/a64.decode:996 */
                        disas_a64_extract_qrrr_s(ctx, &u.f_qrrr_e, insn);
                        if (trans_SQDMULL_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0xc:
                    /* 0.001110 ..1..... 111000.. ........ */
                    disas_a64_extract_qrrr_b(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x0:
                        /* 0.001110 001..... 111000.. ........ */
                        /* ../target/arm/tcg/a64.decode:1012 */
                        if (trans_PMULL_p8(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x3:
                        /* 0.001110 111..... 111000.. ........ */
                        /* ../target/arm/tcg/a64.decode:1013 */
                        if (trans_PMULL_p64(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0xf:
                    /* 0.001110 ..1..... 111110.. ........ */
                    disas_a64_extract_qrr_h(ctx, &u.f_qrr_e, insn);
                    switch (insn & 0x00df0000) {
                    case 0x00100000:
                        /* 0.001110 00110000 111110.. ........ */
                        /* ../target/arm/tcg/a64.decode:1180 */
                        if (trans_FMAXV_h(ctx, &u.f_qrr_e)) return true;
                        break;
                    case 0x00900000:
                        /* 0.001110 10110000 111110.. ........ */
                        /* ../target/arm/tcg/a64.decode:1183 */
                        if (trans_FMINV_h(ctx, &u.f_qrr_e)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x00208400:
                /* 0.001110 ..1..... 1....1.. ........ */
                switch ((insn >> 11) & 0xf) {
                case 0x0:
                    /* 0.001110 ..1..... 100001.. ........ */
                    /* ../target/arm/tcg/a64.decode:932 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_ADD_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x1:
                    /* 0.001110 ..1..... 100011.. ........ */
                    /* ../target/arm/tcg/a64.decode:938 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_CMTST_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x2:
                    /* 0.001110 ..1..... 100101.. ........ */
                    /* ../target/arm/tcg/a64.decode:956 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_MLA_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x3:
                    /* 0.001110 ..1..... 100111.. ........ */
                    /* ../target/arm/tcg/a64.decode:954 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_MUL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x4:
                    /* 0.001110 ..1..... 101001.. ........ */
                    /* ../target/arm/tcg/a64.decode:901 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SMAXP_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x5:
                    /* 0.001110 ..1..... 101011.. ........ */
                    /* ../target/arm/tcg/a64.decode:902 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SMINP_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x6:
                    /* 0.001110 ..1..... 101101.. ........ */
                    /* ../target/arm/tcg/a64.decode:959 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SQDMULH_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x7:
                    /* 0.001110 ..1..... 101111.. ........ */
                    /* ../target/arm/tcg/a64.decode:900 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_ADDP_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x8:
                    /* 0.001110 ..1..... 110001.. ........ */
                    disas_a64_extract_qrrr_sd(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 23) & 0x1) {
                    case 0x0:
                        /* 0.001110 0.1..... 110001.. ........ */
                        /* ../target/arm/tcg/a64.decode:842 */
                        if (trans_FMAXNM_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x1:
                        /* 0.001110 1.1..... 110001.. ........ */
                        /* ../target/arm/tcg/a64.decode:845 */
                        if (trans_FMINNM_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0x9:
                    /* 0.001110 ..1..... 110011.. ........ */
                    disas_a64_extract_qrrr_sd(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 23) & 0x1) {
                    case 0x0:
                        /* 0.001110 0.1..... 110011.. ........ */
                        /* ../target/arm/tcg/a64.decode:851 */
                        if (trans_FMLA_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x1:
                        /* 0.001110 1.1..... 110011.. ........ */
                        /* ../target/arm/tcg/a64.decode:854 */
                        if (trans_FMLS_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0xa:
                    /* 0.001110 ..1..... 110101.. ........ */
                    disas_a64_extract_qrrr_sd(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 23) & 0x1) {
                    case 0x0:
                        /* 0.001110 0.1..... 110101.. ........ */
                        /* ../target/arm/tcg/a64.decode:824 */
                        if (trans_FADD_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x1:
                        /* 0.001110 1.1..... 110101.. ........ */
                        /* ../target/arm/tcg/a64.decode:827 */
                        if (trans_FSUB_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0xb:
                    /* 0.001110 ..1..... 110111.. ........ */
                    disas_a64_extract_qrrr_sd(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 23) & 0x1) {
                    case 0x0:
                        /* 0.001110 0.1..... 110111.. ........ */
                        /* ../target/arm/tcg/a64.decode:848 */
                        if (trans_FMULX_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0xc:
                    /* 0.001110 ..1..... 111001.. ........ */
                    disas_a64_extract_qrrr_sd(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 23) & 0x1) {
                    case 0x0:
                        /* 0.001110 0.1..... 111001.. ........ */
                        /* ../target/arm/tcg/a64.decode:862 */
                        if (trans_FCMEQ_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0xd:
                    /* 0.001110 ..1..... 111011.. ........ */
                    disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x0:
                        /* 0.001110 001..... 111011.. ........ */
                        /* ../target/arm/tcg/a64.decode:856 */
                        if (trans_FMLAL_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x2:
                        /* 0.001110 101..... 111011.. ........ */
                        /* ../target/arm/tcg/a64.decode:857 */
                        if (trans_FMLSL_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0xe:
                    /* 0.001110 ..1..... 111101.. ........ */
                    disas_a64_extract_qrrr_sd(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 23) & 0x1) {
                    case 0x0:
                        /* 0.001110 0.1..... 111101.. ........ */
                        /* ../target/arm/tcg/a64.decode:836 */
                        if (trans_FMAX_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x1:
                        /* 0.001110 1.1..... 111101.. ........ */
                        /* ../target/arm/tcg/a64.decode:839 */
                        if (trans_FMIN_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0xf:
                    /* 0.001110 ..1..... 111111.. ........ */
                    disas_a64_extract_qrrr_sd(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 23) & 0x1) {
                    case 0x0:
                        /* 0.001110 0.1..... 111111.. ........ */
                        /* ../target/arm/tcg/a64.decode:880 */
                        if (trans_FRECPS_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x1:
                        /* 0.001110 1.1..... 111111.. ........ */
                        /* ../target/arm/tcg/a64.decode:883 */
                        if (trans_FRSQRTS_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x20000000:
                /* 0.101110 ..0..... 0....0.. ........ */
                switch (insn & 0x40c00000) {
                case 0x00000000:
                    /* 00101110 000..... 0....0.. ........ */
                    disas_a64_extract_disas_a64_Fmt_103(ctx, &u.f_crypto3i, insn);
                    switch ((insn >> 14) & 0x1) {
                    case 0x0:
                        /* 00101110 000..... 00...0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1148 */
                        if (trans_EXT_d(ctx, &u.f_crypto3i)) return true;
                        break;
                    }
                    break;
                case 0x40000000:
                    /* 01101110 000..... 0....0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1149 */
                    disas_a64_extract_disas_a64_Fmt_104(ctx, &u.f_crypto3i, insn);
                    if (trans_EXT_q(ctx, &u.f_crypto3i)) return true;
                    break;
                }
                break;
            case 0x20000400:
                /* 0.101110 ..0..... 0....1.. ........ */
                switch ((insn >> 22) & 0x3) {
                case 0x0:
                    /* 0.101110 000..... 0....1.. ........ */
                    disas_a64_extract_disas_a64_Fmt_90(ctx, &u.f_disas_a6450, insn);
                    switch ((insn >> 30) & 0x1) {
                    case 0x1:
                        /* 01101110 000..... 0....1.. ........ */
                        /* ../target/arm/tcg/a64.decode:721 */
                        if (trans_INS_element(ctx, &u.f_disas_a6450)) return true;
                        break;
                    }
                    break;
                case 0x1:
                    /* 0.101110 010..... 0....1.. ........ */
                    disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 11) & 0xf) {
                    case 0x0:
                        /* 0.101110 010..... 000001.. ........ */
                        /* ../target/arm/tcg/a64.decode:894 */
                        if (trans_FMAXNMP_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x2:
                        /* 0.101110 010..... 000101.. ........ */
                        /* ../target/arm/tcg/a64.decode:885 */
                        if (trans_FADDP_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x3:
                        /* 0.101110 010..... 000111.. ........ */
                        /* ../target/arm/tcg/a64.decode:832 */
                        if (trans_FMUL_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x4:
                        /* 0.101110 010..... 001001.. ........ */
                        /* ../target/arm/tcg/a64.decode:864 */
                        if (trans_FCMGE_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x5:
                        /* 0.101110 010..... 001011.. ........ */
                        /* ../target/arm/tcg/a64.decode:870 */
                        if (trans_FACGE_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x6:
                        /* 0.101110 010..... 001101.. ........ */
                        /* ../target/arm/tcg/a64.decode:888 */
                        if (trans_FMAXP_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x7:
                        /* 0.101110 010..... 001111.. ........ */
                        /* ../target/arm/tcg/a64.decode:829 */
                        if (trans_FDIV_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0x3:
                    /* 0.101110 110..... 0....1.. ........ */
                    disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 11) & 0xf) {
                    case 0x0:
                        /* 0.101110 110..... 000001.. ........ */
                        /* ../target/arm/tcg/a64.decode:897 */
                        if (trans_FMINNMP_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x2:
                        /* 0.101110 110..... 000101.. ........ */
                        /* ../target/arm/tcg/a64.decode:876 */
                        if (trans_FABD_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x4:
                        /* 0.101110 110..... 001001.. ........ */
                        /* ../target/arm/tcg/a64.decode:867 */
                        if (trans_FCMGT_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x5:
                        /* 0.101110 110..... 001011.. ........ */
                        /* ../target/arm/tcg/a64.decode:873 */
                        if (trans_FACGT_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x6:
                        /* 0.101110 110..... 001101.. ........ */
                        /* ../target/arm/tcg/a64.decode:891 */
                        if (trans_FMINP_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x20008400:
                /* 0.101110 ..0..... 1....1.. ........ */
                switch ((insn >> 13) & 0x3) {
                case 0x0:
                    /* 0.101110 ..0..... 100..1.. ........ */
                    switch ((insn >> 11) & 0x3) {
                    case 0x0:
                        /* 0.101110 ..0..... 100001.. ........ */
                        /* ../target/arm/tcg/a64.decode:961 */
                        disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                        if (trans_SQRDMLAH_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x1:
                        /* 0.101110 ..0..... 100011.. ........ */
                        /* ../target/arm/tcg/a64.decode:962 */
                        disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                        if (trans_SQRDMLSH_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x2:
                        /* 0.101110 ..0..... 100101.. ........ */
                        disas_a64_extract_qrrr_s(ctx, &u.f_qrrr_e, insn);
                        switch ((insn >> 22) & 0x3) {
                        case 0x2:
                            /* 0.101110 100..... 100101.. ........ */
                            /* ../target/arm/tcg/a64.decode:965 */
                            if (trans_UDOT_v(ctx, &u.f_qrrr_e)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                case 0x1:
                    /* 0.101110 ..0..... 101..1.. ........ */
                    disas_a64_extract_rrr_q1e0(ctx, &u.f_qrrr_e, insn);
                    switch (insn & 0x40c01800) {
                    case 0x40800000:
                        /* 01101110 100..... 101001.. ........ */
                        /* ../target/arm/tcg/a64.decode:971 */
                        if (trans_UMMLA(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0x2:
                    /* 0.101110 ..0..... 110..1.. ........ */
                    /* ../target/arm/tcg/a64.decode:977 */
                    disas_a64_extract_disas_a64_Fmt_97(ctx, &u.f_disas_a6451, insn);
                    if (trans_FCMLA_v(ctx, &u.f_disas_a6451)) return true;
                    break;
                case 0x3:
                    /* 0.101110 ..0..... 111..1.. ........ */
                    switch ((insn >> 11) & 0x3) {
                    case 0x0:
                        /* 0.101110 ..0..... 111001.. ........ */
                        /* ../target/arm/tcg/a64.decode:974 */
                        disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                        if (trans_FCADD_90(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x1:
                        /* 0.101110 ..0..... 111011.. ........ */
                        disas_a64_extract_rrr_q1e0(ctx, &u.f_qrrr_e, insn);
                        switch (insn & 0x40c00000) {
                        case 0x40400000:
                            /* 01101110 010..... 111011.. ........ */
                            /* ../target/arm/tcg/a64.decode:969 */
                            if (trans_BFMMLA(ctx, &u.f_qrrr_e)) return true;
                            break;
                        }
                        break;
                    case 0x2:
                        /* 0.101110 ..0..... 111101.. ........ */
                        /* ../target/arm/tcg/a64.decode:975 */
                        disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                        if (trans_FCADD_270(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x3:
                        /* 0.101110 ..0..... 111111.. ........ */
                        switch ((insn >> 22) & 0x3) {
                        case 0x1:
                            /* 0.101110 010..... 111111.. ........ */
                            /* ../target/arm/tcg/a64.decode:967 */
                            disas_a64_extract_qrrr_s(ctx, &u.f_qrrr_e, insn);
                            if (trans_BFDOT_v(ctx, &u.f_qrrr_e)) return true;
                            break;
                        case 0x3:
                            /* 0.101110 110..... 111111.. ........ */
                            /* ../target/arm/tcg/a64.decode:968 */
                            disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                            if (trans_BFMLAL_v(ctx, &u.f_qrrr_e)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                }
                break;
            case 0x20200000:
                /* 0.101110 ..1..... 0....0.. ........ */
                switch ((insn >> 11) & 0xf) {
                case 0x0:
                    /* 0.101110 ..1..... 000000.. ........ */
                    /* ../target/arm/tcg/a64.decode:987 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UADDL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x2:
                    /* 0.101110 ..1..... 000100.. ........ */
                    /* ../target/arm/tcg/a64.decode:1003 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UADDW(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x4:
                    /* 0.101110 ..1..... 001000.. ........ */
                    /* ../target/arm/tcg/a64.decode:989 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_USUBL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x6:
                    /* 0.101110 ..1..... 001100.. ........ */
                    /* ../target/arm/tcg/a64.decode:1005 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_USUBW(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x7:
                    /* 0.101110 ..1..... 001110.. ........ */
                    switch ((insn >> 16) & 0x1f) {
                    case 0x0:
                        /* 0.101110 ..100000 001110.. ........ */
                        /* ../target/arm/tcg/a64.decode:921 */
                        disas_a64_extract_qr2r_e(ctx, &u.f_qrrr_e, insn);
                        if (trans_USQADD_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x10:
                        /* 0.101110 ..110000 001110.. ........ */
                        /* ../target/arm/tcg/a64.decode:1168 */
                        disas_a64_extract_qrr_e(ctx, &u.f_qrr_e, insn);
                        if (trans_UADDLV(ctx, &u.f_qrr_e)) return true;
                        break;
                    }
                    break;
                case 0x8:
                    /* 0.101110 ..1..... 010000.. ........ */
                    /* ../target/arm/tcg/a64.decode:1008 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_RADDHN(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0xa:
                    /* 0.101110 ..1..... 010100.. ........ */
                    /* ../target/arm/tcg/a64.decode:991 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UABAL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0xc:
                    /* 0.101110 ..1..... 011000.. ........ */
                    /* ../target/arm/tcg/a64.decode:1010 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_RSUBHN(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0xe:
                    /* 0.101110 ..1..... 011100.. ........ */
                    /* ../target/arm/tcg/a64.decode:993 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UABDL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                }
                break;
            case 0x20200400:
                /* 0.101110 ..1..... 0....1.. ........ */
                switch ((insn >> 11) & 0xf) {
                case 0x0:
                    /* 0.101110 ..1..... 000001.. ........ */
                    /* ../target/arm/tcg/a64.decode:941 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UHADD_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x1:
                    /* 0.101110 ..1..... 000011.. ........ */
                    /* ../target/arm/tcg/a64.decode:916 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UQADD_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x2:
                    /* 0.101110 ..1..... 000101.. ........ */
                    /* ../target/arm/tcg/a64.decode:945 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_URHADD_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x3:
                    /* 0.101110 ..1..... 000111.. ........ */
                    disas_a64_extract_qrrr_b(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x0:
                        /* 0.101110 001..... 000111.. ........ */
                        /* ../target/arm/tcg/a64.decode:910 */
                        if (trans_EOR_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x1:
                        /* 0.101110 011..... 000111.. ........ */
                        /* ../target/arm/tcg/a64.decode:911 */
                        if (trans_BSL_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x2:
                        /* 0.101110 101..... 000111.. ........ */
                        /* ../target/arm/tcg/a64.decode:912 */
                        if (trans_BIT_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x3:
                        /* 0.101110 111..... 000111.. ........ */
                        /* ../target/arm/tcg/a64.decode:913 */
                        if (trans_BIF_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0x4:
                    /* 0.101110 ..1..... 001001.. ........ */
                    /* ../target/arm/tcg/a64.decode:943 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UHSUB_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x5:
                    /* 0.101110 ..1..... 001011.. ........ */
                    /* ../target/arm/tcg/a64.decode:918 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UQSUB_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x6:
                    /* 0.101110 ..1..... 001101.. ........ */
                    /* ../target/arm/tcg/a64.decode:935 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_CMHI_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x7:
                    /* 0.101110 ..1..... 001111.. ........ */
                    /* ../target/arm/tcg/a64.decode:937 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_CMHS_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x8:
                    /* 0.101110 ..1..... 010001.. ........ */
                    /* ../target/arm/tcg/a64.decode:924 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_USHL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x9:
                    /* 0.101110 ..1..... 010011.. ........ */
                    /* ../target/arm/tcg/a64.decode:928 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UQSHL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0xa:
                    /* 0.101110 ..1..... 010101.. ........ */
                    /* ../target/arm/tcg/a64.decode:926 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_URSHL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0xb:
                    /* 0.101110 ..1..... 010111.. ........ */
                    /* ../target/arm/tcg/a64.decode:930 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UQRSHL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0xc:
                    /* 0.101110 ..1..... 011001.. ........ */
                    /* ../target/arm/tcg/a64.decode:947 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UMAX_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0xd:
                    /* 0.101110 ..1..... 011011.. ........ */
                    /* ../target/arm/tcg/a64.decode:949 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UMIN_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0xe:
                    /* 0.101110 ..1..... 011101.. ........ */
                    /* ../target/arm/tcg/a64.decode:951 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UABD_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0xf:
                    /* 0.101110 ..1..... 011111.. ........ */
                    /* ../target/arm/tcg/a64.decode:953 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UABA_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                }
                break;
            case 0x20208000:
                /* 0.101110 ..1..... 1....0.. ........ */
                switch ((insn >> 11) & 0xf) {
                case 0x0:
                    /* 0.101110 ..1..... 100000.. ........ */
                    /* ../target/arm/tcg/a64.decode:982 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UMLAL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x4:
                    /* 0.101110 ..1..... 101000.. ........ */
                    /* ../target/arm/tcg/a64.decode:984 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UMLSL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x5:
                    /* 0.101110 ..1..... 101010.. ........ */
                    disas_a64_extract_qrr_e(ctx, &u.f_qrr_e, insn);
                    switch ((insn >> 16) & 0x1f) {
                    case 0x10:
                        /* 0.101110 ..110000 101010.. ........ */
                        /* ../target/arm/tcg/a64.decode:1170 */
                        if (trans_UMAXV(ctx, &u.f_qrr_e)) return true;
                        break;
                    case 0x11:
                        /* 0.101110 ..110001 101010.. ........ */
                        /* ../target/arm/tcg/a64.decode:1172 */
                        if (trans_UMINV(ctx, &u.f_qrr_e)) return true;
                        break;
                    }
                    break;
                case 0x8:
                    /* 0.101110 ..1..... 110000.. ........ */
                    /* ../target/arm/tcg/a64.decode:980 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UMULL_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x9:
                    /* 0.101110 ..1..... 110010.. ........ */
                    disas_a64_extract_rr_q1e2(ctx, &u.f_qrr_e, insn);
                    switch (insn & 0x40df0000) {
                    case 0x40100000:
                        /* 01101110 00110000 110010.. ........ */
                        /* ../target/arm/tcg/a64.decode:1175 */
                        if (trans_FMAXNMV_s(ctx, &u.f_qrr_e)) return true;
                        break;
                    case 0x40900000:
                        /* 01101110 10110000 110010.. ........ */
                        /* ../target/arm/tcg/a64.decode:1178 */
                        if (trans_FMINNMV_s(ctx, &u.f_qrr_e)) return true;
                        break;
                    }
                    break;
                case 0xf:
                    /* 0.101110 ..1..... 111110.. ........ */
                    disas_a64_extract_rr_q1e2(ctx, &u.f_qrr_e, insn);
                    switch (insn & 0x40df0000) {
                    case 0x40100000:
                        /* 01101110 00110000 111110.. ........ */
                        /* ../target/arm/tcg/a64.decode:1181 */
                        if (trans_FMAXV_s(ctx, &u.f_qrr_e)) return true;
                        break;
                    case 0x40900000:
                        /* 01101110 10110000 111110.. ........ */
                        /* ../target/arm/tcg/a64.decode:1184 */
                        if (trans_FMINV_s(ctx, &u.f_qrr_e)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x20208400:
                /* 0.101110 ..1..... 1....1.. ........ */
                switch ((insn >> 11) & 0xf) {
                case 0x0:
                    /* 0.101110 ..1..... 100001.. ........ */
                    /* ../target/arm/tcg/a64.decode:933 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SUB_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x1:
                    /* 0.101110 ..1..... 100011.. ........ */
                    /* ../target/arm/tcg/a64.decode:939 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_CMEQ_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x2:
                    /* 0.101110 ..1..... 100101.. ........ */
                    /* ../target/arm/tcg/a64.decode:957 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_MLS_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x3:
                    /* 0.101110 ..1..... 100111.. ........ */
                    disas_a64_extract_qrrr_b(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x0:
                        /* 0.101110 001..... 100111.. ........ */
                        /* ../target/arm/tcg/a64.decode:955 */
                        if (trans_PMUL_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0x4:
                    /* 0.101110 ..1..... 101001.. ........ */
                    /* ../target/arm/tcg/a64.decode:903 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UMAXP_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x5:
                    /* 0.101110 ..1..... 101011.. ........ */
                    /* ../target/arm/tcg/a64.decode:904 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_UMINP_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x6:
                    /* 0.101110 ..1..... 101101.. ........ */
                    /* ../target/arm/tcg/a64.decode:960 */
                    disas_a64_extract_qrrr_e(ctx, &u.f_qrrr_e, insn);
                    if (trans_SQRDMULH_v(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x8:
                    /* 0.101110 ..1..... 110001.. ........ */
                    disas_a64_extract_qrrr_sd(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 23) & 0x1) {
                    case 0x0:
                        /* 0.101110 0.1..... 110001.. ........ */
                        /* ../target/arm/tcg/a64.decode:895 */
                        if (trans_FMAXNMP_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x1:
                        /* 0.101110 1.1..... 110001.. ........ */
                        /* ../target/arm/tcg/a64.decode:898 */
                        if (trans_FMINNMP_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0x9:
                    /* 0.101110 ..1..... 110011.. ........ */
                    disas_a64_extract_qrrr_h(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x0:
                        /* 0.101110 001..... 110011.. ........ */
                        /* ../target/arm/tcg/a64.decode:858 */
                        if (trans_FMLAL2_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x2:
                        /* 0.101110 101..... 110011.. ........ */
                        /* ../target/arm/tcg/a64.decode:859 */
                        if (trans_FMLSL2_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0xa:
                    /* 0.101110 ..1..... 110101.. ........ */
                    disas_a64_extract_qrrr_sd(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 23) & 0x1) {
                    case 0x0:
                        /* 0.101110 0.1..... 110101.. ........ */
                        /* ../target/arm/tcg/a64.decode:886 */
                        if (trans_FADDP_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x1:
                        /* 0.101110 1.1..... 110101.. ........ */
                        /* ../target/arm/tcg/a64.decode:877 */
                        if (trans_FABD_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0xb:
                    /* 0.101110 ..1..... 110111.. ........ */
                    disas_a64_extract_qrrr_sd(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 23) & 0x1) {
                    case 0x0:
                        /* 0.101110 0.1..... 110111.. ........ */
                        /* ../target/arm/tcg/a64.decode:833 */
                        if (trans_FMUL_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0xc:
                    /* 0.101110 ..1..... 111001.. ........ */
                    disas_a64_extract_qrrr_sd(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 23) & 0x1) {
                    case 0x0:
                        /* 0.101110 0.1..... 111001.. ........ */
                        /* ../target/arm/tcg/a64.decode:865 */
                        if (trans_FCMGE_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x1:
                        /* 0.101110 1.1..... 111001.. ........ */
                        /* ../target/arm/tcg/a64.decode:868 */
                        if (trans_FCMGT_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0xd:
                    /* 0.101110 ..1..... 111011.. ........ */
                    disas_a64_extract_qrrr_sd(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 23) & 0x1) {
                    case 0x0:
                        /* 0.101110 0.1..... 111011.. ........ */
                        /* ../target/arm/tcg/a64.decode:871 */
                        if (trans_FACGE_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x1:
                        /* 0.101110 1.1..... 111011.. ........ */
                        /* ../target/arm/tcg/a64.decode:874 */
                        if (trans_FACGT_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0xe:
                    /* 0.101110 ..1..... 111101.. ........ */
                    disas_a64_extract_qrrr_sd(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 23) & 0x1) {
                    case 0x0:
                        /* 0.101110 0.1..... 111101.. ........ */
                        /* ../target/arm/tcg/a64.decode:889 */
                        if (trans_FMAXP_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    case 0x1:
                        /* 0.101110 1.1..... 111101.. ........ */
                        /* ../target/arm/tcg/a64.decode:892 */
                        if (trans_FMINP_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                case 0xf:
                    /* 0.101110 ..1..... 111111.. ........ */
                    disas_a64_extract_qrrr_sd(ctx, &u.f_qrrr_e, insn);
                    switch ((insn >> 23) & 0x1) {
                    case 0x0:
                        /* 0.101110 0.1..... 111111.. ........ */
                        /* ../target/arm/tcg/a64.decode:830 */
                        if (trans_FDIV_v(ctx, &u.f_qrrr_e)) return true;
                        break;
                    }
                    break;
                }
                break;
            }
            break;
        case 0x03000000:
            /* 0..01111 ........ ........ ........ */
            switch (insn & 0x00c00400) {
            case 0x00000000:
                /* 0..01111 00...... .....0.. ........ */
                switch (insn & 0x2000f000) {
                case 0x00001000:
                    /* 0.001111 00...... 0001.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1060 */
                    disas_a64_extract_qrrx_h(ctx, &u.f_qrrx_e, insn);
                    if (trans_FMLA_vi(ctx, &u.f_qrrx_e)) return true;
                    break;
                case 0x00005000:
                    /* 0.001111 00...... 0101.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1064 */
                    disas_a64_extract_qrrx_h(ctx, &u.f_qrrx_e, insn);
                    if (trans_FMLS_vi(ctx, &u.f_qrrx_e)) return true;
                    break;
                case 0x00009000:
                    /* 0.001111 00...... 1001.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1056 */
                    disas_a64_extract_qrrx_h(ctx, &u.f_qrrx_e, insn);
                    if (trans_FMUL_vi(ctx, &u.f_qrrx_e)) return true;
                    break;
                case 0x0000f000:
                    /* 0.001111 00...... 1111.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1100 */
                    disas_a64_extract_qrrx_s(ctx, &u.f_qrrx_e, insn);
                    if (trans_SUDOT_vi(ctx, &u.f_qrrx_e)) return true;
                    break;
                case 0x20009000:
                    /* 0.101111 00...... 1001.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1068 */
                    disas_a64_extract_qrrx_h(ctx, &u.f_qrrx_e, insn);
                    if (trans_FMULX_vi(ctx, &u.f_qrrx_e)) return true;
                    break;
                }
                break;
            case 0x00000400:
                /* 0..01111 00...... .....1.. ........ */
                switch (insn & 0x00200800) {
                case 0x00000000:
                    /* 0..01111 000..... ....01.. ........ */
                    switch ((insn >> 20) & 0x1) {
                    case 0x0:
                        /* 0..01111 0000.... ....01.. ........ */
                        switch ((insn >> 19) & 0x1) {
                        case 0x0:
                            /* 0..01111 00000... ....01.. ........ */
                            /* ../target/arm/tcg/a64.decode:1217 */
                            disas_a64_extract_disas_a64_Fmt_116(ctx, &u.f_disas_a6457, insn);
                            if (trans_Vimm(ctx, &u.f_disas_a6457)) return true;
                            break;
                        case 0x1:
                            /* 0..01111 00001... ....01.. ........ */
                            switch (insn & 0x2000f000) {
                            case 0x00000000:
                                /* 0.001111 00001... 000001.. ........ */
                                /* ../target/arm/tcg/a64.decode:1219 */
                                disas_a64_extract_q_shri_b(ctx, &u.f_qrri_e, insn);
                                if (trans_SSHR_v(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x00001000:
                                /* 0.001111 00001... 000101.. ........ */
                                /* ../target/arm/tcg/a64.decode:1229 */
                                disas_a64_extract_q_shri_b(ctx, &u.f_qrri_e, insn);
                                if (trans_SSRA_v(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x00002000:
                                /* 0.001111 00001... 001001.. ........ */
                                /* ../target/arm/tcg/a64.decode:1239 */
                                disas_a64_extract_q_shri_b(ctx, &u.f_qrri_e, insn);
                                if (trans_SRSHR_v(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x00003000:
                                /* 0.001111 00001... 001101.. ........ */
                                /* ../target/arm/tcg/a64.decode:1249 */
                                disas_a64_extract_q_shri_b(ctx, &u.f_qrri_e, insn);
                                if (trans_SRSRA_v(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x00005000:
                                /* 0.001111 00001... 010101.. ........ */
                                /* ../target/arm/tcg/a64.decode:1264 */
                                disas_a64_extract_q_shli_b(ctx, &u.f_qrri_e, insn);
                                if (trans_SHL_v(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x00007000:
                                /* 0.001111 00001... 011101.. ........ */
                                /* ../target/arm/tcg/a64.decode:1290 */
                                disas_a64_extract_q_shli_b(ctx, &u.f_qrri_e, insn);
                                if (trans_SQSHL_vi(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x00008000:
                                /* 0.001111 00001... 100001.. ........ */
                                /* ../target/arm/tcg/a64.decode:1282 */
                                disas_a64_extract_q_shri_b(ctx, &u.f_qrri_e, insn);
                                if (trans_SHRN_v(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x00009000:
                                /* 0.001111 00001... 100101.. ........ */
                                /* ../target/arm/tcg/a64.decode:1305 */
                                disas_a64_extract_q_shri_b(ctx, &u.f_qrri_e, insn);
                                if (trans_SQSHRN_v(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x0000a000:
                                /* 0.001111 00001... 101001.. ........ */
                                /* ../target/arm/tcg/a64.decode:1274 */
                                disas_a64_extract_q_shli_b(ctx, &u.f_qrri_e, insn);
                                if (trans_SSHLL_v(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x20000000:
                                /* 0.101111 00001... 000001.. ........ */
                                /* ../target/arm/tcg/a64.decode:1224 */
                                disas_a64_extract_q_shri_b(ctx, &u.f_qrri_e, insn);
                                if (trans_USHR_v(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x20001000:
                                /* 0.101111 00001... 000101.. ........ */
                                /* ../target/arm/tcg/a64.decode:1234 */
                                disas_a64_extract_q_shri_b(ctx, &u.f_qrri_e, insn);
                                if (trans_USRA_v(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x20002000:
                                /* 0.101111 00001... 001001.. ........ */
                                /* ../target/arm/tcg/a64.decode:1244 */
                                disas_a64_extract_q_shri_b(ctx, &u.f_qrri_e, insn);
                                if (trans_URSHR_v(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x20003000:
                                /* 0.101111 00001... 001101.. ........ */
                                /* ../target/arm/tcg/a64.decode:1254 */
                                disas_a64_extract_q_shri_b(ctx, &u.f_qrri_e, insn);
                                if (trans_URSRA_v(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x20004000:
                                /* 0.101111 00001... 010001.. ........ */
                                /* ../target/arm/tcg/a64.decode:1259 */
                                disas_a64_extract_q_shri_b(ctx, &u.f_qrri_e, insn);
                                if (trans_SRI_v(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x20005000:
                                /* 0.101111 00001... 010101.. ........ */
                                /* ../target/arm/tcg/a64.decode:1269 */
                                disas_a64_extract_q_shli_b(ctx, &u.f_qrri_e, insn);
                                if (trans_SLI_v(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x20006000:
                                /* 0.101111 00001... 011001.. ........ */
                                /* ../target/arm/tcg/a64.decode:1300 */
                                disas_a64_extract_q_shli_b(ctx, &u.f_qrri_e, insn);
                                if (trans_SQSHLU_vi(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x20007000:
                                /* 0.101111 00001... 011101.. ........ */
                                /* ../target/arm/tcg/a64.decode:1295 */
                                disas_a64_extract_q_shli_b(ctx, &u.f_qrri_e, insn);
                                if (trans_UQSHL_vi(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x20008000:
                                /* 0.101111 00001... 100001.. ........ */
                                /* ../target/arm/tcg/a64.decode:1313 */
                                disas_a64_extract_q_shri_b(ctx, &u.f_qrri_e, insn);
                                if (trans_SQSHRUN_v(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x20009000:
                                /* 0.101111 00001... 100101.. ........ */
                                /* ../target/arm/tcg/a64.decode:1309 */
                                disas_a64_extract_q_shri_b(ctx, &u.f_qrri_e, insn);
                                if (trans_UQSHRN_v(ctx, &u.f_qrri_e)) return true;
                                break;
                            case 0x2000a000:
                                /* 0.101111 00001... 101001.. ........ */
                                /* ../target/arm/tcg/a64.decode:1278 */
                                disas_a64_extract_q_shli_b(ctx, &u.f_qrri_e, insn);
                                if (trans_USHLL_v(ctx, &u.f_qrri_e)) return true;
                                break;
                            }
                            break;
                        }
                        break;
                    case 0x1:
                        /* 0..01111 0001.... ....01.. ........ */
                        switch (insn & 0x2000f000) {
                        case 0x00000000:
                            /* 0.001111 0001.... 000001.. ........ */
                            /* ../target/arm/tcg/a64.decode:1220 */
                            disas_a64_extract_q_shri_h(ctx, &u.f_qrri_e, insn);
                            if (trans_SSHR_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x00001000:
                            /* 0.001111 0001.... 000101.. ........ */
                            /* ../target/arm/tcg/a64.decode:1230 */
                            disas_a64_extract_q_shri_h(ctx, &u.f_qrri_e, insn);
                            if (trans_SSRA_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x00002000:
                            /* 0.001111 0001.... 001001.. ........ */
                            /* ../target/arm/tcg/a64.decode:1240 */
                            disas_a64_extract_q_shri_h(ctx, &u.f_qrri_e, insn);
                            if (trans_SRSHR_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x00003000:
                            /* 0.001111 0001.... 001101.. ........ */
                            /* ../target/arm/tcg/a64.decode:1250 */
                            disas_a64_extract_q_shri_h(ctx, &u.f_qrri_e, insn);
                            if (trans_SRSRA_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x00005000:
                            /* 0.001111 0001.... 010101.. ........ */
                            /* ../target/arm/tcg/a64.decode:1265 */
                            disas_a64_extract_q_shli_h(ctx, &u.f_qrri_e, insn);
                            if (trans_SHL_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x00007000:
                            /* 0.001111 0001.... 011101.. ........ */
                            /* ../target/arm/tcg/a64.decode:1291 */
                            disas_a64_extract_q_shli_h(ctx, &u.f_qrri_e, insn);
                            if (trans_SQSHL_vi(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x00008000:
                            /* 0.001111 0001.... 100001.. ........ */
                            /* ../target/arm/tcg/a64.decode:1283 */
                            disas_a64_extract_q_shri_h(ctx, &u.f_qrri_e, insn);
                            if (trans_SHRN_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x00009000:
                            /* 0.001111 0001.... 100101.. ........ */
                            /* ../target/arm/tcg/a64.decode:1306 */
                            disas_a64_extract_q_shri_h(ctx, &u.f_qrri_e, insn);
                            if (trans_SQSHRN_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x0000a000:
                            /* 0.001111 0001.... 101001.. ........ */
                            /* ../target/arm/tcg/a64.decode:1275 */
                            disas_a64_extract_q_shli_h(ctx, &u.f_qrri_e, insn);
                            if (trans_SSHLL_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x20000000:
                            /* 0.101111 0001.... 000001.. ........ */
                            /* ../target/arm/tcg/a64.decode:1225 */
                            disas_a64_extract_q_shri_h(ctx, &u.f_qrri_e, insn);
                            if (trans_USHR_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x20001000:
                            /* 0.101111 0001.... 000101.. ........ */
                            /* ../target/arm/tcg/a64.decode:1235 */
                            disas_a64_extract_q_shri_h(ctx, &u.f_qrri_e, insn);
                            if (trans_USRA_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x20002000:
                            /* 0.101111 0001.... 001001.. ........ */
                            /* ../target/arm/tcg/a64.decode:1245 */
                            disas_a64_extract_q_shri_h(ctx, &u.f_qrri_e, insn);
                            if (trans_URSHR_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x20003000:
                            /* 0.101111 0001.... 001101.. ........ */
                            /* ../target/arm/tcg/a64.decode:1255 */
                            disas_a64_extract_q_shri_h(ctx, &u.f_qrri_e, insn);
                            if (trans_URSRA_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x20004000:
                            /* 0.101111 0001.... 010001.. ........ */
                            /* ../target/arm/tcg/a64.decode:1260 */
                            disas_a64_extract_q_shri_h(ctx, &u.f_qrri_e, insn);
                            if (trans_SRI_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x20005000:
                            /* 0.101111 0001.... 010101.. ........ */
                            /* ../target/arm/tcg/a64.decode:1270 */
                            disas_a64_extract_q_shli_h(ctx, &u.f_qrri_e, insn);
                            if (trans_SLI_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x20006000:
                            /* 0.101111 0001.... 011001.. ........ */
                            /* ../target/arm/tcg/a64.decode:1301 */
                            disas_a64_extract_q_shli_h(ctx, &u.f_qrri_e, insn);
                            if (trans_SQSHLU_vi(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x20007000:
                            /* 0.101111 0001.... 011101.. ........ */
                            /* ../target/arm/tcg/a64.decode:1296 */
                            disas_a64_extract_q_shli_h(ctx, &u.f_qrri_e, insn);
                            if (trans_UQSHL_vi(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x20008000:
                            /* 0.101111 0001.... 100001.. ........ */
                            /* ../target/arm/tcg/a64.decode:1314 */
                            disas_a64_extract_q_shri_h(ctx, &u.f_qrri_e, insn);
                            if (trans_SQSHRUN_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x20009000:
                            /* 0.101111 0001.... 100101.. ........ */
                            /* ../target/arm/tcg/a64.decode:1310 */
                            disas_a64_extract_q_shri_h(ctx, &u.f_qrri_e, insn);
                            if (trans_UQSHRN_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        case 0x2000a000:
                            /* 0.101111 0001.... 101001.. ........ */
                            /* ../target/arm/tcg/a64.decode:1279 */
                            disas_a64_extract_q_shli_h(ctx, &u.f_qrri_e, insn);
                            if (trans_USHLL_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                case 0x00000800:
                    /* 0..01111 000..... ....11.. ........ */
                    switch (insn & 0x2010f000) {
                    case 0x00008000:
                        /* 0.001111 0000.... 100011.. ........ */
                        disas_a64_extract_q_shri_b(ctx, &u.f_qrri_e, insn);
                        switch ((insn >> 19) & 0x1) {
                        case 0x1:
                            /* 0.001111 00001... 100011.. ........ */
                            /* ../target/arm/tcg/a64.decode:1286 */
                            if (trans_RSHRN_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        }
                        break;
                    case 0x00009000:
                        /* 0.001111 0000.... 100111.. ........ */
                        disas_a64_extract_q_shri_b(ctx, &u.f_qrri_e, insn);
                        switch ((insn >> 19) & 0x1) {
                        case 0x1:
                            /* 0.001111 00001... 100111.. ........ */
                            /* ../target/arm/tcg/a64.decode:1317 */
                            if (trans_SQRSHRN_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        }
                        break;
                    case 0x0000f000:
                        /* 0.001111 0000.... 111111.. ........ */
                        disas_a64_extract_disas_a64_Fmt_115(ctx, &u.f_disas_a6456, insn);
                        switch ((insn >> 19) & 0x1) {
                        case 0x0:
                            /* 0.001111 00000... 111111.. ........ */
                            /* ../target/arm/tcg/a64.decode:1214 */
                            if (trans_FMOVI_v_h(ctx, &u.f_disas_a6456)) return true;
                            break;
                        }
                        break;
                    case 0x00108000:
                        /* 0.001111 0001.... 100011.. ........ */
                        /* ../target/arm/tcg/a64.decode:1287 */
                        disas_a64_extract_q_shri_h(ctx, &u.f_qrri_e, insn);
                        if (trans_RSHRN_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x00109000:
                        /* 0.001111 0001.... 100111.. ........ */
                        /* ../target/arm/tcg/a64.decode:1318 */
                        disas_a64_extract_q_shri_h(ctx, &u.f_qrri_e, insn);
                        if (trans_SQRSHRN_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x20008000:
                        /* 0.101111 0000.... 100011.. ........ */
                        disas_a64_extract_q_shri_b(ctx, &u.f_qrri_e, insn);
                        switch ((insn >> 19) & 0x1) {
                        case 0x1:
                            /* 0.101111 00001... 100011.. ........ */
                            /* ../target/arm/tcg/a64.decode:1325 */
                            if (trans_SQRSHRUN_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        }
                        break;
                    case 0x20009000:
                        /* 0.101111 0000.... 100111.. ........ */
                        disas_a64_extract_q_shri_b(ctx, &u.f_qrri_e, insn);
                        switch ((insn >> 19) & 0x1) {
                        case 0x1:
                            /* 0.101111 00001... 100111.. ........ */
                            /* ../target/arm/tcg/a64.decode:1321 */
                            if (trans_UQRSHRN_v(ctx, &u.f_qrri_e)) return true;
                            break;
                        }
                        break;
                    case 0x20108000:
                        /* 0.101111 0001.... 100011.. ........ */
                        /* ../target/arm/tcg/a64.decode:1326 */
                        disas_a64_extract_q_shri_h(ctx, &u.f_qrri_e, insn);
                        if (trans_SQRSHRUN_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x20109000:
                        /* 0.101111 0001.... 100111.. ........ */
                        /* ../target/arm/tcg/a64.decode:1322 */
                        disas_a64_extract_q_shri_h(ctx, &u.f_qrri_e, insn);
                        if (trans_UQRSHRN_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    }
                    break;
                case 0x00200000:
                    /* 0..01111 001..... ....01.. ........ */
                    switch (insn & 0x2000f000) {
                    case 0x00000000:
                        /* 0.001111 001..... 000001.. ........ */
                        /* ../target/arm/tcg/a64.decode:1221 */
                        disas_a64_extract_q_shri_s(ctx, &u.f_qrri_e, insn);
                        if (trans_SSHR_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x00001000:
                        /* 0.001111 001..... 000101.. ........ */
                        /* ../target/arm/tcg/a64.decode:1231 */
                        disas_a64_extract_q_shri_s(ctx, &u.f_qrri_e, insn);
                        if (trans_SSRA_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x00002000:
                        /* 0.001111 001..... 001001.. ........ */
                        /* ../target/arm/tcg/a64.decode:1241 */
                        disas_a64_extract_q_shri_s(ctx, &u.f_qrri_e, insn);
                        if (trans_SRSHR_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x00003000:
                        /* 0.001111 001..... 001101.. ........ */
                        /* ../target/arm/tcg/a64.decode:1251 */
                        disas_a64_extract_q_shri_s(ctx, &u.f_qrri_e, insn);
                        if (trans_SRSRA_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x00005000:
                        /* 0.001111 001..... 010101.. ........ */
                        /* ../target/arm/tcg/a64.decode:1266 */
                        disas_a64_extract_q_shli_s(ctx, &u.f_qrri_e, insn);
                        if (trans_SHL_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x00007000:
                        /* 0.001111 001..... 011101.. ........ */
                        /* ../target/arm/tcg/a64.decode:1292 */
                        disas_a64_extract_q_shli_s(ctx, &u.f_qrri_e, insn);
                        if (trans_SQSHL_vi(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x00008000:
                        /* 0.001111 001..... 100001.. ........ */
                        /* ../target/arm/tcg/a64.decode:1284 */
                        disas_a64_extract_q_shri_s(ctx, &u.f_qrri_e, insn);
                        if (trans_SHRN_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x00009000:
                        /* 0.001111 001..... 100101.. ........ */
                        /* ../target/arm/tcg/a64.decode:1307 */
                        disas_a64_extract_q_shri_s(ctx, &u.f_qrri_e, insn);
                        if (trans_SQSHRN_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x0000a000:
                        /* 0.001111 001..... 101001.. ........ */
                        /* ../target/arm/tcg/a64.decode:1276 */
                        disas_a64_extract_q_shli_s(ctx, &u.f_qrri_e, insn);
                        if (trans_SSHLL_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x20000000:
                        /* 0.101111 001..... 000001.. ........ */
                        /* ../target/arm/tcg/a64.decode:1226 */
                        disas_a64_extract_q_shri_s(ctx, &u.f_qrri_e, insn);
                        if (trans_USHR_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x20001000:
                        /* 0.101111 001..... 000101.. ........ */
                        /* ../target/arm/tcg/a64.decode:1236 */
                        disas_a64_extract_q_shri_s(ctx, &u.f_qrri_e, insn);
                        if (trans_USRA_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x20002000:
                        /* 0.101111 001..... 001001.. ........ */
                        /* ../target/arm/tcg/a64.decode:1246 */
                        disas_a64_extract_q_shri_s(ctx, &u.f_qrri_e, insn);
                        if (trans_URSHR_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x20003000:
                        /* 0.101111 001..... 001101.. ........ */
                        /* ../target/arm/tcg/a64.decode:1256 */
                        disas_a64_extract_q_shri_s(ctx, &u.f_qrri_e, insn);
                        if (trans_URSRA_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x20004000:
                        /* 0.101111 001..... 010001.. ........ */
                        /* ../target/arm/tcg/a64.decode:1261 */
                        disas_a64_extract_q_shri_s(ctx, &u.f_qrri_e, insn);
                        if (trans_SRI_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x20005000:
                        /* 0.101111 001..... 010101.. ........ */
                        /* ../target/arm/tcg/a64.decode:1271 */
                        disas_a64_extract_q_shli_s(ctx, &u.f_qrri_e, insn);
                        if (trans_SLI_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x20006000:
                        /* 0.101111 001..... 011001.. ........ */
                        /* ../target/arm/tcg/a64.decode:1302 */
                        disas_a64_extract_q_shli_s(ctx, &u.f_qrri_e, insn);
                        if (trans_SQSHLU_vi(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x20007000:
                        /* 0.101111 001..... 011101.. ........ */
                        /* ../target/arm/tcg/a64.decode:1297 */
                        disas_a64_extract_q_shli_s(ctx, &u.f_qrri_e, insn);
                        if (trans_UQSHL_vi(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x20008000:
                        /* 0.101111 001..... 100001.. ........ */
                        /* ../target/arm/tcg/a64.decode:1315 */
                        disas_a64_extract_q_shri_s(ctx, &u.f_qrri_e, insn);
                        if (trans_SQSHRUN_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x20009000:
                        /* 0.101111 001..... 100101.. ........ */
                        /* ../target/arm/tcg/a64.decode:1311 */
                        disas_a64_extract_q_shri_s(ctx, &u.f_qrri_e, insn);
                        if (trans_UQSHRN_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x2000a000:
                        /* 0.101111 001..... 101001.. ........ */
                        /* ../target/arm/tcg/a64.decode:1280 */
                        disas_a64_extract_q_shli_s(ctx, &u.f_qrri_e, insn);
                        if (trans_USHLL_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    }
                    break;
                case 0x00200800:
                    /* 0..01111 001..... ....11.. ........ */
                    disas_a64_extract_q_shri_s(ctx, &u.f_qrri_e, insn);
                    switch (insn & 0x2000f000) {
                    case 0x00008000:
                        /* 0.001111 001..... 100011.. ........ */
                        /* ../target/arm/tcg/a64.decode:1288 */
                        if (trans_RSHRN_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x00009000:
                        /* 0.001111 001..... 100111.. ........ */
                        /* ../target/arm/tcg/a64.decode:1319 */
                        if (trans_SQRSHRN_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x20008000:
                        /* 0.101111 001..... 100011.. ........ */
                        /* ../target/arm/tcg/a64.decode:1327 */
                        if (trans_SQRSHRUN_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    case 0x20009000:
                        /* 0.101111 001..... 100111.. ........ */
                        /* ../target/arm/tcg/a64.decode:1323 */
                        if (trans_UQRSHRN_v(ctx, &u.f_qrri_e)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x00400000:
                /* 0..01111 01...... .....0.. ........ */
                switch (insn & 0x20009000) {
                case 0x00000000:
                    /* 0.001111 01...... 0..0.0.. ........ */
                    disas_a64_extract_qrrx_h(ctx, &u.f_qrrx_e, insn);
                    switch ((insn >> 13) & 0x3) {
                    case 0x1:
                        /* 0.001111 01...... 0010.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1114 */
                        if (trans_SMLAL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x3:
                        /* 0.001111 01...... 0110.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1119 */
                        if (trans_SMLSL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    }
                    break;
                case 0x00001000:
                    /* 0.001111 01...... 0..1.0.. ........ */
                    disas_a64_extract_qrrx_h(ctx, &u.f_qrrx_e, insn);
                    switch ((insn >> 13) & 0x3) {
                    case 0x1:
                        /* 0.001111 01...... 0011.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1127 */
                        if (trans_SQDMLAL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x3:
                        /* 0.001111 01...... 0111.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1130 */
                        if (trans_SQDMLSL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    }
                    break;
                case 0x00008000:
                    /* 0.001111 01...... 1..0.0.. ........ */
                    disas_a64_extract_qrrx_h(ctx, &u.f_qrrx_e, insn);
                    switch ((insn >> 13) & 0x3) {
                    case 0x0:
                        /* 0.001111 01...... 1000.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1077 */
                        if (trans_MUL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x1:
                        /* 0.001111 01...... 1010.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1109 */
                        if (trans_SMULL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x2:
                        /* 0.001111 01...... 1100.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1086 */
                        if (trans_SQDMULH_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    }
                    break;
                case 0x00009000:
                    /* 0.001111 01...... 1..1.0.. ........ */
                    switch ((insn >> 13) & 0x3) {
                    case 0x1:
                        /* 0.001111 01...... 1011.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1124 */
                        disas_a64_extract_qrrx_h(ctx, &u.f_qrrx_e, insn);
                        if (trans_SQDMULL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x2:
                        /* 0.001111 01...... 1101.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1089 */
                        disas_a64_extract_qrrx_h(ctx, &u.f_qrrx_e, insn);
                        if (trans_SQRDMULH_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x3:
                        /* 0.001111 01...... 1111.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1102 */
                        disas_a64_extract_qrrx_s(ctx, &u.f_qrrx_e, insn);
                        if (trans_BFDOT_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    }
                    break;
                case 0x20000000:
                    /* 0.101111 01...... 0..0.0.. ........ */
                    disas_a64_extract_qrrx_h(ctx, &u.f_qrrx_e, insn);
                    switch ((insn >> 13) & 0x3) {
                    case 0x0:
                        /* 0.101111 01...... 0000.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1080 */
                        if (trans_MLA_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x1:
                        /* 0.101111 01...... 0010.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1116 */
                        if (trans_UMLAL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x2:
                        /* 0.101111 01...... 0100.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1083 */
                        if (trans_MLS_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x3:
                        /* 0.101111 01...... 0110.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1121 */
                        if (trans_UMLSL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    }
                    break;
                case 0x20001000:
                    /* 0.101111 01...... 0..1.0.. ........ */
                    switch ((insn >> 30) & 0x1) {
                    case 0x0:
                        /* 00101111 01...... 0..1.0.. ........ */
                        disas_a64_extract_disas_a64_Fmt_98(ctx, &u.f_disas_a6452, insn);
                        switch ((insn >> 11) & 0x1) {
                        case 0x0:
                            /* 00101111 01...... 0..100.. ........ */
                            /* ../target/arm/tcg/a64.decode:1105 */
                            if (trans_FCMLA_vi(ctx, &u.f_disas_a6452)) return true;
                            break;
                        }
                        break;
                    case 0x1:
                        /* 01101111 01...... 0..1.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1106 */
                        disas_a64_extract_disas_a64_Fmt_99(ctx, &u.f_disas_a6452, insn);
                        if (trans_FCMLA_vi(ctx, &u.f_disas_a6452)) return true;
                        break;
                    }
                    break;
                case 0x20008000:
                    /* 0.101111 01...... 1..0.0.. ........ */
                    disas_a64_extract_qrrx_h(ctx, &u.f_qrrx_e, insn);
                    switch ((insn >> 13) & 0x3) {
                    case 0x1:
                        /* 0.101111 01...... 1010.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1111 */
                        if (trans_UMULL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    }
                    break;
                case 0x20009000:
                    /* 0.101111 01...... 1..1.0.. ........ */
                    disas_a64_extract_qrrx_h(ctx, &u.f_qrrx_e, insn);
                    switch ((insn >> 13) & 0x3) {
                    case 0x2:
                        /* 0.101111 01...... 1101.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1092 */
                        if (trans_SQRDMLAH_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x3:
                        /* 0.101111 01...... 1111.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1095 */
                        if (trans_SQRDMLSH_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x00400400:
                /* 0..01111 01...... .....1.. ........ */
                switch (insn & 0x6000f800) {
                case 0x40000000:
                    /* 01001111 01...... 000001.. ........ */
                    /* ../target/arm/tcg/a64.decode:1222 */
                    disas_a64_extract_q_shri_d(ctx, &u.f_qrri_e, insn);
                    if (trans_SSHR_v(ctx, &u.f_qrri_e)) return true;
                    break;
                case 0x40001000:
                    /* 01001111 01...... 000101.. ........ */
                    /* ../target/arm/tcg/a64.decode:1232 */
                    disas_a64_extract_q_shri_d(ctx, &u.f_qrri_e, insn);
                    if (trans_SSRA_v(ctx, &u.f_qrri_e)) return true;
                    break;
                case 0x40002000:
                    /* 01001111 01...... 001001.. ........ */
                    /* ../target/arm/tcg/a64.decode:1242 */
                    disas_a64_extract_q_shri_d(ctx, &u.f_qrri_e, insn);
                    if (trans_SRSHR_v(ctx, &u.f_qrri_e)) return true;
                    break;
                case 0x40003000:
                    /* 01001111 01...... 001101.. ........ */
                    /* ../target/arm/tcg/a64.decode:1252 */
                    disas_a64_extract_q_shri_d(ctx, &u.f_qrri_e, insn);
                    if (trans_SRSRA_v(ctx, &u.f_qrri_e)) return true;
                    break;
                case 0x40005000:
                    /* 01001111 01...... 010101.. ........ */
                    /* ../target/arm/tcg/a64.decode:1267 */
                    disas_a64_extract_q_shli_d(ctx, &u.f_qrri_e, insn);
                    if (trans_SHL_v(ctx, &u.f_qrri_e)) return true;
                    break;
                case 0x40007000:
                    /* 01001111 01...... 011101.. ........ */
                    /* ../target/arm/tcg/a64.decode:1293 */
                    disas_a64_extract_q_shli_d(ctx, &u.f_qrri_e, insn);
                    if (trans_SQSHL_vi(ctx, &u.f_qrri_e)) return true;
                    break;
                case 0x60000000:
                    /* 01101111 01...... 000001.. ........ */
                    /* ../target/arm/tcg/a64.decode:1227 */
                    disas_a64_extract_q_shri_d(ctx, &u.f_qrri_e, insn);
                    if (trans_USHR_v(ctx, &u.f_qrri_e)) return true;
                    break;
                case 0x60001000:
                    /* 01101111 01...... 000101.. ........ */
                    /* ../target/arm/tcg/a64.decode:1237 */
                    disas_a64_extract_q_shri_d(ctx, &u.f_qrri_e, insn);
                    if (trans_USRA_v(ctx, &u.f_qrri_e)) return true;
                    break;
                case 0x60002000:
                    /* 01101111 01...... 001001.. ........ */
                    /* ../target/arm/tcg/a64.decode:1247 */
                    disas_a64_extract_q_shri_d(ctx, &u.f_qrri_e, insn);
                    if (trans_URSHR_v(ctx, &u.f_qrri_e)) return true;
                    break;
                case 0x60003000:
                    /* 01101111 01...... 001101.. ........ */
                    /* ../target/arm/tcg/a64.decode:1257 */
                    disas_a64_extract_q_shri_d(ctx, &u.f_qrri_e, insn);
                    if (trans_URSRA_v(ctx, &u.f_qrri_e)) return true;
                    break;
                case 0x60004000:
                    /* 01101111 01...... 010001.. ........ */
                    /* ../target/arm/tcg/a64.decode:1262 */
                    disas_a64_extract_q_shri_d(ctx, &u.f_qrri_e, insn);
                    if (trans_SRI_v(ctx, &u.f_qrri_e)) return true;
                    break;
                case 0x60005000:
                    /* 01101111 01...... 010101.. ........ */
                    /* ../target/arm/tcg/a64.decode:1272 */
                    disas_a64_extract_q_shli_d(ctx, &u.f_qrri_e, insn);
                    if (trans_SLI_v(ctx, &u.f_qrri_e)) return true;
                    break;
                case 0x60006000:
                    /* 01101111 01...... 011001.. ........ */
                    /* ../target/arm/tcg/a64.decode:1303 */
                    disas_a64_extract_q_shli_d(ctx, &u.f_qrri_e, insn);
                    if (trans_SQSHLU_vi(ctx, &u.f_qrri_e)) return true;
                    break;
                case 0x60007000:
                    /* 01101111 01...... 011101.. ........ */
                    /* ../target/arm/tcg/a64.decode:1298 */
                    disas_a64_extract_q_shli_d(ctx, &u.f_qrri_e, insn);
                    if (trans_UQSHL_vi(ctx, &u.f_qrri_e)) return true;
                    break;
                }
                break;
            case 0x00800000:
                /* 0..01111 10...... .....0.. ........ */
                switch (insn & 0x20009000) {
                case 0x00000000:
                    /* 0.001111 10...... 0..0.0.. ........ */
                    switch ((insn >> 13) & 0x3) {
                    case 0x0:
                        /* 0.001111 10...... 0000.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1072 */
                        disas_a64_extract_qrrx_h(ctx, &u.f_qrrx_e, insn);
                        if (trans_FMLAL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x1:
                        /* 0.001111 10...... 0010.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1115 */
                        disas_a64_extract_qrrx_s(ctx, &u.f_qrrx_e, insn);
                        if (trans_SMLAL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x2:
                        /* 0.001111 10...... 0100.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1073 */
                        disas_a64_extract_qrrx_h(ctx, &u.f_qrrx_e, insn);
                        if (trans_FMLSL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x3:
                        /* 0.001111 10...... 0110.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1120 */
                        disas_a64_extract_qrrx_s(ctx, &u.f_qrrx_e, insn);
                        if (trans_SMLSL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    }
                    break;
                case 0x00001000:
                    /* 0.001111 10...... 0..1.0.. ........ */
                    disas_a64_extract_qrrx_s(ctx, &u.f_qrrx_e, insn);
                    switch ((insn >> 13) & 0x3) {
                    case 0x0:
                        /* 0.001111 10...... 0001.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1061 */
                        if (trans_FMLA_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x1:
                        /* 0.001111 10...... 0011.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1128 */
                        if (trans_SQDMLAL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x2:
                        /* 0.001111 10...... 0101.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1065 */
                        if (trans_FMLS_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x3:
                        /* 0.001111 10...... 0111.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1131 */
                        if (trans_SQDMLSL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    }
                    break;
                case 0x00008000:
                    /* 0.001111 10...... 1..0.0.. ........ */
                    disas_a64_extract_qrrx_s(ctx, &u.f_qrrx_e, insn);
                    switch ((insn >> 13) & 0x3) {
                    case 0x0:
                        /* 0.001111 10...... 1000.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1078 */
                        if (trans_MUL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x1:
                        /* 0.001111 10...... 1010.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1110 */
                        if (trans_SMULL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x2:
                        /* 0.001111 10...... 1100.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1087 */
                        if (trans_SQDMULH_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x3:
                        /* 0.001111 10...... 1110.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1098 */
                        if (trans_SDOT_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    }
                    break;
                case 0x00009000:
                    /* 0.001111 10...... 1..1.0.. ........ */
                    disas_a64_extract_qrrx_s(ctx, &u.f_qrrx_e, insn);
                    switch ((insn >> 13) & 0x3) {
                    case 0x0:
                        /* 0.001111 10...... 1001.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1057 */
                        if (trans_FMUL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x1:
                        /* 0.001111 10...... 1011.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1125 */
                        if (trans_SQDMULL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x2:
                        /* 0.001111 10...... 1101.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1090 */
                        if (trans_SQRDMULH_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x3:
                        /* 0.001111 10...... 1111.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1101 */
                        if (trans_USDOT_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    }
                    break;
                case 0x20000000:
                    /* 0.101111 10...... 0..0.0.. ........ */
                    disas_a64_extract_qrrx_s(ctx, &u.f_qrrx_e, insn);
                    switch ((insn >> 13) & 0x3) {
                    case 0x0:
                        /* 0.101111 10...... 0000.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1081 */
                        if (trans_MLA_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x1:
                        /* 0.101111 10...... 0010.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1117 */
                        if (trans_UMLAL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x2:
                        /* 0.101111 10...... 0100.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1084 */
                        if (trans_MLS_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x3:
                        /* 0.101111 10...... 0110.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1122 */
                        if (trans_UMLSL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    }
                    break;
                case 0x20001000:
                    /* 0.101111 10...... 0..1.0.. ........ */
                    disas_a64_extract_disas_a64_Fmt_100(ctx, &u.f_disas_a6452, insn);
                    switch (insn & 0x40200000) {
                    case 0x40000000:
                        /* 01101111 100..... 0..1.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1107 */
                        if (trans_FCMLA_vi(ctx, &u.f_disas_a6452)) return true;
                        break;
                    }
                    break;
                case 0x20008000:
                    /* 0.101111 10...... 1..0.0.. ........ */
                    switch ((insn >> 13) & 0x3) {
                    case 0x0:
                        /* 0.101111 10...... 1000.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1074 */
                        disas_a64_extract_qrrx_h(ctx, &u.f_qrrx_e, insn);
                        if (trans_FMLAL2_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x1:
                        /* 0.101111 10...... 1010.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1112 */
                        disas_a64_extract_qrrx_s(ctx, &u.f_qrrx_e, insn);
                        if (trans_UMULL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x2:
                        /* 0.101111 10...... 1100.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1075 */
                        disas_a64_extract_qrrx_h(ctx, &u.f_qrrx_e, insn);
                        if (trans_FMLSL2_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x3:
                        /* 0.101111 10...... 1110.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1099 */
                        disas_a64_extract_qrrx_s(ctx, &u.f_qrrx_e, insn);
                        if (trans_UDOT_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    }
                    break;
                case 0x20009000:
                    /* 0.101111 10...... 1..1.0.. ........ */
                    disas_a64_extract_qrrx_s(ctx, &u.f_qrrx_e, insn);
                    switch ((insn >> 13) & 0x3) {
                    case 0x0:
                        /* 0.101111 10...... 1001.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1069 */
                        if (trans_FMULX_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x2:
                        /* 0.101111 10...... 1101.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1093 */
                        if (trans_SQRDMLAH_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    case 0x3:
                        /* 0.101111 10...... 1111.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1096 */
                        if (trans_SQRDMLSH_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x00c00000:
                /* 0..01111 11...... .....0.. ........ */
                switch (insn & 0x2000f000) {
                case 0x00001000:
                    /* 0.001111 11...... 0001.0.. ........ */
                    disas_a64_extract_qrrx_d(ctx, &u.f_qrrx_e, insn);
                    switch ((insn >> 21) & 0x1) {
                    case 0x0:
                        /* 0.001111 110..... 0001.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1062 */
                        if (trans_FMLA_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    }
                    break;
                case 0x00005000:
                    /* 0.001111 11...... 0101.0.. ........ */
                    disas_a64_extract_qrrx_d(ctx, &u.f_qrrx_e, insn);
                    switch ((insn >> 21) & 0x1) {
                    case 0x0:
                        /* 0.001111 110..... 0101.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1066 */
                        if (trans_FMLS_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    }
                    break;
                case 0x00009000:
                    /* 0.001111 11...... 1001.0.. ........ */
                    disas_a64_extract_qrrx_d(ctx, &u.f_qrrx_e, insn);
                    switch ((insn >> 21) & 0x1) {
                    case 0x0:
                        /* 0.001111 110..... 1001.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1058 */
                        if (trans_FMUL_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    }
                    break;
                case 0x0000f000:
                    /* 0.001111 11...... 1111.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1103 */
                    disas_a64_extract_qrrx_h(ctx, &u.f_qrrx_e, insn);
                    if (trans_BFMLAL_vi(ctx, &u.f_qrrx_e)) return true;
                    break;
                case 0x20009000:
                    /* 0.101111 11...... 1001.0.. ........ */
                    disas_a64_extract_qrrx_d(ctx, &u.f_qrrx_e, insn);
                    switch ((insn >> 21) & 0x1) {
                    case 0x0:
                        /* 0.101111 110..... 1001.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1070 */
                        if (trans_FMULX_vi(ctx, &u.f_qrrx_e)) return true;
                        break;
                    }
                    break;
                }
                break;
            }
            break;
        case 0x80000000u:
            /* 1..01100 ........ ........ ........ */
            disas_a64_extract_ldstpair(ctx, &u.f_ldstpair, insn);
            switch (insn & 0x60c00000) {
            case 0x20000000:
                /* 10101100 00...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:343 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 4;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 0;
                if (trans_STP_v(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x20400000:
                /* 10101100 01...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:344 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 4;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 0;
                if (trans_LDP_v(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x20800000:
                /* 10101100 10...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:356 */
                u.f_ldstpair.p = 1;
                u.f_ldstpair.sz = 4;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 1;
                if (trans_STP_v(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x20c00000:
                /* 10101100 11...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:357 */
                u.f_ldstpair.p = 1;
                u.f_ldstpair.sz = 4;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 1;
                if (trans_LDP_v(ctx, &u.f_ldstpair)) return true;
                break;
            }
            break;
        case 0x81000000u:
            /* 1..01101 ........ ........ ........ */
            disas_a64_extract_ldstpair(ctx, &u.f_ldstpair, insn);
            switch (insn & 0x60c00000) {
            case 0x20000000:
                /* 10101101 00...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:369 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 4;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 0;
                if (trans_STP_v(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x20400000:
                /* 10101101 01...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:370 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 4;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 0;
                if (trans_LDP_v(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x20800000:
                /* 10101101 10...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:382 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 4;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 1;
                if (trans_STP_v(ctx, &u.f_ldstpair)) return true;
                break;
            case 0x20c00000:
                /* 10101101 11...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:383 */
                u.f_ldstpair.p = 0;
                u.f_ldstpair.sz = 4;
                u.f_ldstpair.sign = 0;
                u.f_ldstpair.w = 1;
                if (trans_LDP_v(ctx, &u.f_ldstpair)) return true;
                break;
            }
            break;
        case 0x82000000u:
            /* 1..01110 ........ ........ ........ */
            switch (insn & 0x60e00000) {
            case 0x40000000:
                /* 11001110 000..... ........ ........ */
                disas_a64_extract_rrrr_q1e3(ctx, &u.f_qrrrr_e, insn);
                switch ((insn >> 15) & 0x1) {
                case 0x0:
                    /* 11001110 000..... 0....... ........ */
                    /* ../target/arm/tcg/a64.decode:692 */
                    if (trans_EOR3(ctx, &u.f_qrrrr_e)) return true;
                    break;
                }
                break;
            case 0x40200000:
                /* 11001110 001..... ........ ........ */
                disas_a64_extract_rrrr_q1e3(ctx, &u.f_qrrrr_e, insn);
                switch ((insn >> 15) & 0x1) {
                case 0x0:
                    /* 11001110 001..... 0....... ........ */
                    /* ../target/arm/tcg/a64.decode:693 */
                    if (trans_BCAX(ctx, &u.f_qrrrr_e)) return true;
                    break;
                }
                break;
            case 0x40400000:
                /* 11001110 010..... ........ ........ */
                switch ((insn >> 15) & 0x1) {
                case 0x0:
                    /* 11001110 010..... 0....... ........ */
                    /* ../target/arm/tcg/a64.decode:694 */
                    disas_a64_extract_rrrr_q1e3(ctx, &u.f_qrrrr_e, insn);
                    if (trans_SM3SS1(ctx, &u.f_qrrrr_e)) return true;
                    break;
                case 0x1:
                    /* 11001110 010..... 1....... ........ */
                    disas_a64_extract_crypto3i(ctx, &u.f_crypto3i, insn);
                    switch (insn & 0x00004c00) {
                    case 0x00000000:
                        /* 11001110 010..... 10..00.. ........ */
                        /* ../target/arm/tcg/a64.decode:701 */
                        if (trans_SM3TT1A(ctx, &u.f_crypto3i)) return true;
                        break;
                    case 0x00000400:
                        /* 11001110 010..... 10..01.. ........ */
                        /* ../target/arm/tcg/a64.decode:702 */
                        if (trans_SM3TT1B(ctx, &u.f_crypto3i)) return true;
                        break;
                    case 0x00000800:
                        /* 11001110 010..... 10..10.. ........ */
                        /* ../target/arm/tcg/a64.decode:703 */
                        if (trans_SM3TT2A(ctx, &u.f_crypto3i)) return true;
                        break;
                    case 0x00000c00:
                        /* 11001110 010..... 10..11.. ........ */
                        /* ../target/arm/tcg/a64.decode:704 */
                        if (trans_SM3TT2B(ctx, &u.f_crypto3i)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x40600000:
                /* 11001110 011..... ........ ........ */
                switch ((insn >> 10) & 0x3f) {
                case 0x20:
                    /* 11001110 011..... 100000.. ........ */
                    /* ../target/arm/tcg/a64.decode:677 */
                    disas_a64_extract_rrr_q1e0(ctx, &u.f_qrrr_e, insn);
                    if (trans_SHA512H(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x21:
                    /* 11001110 011..... 100001.. ........ */
                    /* ../target/arm/tcg/a64.decode:678 */
                    disas_a64_extract_rrr_q1e0(ctx, &u.f_qrrr_e, insn);
                    if (trans_SHA512H2(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x22:
                    /* 11001110 011..... 100010.. ........ */
                    /* ../target/arm/tcg/a64.decode:679 */
                    disas_a64_extract_rrr_q1e0(ctx, &u.f_qrrr_e, insn);
                    if (trans_SHA512SU1(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x23:
                    /* 11001110 011..... 100011.. ........ */
                    /* ../target/arm/tcg/a64.decode:680 */
                    disas_a64_extract_rrr_q1e3(ctx, &u.f_qrrr_e, insn);
                    if (trans_RAX1(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x30:
                    /* 11001110 011..... 110000.. ........ */
                    /* ../target/arm/tcg/a64.decode:681 */
                    disas_a64_extract_rrr_q1e0(ctx, &u.f_qrrr_e, insn);
                    if (trans_SM3PARTW1(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x31:
                    /* 11001110 011..... 110001.. ........ */
                    /* ../target/arm/tcg/a64.decode:682 */
                    disas_a64_extract_rrr_q1e0(ctx, &u.f_qrrr_e, insn);
                    if (trans_SM3PARTW2(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x32:
                    /* 11001110 011..... 110010.. ........ */
                    /* ../target/arm/tcg/a64.decode:683 */
                    disas_a64_extract_rrr_q1e0(ctx, &u.f_qrrr_e, insn);
                    if (trans_SM4EKEY(ctx, &u.f_qrrr_e)) return true;
                    break;
                }
                break;
            case 0x40800000:
                /* 11001110 100..... ........ ........ */
                /* ../target/arm/tcg/a64.decode:708 */
                disas_a64_extract_disas_a64_Fmt_87(ctx, &u.f_crypto3i, insn);
                if (trans_XAR(ctx, &u.f_crypto3i)) return true;
                break;
            case 0x40c00000:
                /* 11001110 110..... ........ ........ */
                switch ((insn >> 10) & 0x7ff) {
                case 0x20:
                    /* 11001110 11000000 100000.. ........ */
                    /* ../target/arm/tcg/a64.decode:687 */
                    disas_a64_extract_rr_q1e0(ctx, &u.f_qrr_e, insn);
                    if (trans_SHA512SU0(ctx, &u.f_qrr_e)) return true;
                    break;
                case 0x21:
                    /* 11001110 11000000 100001.. ........ */
                    /* ../target/arm/tcg/a64.decode:688 */
                    disas_a64_extract_r2r_q1e0(ctx, &u.f_qrrr_e, insn);
                    if (trans_SM4E(ctx, &u.f_qrrr_e)) return true;
                    break;
                }
                break;
            }
            break;
        }
        break;
    case 0x4:
        /* ...100.. ........ ........ ........ */
        switch ((insn >> 24) & 0x3) {
        case 0x0:
            /* ...10000 ........ ........ ........ */
            disas_a64_extract_pcrel(ctx, &u.f_ri, insn);
            switch ((insn >> 31) & 0x1) {
            case 0x0:
                /* 0..10000 ........ ........ ........ */
                /* ../target/arm/tcg/a64.decode:89 */
                if (trans_ADR(ctx, &u.f_ri)) return true;
                break;
            case 0x1:
                /* 1..10000 ........ ........ ........ */
                /* ../target/arm/tcg/a64.decode:90 */
                if (trans_ADRP(ctx, &u.f_ri)) return true;
                break;
            }
            break;
        case 0x1:
            /* ...10001 ........ ........ ........ */
            switch (insn & 0x60c00000) {
            case 0x00000000:
                /* .0010001 00...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:98 */
                disas_a64_extract_addsub_imm(ctx, &u.f_rri_sf, insn);
                if (trans_ADD_i(ctx, &u.f_rri_sf)) return true;
                break;
            case 0x00400000:
                /* .0010001 01...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:99 */
                disas_a64_extract_addsub_imm12(ctx, &u.f_rri_sf, insn);
                if (trans_ADD_i(ctx, &u.f_rri_sf)) return true;
                break;
            case 0x00800000:
                /* .0010001 10...... ........ ........ */
                disas_a64_extract_addsub_imm_tag(ctx, &u.f_rri_tag, insn);
                switch (insn & 0x8000c000u) {
                case 0x80000000u:
                    /* 10010001 10...... 00...... ........ */
                    /* ../target/arm/tcg/a64.decode:113 */
                    if (trans_ADDG_i(ctx, &u.f_rri_tag)) return true;
                    break;
                }
                break;
            case 0x20000000:
                /* .0110001 00...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:100 */
                disas_a64_extract_addsub_imm(ctx, &u.f_rri_sf, insn);
                if (trans_ADDS_i(ctx, &u.f_rri_sf)) return true;
                break;
            case 0x20400000:
                /* .0110001 01...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:101 */
                disas_a64_extract_addsub_imm12(ctx, &u.f_rri_sf, insn);
                if (trans_ADDS_i(ctx, &u.f_rri_sf)) return true;
                break;
            case 0x40000000:
                /* .1010001 00...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:103 */
                disas_a64_extract_addsub_imm(ctx, &u.f_rri_sf, insn);
                if (trans_SUB_i(ctx, &u.f_rri_sf)) return true;
                break;
            case 0x40400000:
                /* .1010001 01...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:104 */
                disas_a64_extract_addsub_imm12(ctx, &u.f_rri_sf, insn);
                if (trans_SUB_i(ctx, &u.f_rri_sf)) return true;
                break;
            case 0x40800000:
                /* .1010001 10...... ........ ........ */
                disas_a64_extract_addsub_imm_tag(ctx, &u.f_rri_tag, insn);
                switch (insn & 0x8000c000u) {
                case 0x80000000u:
                    /* 11010001 10...... 00...... ........ */
                    /* ../target/arm/tcg/a64.decode:114 */
                    if (trans_SUBG_i(ctx, &u.f_rri_tag)) return true;
                    break;
                }
                break;
            case 0x60000000:
                /* .1110001 00...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:105 */
                disas_a64_extract_addsub_imm(ctx, &u.f_rri_sf, insn);
                if (trans_SUBS_i(ctx, &u.f_rri_sf)) return true;
                break;
            case 0x60400000:
                /* .1110001 01...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:106 */
                disas_a64_extract_addsub_imm12(ctx, &u.f_rri_sf, insn);
                if (trans_SUBS_i(ctx, &u.f_rri_sf)) return true;
                break;
            }
            break;
        case 0x2:
            /* ...10010 ........ ........ ........ */
            switch (insn & 0xe0800000u) {
            case 0x00000000:
                /* 00010010 0....... ........ ........ */
                disas_a64_extract_logic_imm_32(ctx, &u.f_rri_log, insn);
                switch ((insn >> 22) & 0x1) {
                case 0x0:
                    /* 00010010 00...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:123 */
                    if (trans_AND_i(ctx, &u.f_rri_log)) return true;
                    break;
                }
                break;
            case 0x00800000:
                /* 00010010 1....... ........ ........ */
                disas_a64_extract_movw_32(ctx, &u.f_movw, insn);
                switch ((insn >> 22) & 0x1) {
                case 0x0:
                    /* 00010010 10...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:138 */
                    if (trans_MOVN(ctx, &u.f_movw)) return true;
                    break;
                }
                break;
            case 0x20000000:
                /* 00110010 0....... ........ ........ */
                disas_a64_extract_logic_imm_32(ctx, &u.f_rri_log, insn);
                switch ((insn >> 22) & 0x1) {
                case 0x0:
                    /* 00110010 00...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:125 */
                    if (trans_ORR_i(ctx, &u.f_rri_log)) return true;
                    break;
                }
                break;
            case 0x40000000:
                /* 01010010 0....... ........ ........ */
                disas_a64_extract_logic_imm_32(ctx, &u.f_rri_log, insn);
                switch ((insn >> 22) & 0x1) {
                case 0x0:
                    /* 01010010 00...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:127 */
                    if (trans_EOR_i(ctx, &u.f_rri_log)) return true;
                    break;
                }
                break;
            case 0x40800000:
                /* 01010010 1....... ........ ........ */
                disas_a64_extract_movw_32(ctx, &u.f_movw, insn);
                switch ((insn >> 22) & 0x1) {
                case 0x0:
                    /* 01010010 10...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:140 */
                    if (trans_MOVZ(ctx, &u.f_movw)) return true;
                    break;
                }
                break;
            case 0x60000000:
                /* 01110010 0....... ........ ........ */
                disas_a64_extract_logic_imm_32(ctx, &u.f_rri_log, insn);
                switch ((insn >> 22) & 0x1) {
                case 0x0:
                    /* 01110010 00...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:129 */
                    if (trans_ANDS_i(ctx, &u.f_rri_log)) return true;
                    break;
                }
                break;
            case 0x60800000:
                /* 01110010 1....... ........ ........ */
                disas_a64_extract_movw_32(ctx, &u.f_movw, insn);
                switch ((insn >> 22) & 0x1) {
                case 0x0:
                    /* 01110010 10...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:142 */
                    if (trans_MOVK(ctx, &u.f_movw)) return true;
                    break;
                }
                break;
            case 0x80000000u:
                /* 10010010 0....... ........ ........ */
                /* ../target/arm/tcg/a64.decode:122 */
                disas_a64_extract_logic_imm_64(ctx, &u.f_rri_log, insn);
                if (trans_AND_i(ctx, &u.f_rri_log)) return true;
                break;
            case 0x80800000u:
                /* 10010010 1....... ........ ........ */
                /* ../target/arm/tcg/a64.decode:137 */
                disas_a64_extract_movw_64(ctx, &u.f_movw, insn);
                if (trans_MOVN(ctx, &u.f_movw)) return true;
                break;
            case 0xa0000000u:
                /* 10110010 0....... ........ ........ */
                /* ../target/arm/tcg/a64.decode:124 */
                disas_a64_extract_logic_imm_64(ctx, &u.f_rri_log, insn);
                if (trans_ORR_i(ctx, &u.f_rri_log)) return true;
                break;
            case 0xc0000000u:
                /* 11010010 0....... ........ ........ */
                /* ../target/arm/tcg/a64.decode:126 */
                disas_a64_extract_logic_imm_64(ctx, &u.f_rri_log, insn);
                if (trans_EOR_i(ctx, &u.f_rri_log)) return true;
                break;
            case 0xc0800000u:
                /* 11010010 1....... ........ ........ */
                /* ../target/arm/tcg/a64.decode:139 */
                disas_a64_extract_movw_64(ctx, &u.f_movw, insn);
                if (trans_MOVZ(ctx, &u.f_movw)) return true;
                break;
            case 0xe0000000u:
                /* 11110010 0....... ........ ........ */
                /* ../target/arm/tcg/a64.decode:128 */
                disas_a64_extract_logic_imm_64(ctx, &u.f_rri_log, insn);
                if (trans_ANDS_i(ctx, &u.f_rri_log)) return true;
                break;
            case 0xe0800000u:
                /* 11110010 1....... ........ ........ */
                /* ../target/arm/tcg/a64.decode:141 */
                disas_a64_extract_movw_64(ctx, &u.f_movw, insn);
                if (trans_MOVK(ctx, &u.f_movw)) return true;
                break;
            }
            break;
        case 0x3:
            /* ...10011 ........ ........ ........ */
            switch (insn & 0xe0c00000u) {
            case 0x00000000:
                /* 00010011 00...... ........ ........ */
                disas_a64_extract_bitfield_32(ctx, &u.f_bitfield, insn);
                switch (insn & 0x00208000) {
                case 0x00000000:
                    /* 00010011 000..... 0....... ........ */
                    /* ../target/arm/tcg/a64.decode:151 */
                    if (trans_SBFM(ctx, &u.f_bitfield)) return true;
                    break;
                }
                break;
            case 0x00800000:
                /* 00010011 10...... ........ ........ */
                disas_a64_extract_disas_a64_Fmt_40(ctx, &u.f_extract, insn);
                switch (insn & 0x00208000) {
                case 0x00000000:
                    /* 00010011 100..... 0....... ........ */
                    /* ../target/arm/tcg/a64.decode:162 */
                    if (trans_EXTR(ctx, &u.f_extract)) return true;
                    break;
                }
                break;
            case 0x20000000:
                /* 00110011 00...... ........ ........ */
                disas_a64_extract_bitfield_32(ctx, &u.f_bitfield, insn);
                switch (insn & 0x00208000) {
                case 0x00000000:
                    /* 00110011 000..... 0....... ........ */
                    /* ../target/arm/tcg/a64.decode:153 */
                    if (trans_BFM(ctx, &u.f_bitfield)) return true;
                    break;
                }
                break;
            case 0x40000000:
                /* 01010011 00...... ........ ........ */
                disas_a64_extract_bitfield_32(ctx, &u.f_bitfield, insn);
                switch (insn & 0x00208000) {
                case 0x00000000:
                    /* 01010011 000..... 0....... ........ */
                    /* ../target/arm/tcg/a64.decode:155 */
                    if (trans_UBFM(ctx, &u.f_bitfield)) return true;
                    break;
                }
                break;
            case 0x80400000u:
                /* 10010011 01...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:150 */
                disas_a64_extract_bitfield_64(ctx, &u.f_bitfield, insn);
                if (trans_SBFM(ctx, &u.f_bitfield)) return true;
                break;
            case 0x80c00000u:
                /* 10010011 11...... ........ ........ */
                disas_a64_extract_disas_a64_Fmt_39(ctx, &u.f_extract, insn);
                switch ((insn >> 21) & 0x1) {
                case 0x0:
                    /* 10010011 110..... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:161 */
                    if (trans_EXTR(ctx, &u.f_extract)) return true;
                    break;
                }
                break;
            case 0xa0400000u:
                /* 10110011 01...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:152 */
                disas_a64_extract_bitfield_64(ctx, &u.f_bitfield, insn);
                if (trans_BFM(ctx, &u.f_bitfield)) return true;
                break;
            case 0xc0400000u:
                /* 11010011 01...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:154 */
                disas_a64_extract_bitfield_64(ctx, &u.f_bitfield, insn);
                if (trans_UBFM(ctx, &u.f_bitfield)) return true;
                break;
            }
            break;
        }
        break;
    case 0x5:
        /* ...101.. ........ ........ ........ */
        switch ((insn >> 29) & 0x3) {
        case 0x0:
            /* .00101.. ........ ........ ........ */
            disas_a64_extract_branch(ctx, &u.f_i, insn);
            switch ((insn >> 31) & 0x1) {
            case 0x0:
                /* 000101.. ........ ........ ........ */
                /* ../target/arm/tcg/a64.decode:169 */
                if (trans_B(ctx, &u.f_i)) return true;
                break;
            case 0x1:
                /* 100101.. ........ ........ ........ */
                /* ../target/arm/tcg/a64.decode:170 */
                if (trans_BL(ctx, &u.f_i)) return true;
                break;
            }
            break;
        case 0x1:
            /* .01101.. ........ ........ ........ */
            switch ((insn >> 25) & 0x1) {
            case 0x0:
                /* .011010. ........ ........ ........ */
                /* ../target/arm/tcg/a64.decode:175 */
                disas_a64_extract_disas_a64_Fmt_42(ctx, &u.f_cbz, insn);
                if (trans_CBZ(ctx, &u.f_cbz)) return true;
                break;
            case 0x1:
                /* .011011. ........ ........ ........ */
                /* ../target/arm/tcg/a64.decode:181 */
                disas_a64_extract_disas_a64_Fmt_43(ctx, &u.f_tbz, insn);
                if (trans_TBZ(ctx, &u.f_tbz)) return true;
                break;
            }
            break;
        case 0x2:
            /* .10101.. ........ ........ ........ */
            switch (insn & 0x83000000u) {
            case 0x00000000:
                /* 01010100 ........ ........ ........ */
                /* ../target/arm/tcg/a64.decode:184 */
                disas_a64_extract_disas_a64_Fmt_44(ctx, &u.f_disas_a6421, insn);
                if (trans_B_cond(ctx, &u.f_disas_a6421)) return true;
                break;
            case 0x80000000u:
                /* 11010100 ........ ........ ........ */
                disas_a64_extract_i16(ctx, &u.f_i, insn);
                switch (insn & 0x00e0001f) {
                case 0x00000001:
                    /* 11010100 000..... ........ ...00001 */
                    /* ../target/arm/tcg/a64.decode:282 */
                    if (trans_SVC(ctx, &u.f_i)) return true;
                    break;
                case 0x00000002:
                    /* 11010100 000..... ........ ...00010 */
                    /* ../target/arm/tcg/a64.decode:283 */
                    if (trans_HVC(ctx, &u.f_i)) return true;
                    break;
                case 0x00000003:
                    /* 11010100 000..... ........ ...00011 */
                    /* ../target/arm/tcg/a64.decode:284 */
                    if (trans_SMC(ctx, &u.f_i)) return true;
                    break;
                case 0x00200000:
                    /* 11010100 001..... ........ ...00000 */
                    /* ../target/arm/tcg/a64.decode:285 */
                    if (trans_BRK(ctx, &u.f_i)) return true;
                    break;
                case 0x00400000:
                    /* 11010100 010..... ........ ...00000 */
                    /* ../target/arm/tcg/a64.decode:286 */
                    if (trans_HLT(ctx, &u.f_i)) return true;
                    break;
                }
                break;
            case 0x81000000u:
                /* 11010101 ........ ........ ........ */
                switch (insn & 0x00d80000) {
                case 0x00000000:
                    /* 11010101 00.00... ........ ........ */
                    switch (insn & 0x0027f000) {
                    case 0x00004000:
                        /* 11010101 00000000 0100.... ........ */
                        switch (insn & 0x000000ff) {
                        case 0x0000001f:
                            /* 11010101 00000000 0100.... 00011111 */
                            disas_a64_extract_disas_a64_Fmt_49(ctx, &u.f_disas_a6425, insn);
                            switch ((insn >> 8) & 0xf) {
                            case 0x0:
                                /* 11010101 00000000 01000000 00011111 */
                                /* ../target/arm/tcg/a64.decode:253 */
                                if (trans_CFINV(ctx, &u.f_disas_a6425)) return true;
                                break;
                            }
                            break;
                        case 0x0000003f:
                            /* 11010101 00000000 0100.... 00111111 */
                            disas_a64_extract_disas_a64_Fmt_49(ctx, &u.f_disas_a6425, insn);
                            switch ((insn >> 8) & 0xf) {
                            case 0x0:
                                /* 11010101 00000000 01000000 00111111 */
                                /* ../target/arm/tcg/a64.decode:254 */
                                if (trans_XAFLAG(ctx, &u.f_disas_a6425)) return true;
                                break;
                            }
                            break;
                        case 0x0000005f:
                            /* 11010101 00000000 0100.... 01011111 */
                            disas_a64_extract_disas_a64_Fmt_49(ctx, &u.f_disas_a6425, insn);
                            switch ((insn >> 8) & 0xf) {
                            case 0x0:
                                /* 11010101 00000000 01000000 01011111 */
                                /* ../target/arm/tcg/a64.decode:255 */
                                if (trans_AXFLAG(ctx, &u.f_disas_a6425)) return true;
                                break;
                            }
                            break;
                        case 0x0000007f:
                            /* 11010101 00000000 0100.... 01111111 */
                            /* ../target/arm/tcg/a64.decode:260 */
                            disas_a64_extract_msr_i(ctx, &u.f_i, insn);
                            if (trans_MSR_i_UAO(ctx, &u.f_i)) return true;
                            break;
                        case 0x0000009f:
                            /* 11010101 00000000 0100.... 10011111 */
                            /* ../target/arm/tcg/a64.decode:261 */
                            disas_a64_extract_msr_i(ctx, &u.f_i, insn);
                            if (trans_MSR_i_PAN(ctx, &u.f_i)) return true;
                            break;
                        case 0x000000bf:
                            /* 11010101 00000000 0100.... 10111111 */
                            /* ../target/arm/tcg/a64.decode:262 */
                            disas_a64_extract_msr_i(ctx, &u.f_i, insn);
                            if (trans_MSR_i_SPSEL(ctx, &u.f_i)) return true;
                            break;
                        }
                        break;
                    case 0x00014000:
                        /* 11010101 00000001 0100.... ........ */
                        disas_a64_extract_disas_a64_Fmt_53(ctx, &u.f_i, insn);
                        switch (insn & 0x00000eff) {
                        case 0x0000001f:
                            /* 11010101 00000001 0100000. 00011111 */
                            /* ../target/arm/tcg/a64.decode:268 */
                            if (trans_MSR_i_ALLINT(ctx, &u.f_i)) return true;
                            break;
                        }
                        break;
                    case 0x00031000:
                        /* 11010101 00000011 0001.... ........ */
                        disas_a64_extract_disas_a64_Fmt_50(ctx, &u.f_disas_a6426, insn);
                        switch ((insn >> 5) & 0x7f) {
                        case 0x0:
                            /* 11010101 00000011 00010000 000..... */
                            /* ../target/arm/tcg/a64.decode:241 */
                            if (trans_WFET(ctx, &u.f_disas_a6426)) return true;
                            break;
                        case 0x1:
                            /* 11010101 00000011 00010000 001..... */
                            /* ../target/arm/tcg/a64.decode:242 */
                            if (trans_WFIT(ctx, &u.f_disas_a6426)) return true;
                            break;
                        }
                        break;
                    case 0x00032000:
                        /* 11010101 00000011 0010.... ........ */
                        switch (insn & 0x0000001f) {
                        case 0x0000001f:
                            /* 11010101 00000011 0010.... ...11111 */
                            if ((insn & 0x00000c00) == 0x00000000) {
                                /* 11010101 00000011 001000.. ...11111 */
                                disas_a64_extract_disas_a64_Fmt_49(ctx, &u.f_disas_a6425, insn);
                                switch ((insn >> 5) & 0x1f) {
                                case 0x1:
                                    /* 11010101 00000011 00100000 00111111 */
                                    /* ../target/arm/tcg/a64.decode:212 */
                                    if (trans_YIELD(ctx, &u.f_disas_a6425)) return true;
                                    break;
                                case 0x2:
                                    /* 11010101 00000011 00100000 01011111 */
                                    /* ../target/arm/tcg/a64.decode:213 */
                                    if (trans_WFE(ctx, &u.f_disas_a6425)) return true;
                                    break;
                                case 0x3:
                                    /* 11010101 00000011 00100000 01111111 */
                                    /* ../target/arm/tcg/a64.decode:214 */
                                    if (trans_WFI(ctx, &u.f_disas_a6425)) return true;
                                    break;
                                case 0x7:
                                    /* 11010101 00000011 00100000 11111111 */
                                    /* ../target/arm/tcg/a64.decode:220 */
                                    if (trans_XPACLRI(ctx, &u.f_disas_a6425)) return true;
                                    break;
                                case 0x8:
                                    /* 11010101 00000011 00100001 00011111 */
                                    /* ../target/arm/tcg/a64.decode:221 */
                                    if (trans_PACIA1716(ctx, &u.f_disas_a6425)) return true;
                                    break;
                                case 0xa:
                                    /* 11010101 00000011 00100001 01011111 */
                                    /* ../target/arm/tcg/a64.decode:222 */
                                    if (trans_PACIB1716(ctx, &u.f_disas_a6425)) return true;
                                    break;
                                case 0xc:
                                    /* 11010101 00000011 00100001 10011111 */
                                    /* ../target/arm/tcg/a64.decode:223 */
                                    if (trans_AUTIA1716(ctx, &u.f_disas_a6425)) return true;
                                    break;
                                case 0xe:
                                    /* 11010101 00000011 00100001 11011111 */
                                    /* ../target/arm/tcg/a64.decode:224 */
                                    if (trans_AUTIB1716(ctx, &u.f_disas_a6425)) return true;
                                    break;
                                case 0x10:
                                    /* 11010101 00000011 00100010 00011111 */
                                    /* ../target/arm/tcg/a64.decode:225 */
                                    if (trans_ESB(ctx, &u.f_disas_a6425)) return true;
                                    break;
                                case 0x18:
                                    /* 11010101 00000011 00100011 00011111 */
                                    /* ../target/arm/tcg/a64.decode:226 */
                                    if (trans_PACIAZ(ctx, &u.f_disas_a6425)) return true;
                                    break;
                                case 0x19:
                                    /* 11010101 00000011 00100011 00111111 */
                                    /* ../target/arm/tcg/a64.decode:227 */
                                    if (trans_PACIASP(ctx, &u.f_disas_a6425)) return true;
                                    break;
                                case 0x1a:
                                    /* 11010101 00000011 00100011 01011111 */
                                    /* ../target/arm/tcg/a64.decode:228 */
                                    if (trans_PACIBZ(ctx, &u.f_disas_a6425)) return true;
                                    break;
                                case 0x1b:
                                    /* 11010101 00000011 00100011 01111111 */
                                    /* ../target/arm/tcg/a64.decode:229 */
                                    if (trans_PACIBSP(ctx, &u.f_disas_a6425)) return true;
                                    break;
                                case 0x1c:
                                    /* 11010101 00000011 00100011 10011111 */
                                    /* ../target/arm/tcg/a64.decode:230 */
                                    if (trans_AUTIAZ(ctx, &u.f_disas_a6425)) return true;
                                    break;
                                case 0x1d:
                                    /* 11010101 00000011 00100011 10111111 */
                                    /* ../target/arm/tcg/a64.decode:231 */
                                    if (trans_AUTIASP(ctx, &u.f_disas_a6425)) return true;
                                    break;
                                case 0x1e:
                                    /* 11010101 00000011 00100011 11011111 */
                                    /* ../target/arm/tcg/a64.decode:232 */
                                    if (trans_AUTIBZ(ctx, &u.f_disas_a6425)) return true;
                                    break;
                                case 0x1f:
                                    /* 11010101 00000011 00100011 11111111 */
                                    /* ../target/arm/tcg/a64.decode:233 */
                                    if (trans_AUTIBSP(ctx, &u.f_disas_a6425)) return true;
                                    break;
                                }
                            }
                            /* ../target/arm/tcg/a64.decode:237 */
                            disas_a64_extract_disas_a64_Fmt_49(ctx, &u.f_disas_a6425, insn);
                            if (trans_NOP(ctx, &u.f_disas_a6425)) return true;
                            break;
                        }
                        break;
                    case 0x00033000:
                        /* 11010101 00000011 0011.... ........ */
                        switch (insn & 0x000000df) {
                        case 0x0000005f:
                            /* 11010101 00000011 0011.... 01.11111 */
                            disas_a64_extract_disas_a64_Fmt_49(ctx, &u.f_disas_a6425, insn);
                            switch ((insn >> 5) & 0x1) {
                            case 0x0:
                                /* 11010101 00000011 0011.... 01011111 */
                                /* ../target/arm/tcg/a64.decode:246 */
                                if (trans_CLREX(ctx, &u.f_disas_a6425)) return true;
                                break;
                            }
                            break;
                        case 0x0000009f:
                            /* 11010101 00000011 0011.... 10.11111 */
                            /* ../target/arm/tcg/a64.decode:247 */
                            disas_a64_extract_disas_a64_Fmt_51(ctx, &u.f_disas_a6427, insn);
                            if (trans_DSB_DMB(ctx, &u.f_disas_a6427)) return true;
                            break;
                        case 0x000000df:
                            /* 11010101 00000011 0011.... 11.11111 */
                            disas_a64_extract_disas_a64_Fmt_49(ctx, &u.f_disas_a6425, insn);
                            switch ((insn >> 5) & 0x1) {
                            case 0x0:
                                /* 11010101 00000011 0011.... 11011111 */
                                /* ../target/arm/tcg/a64.decode:248 */
                                if (trans_ISB(ctx, &u.f_disas_a6425)) return true;
                                break;
                            case 0x1:
                                /* 11010101 00000011 0011.... 11111111 */
                                switch ((insn >> 8) & 0xf) {
                                case 0x0:
                                    /* 11010101 00000011 00110000 11111111 */
                                    /* ../target/arm/tcg/a64.decode:249 */
                                    if (trans_SB(ctx, &u.f_disas_a6425)) return true;
                                    break;
                                }
                                break;
                            }
                            break;
                        }
                        break;
                    case 0x00034000:
                        /* 11010101 00000011 0100.... ........ */
                        switch (insn & 0x000000ff) {
                        case 0x0000003f:
                            /* 11010101 00000011 0100.... 00111111 */
                            /* ../target/arm/tcg/a64.decode:263 */
                            disas_a64_extract_msr_i(ctx, &u.f_i, insn);
                            if (trans_MSR_i_SBSS(ctx, &u.f_i)) return true;
                            break;
                        case 0x0000005f:
                            /* 11010101 00000011 0100.... 01011111 */
                            /* ../target/arm/tcg/a64.decode:264 */
                            disas_a64_extract_msr_i(ctx, &u.f_i, insn);
                            if (trans_MSR_i_DIT(ctx, &u.f_i)) return true;
                            break;
                        case 0x0000007f:
                            /* 11010101 00000011 0100.... 01111111 */
                            disas_a64_extract_disas_a64_Fmt_54(ctx, &u.f_disas_a6428, insn);
                            switch ((insn >> 11) & 0x1) {
                            case 0x0:
                                /* 11010101 00000011 01000... 01111111 */
                                /* ../target/arm/tcg/a64.decode:269 */
                                if (trans_MSR_i_SVCR(ctx, &u.f_disas_a6428)) return true;
                                break;
                            }
                            break;
                        case 0x0000009f:
                            /* 11010101 00000011 0100.... 10011111 */
                            /* ../target/arm/tcg/a64.decode:265 */
                            disas_a64_extract_msr_i(ctx, &u.f_i, insn);
                            if (trans_MSR_i_TCO(ctx, &u.f_i)) return true;
                            break;
                        case 0x000000df:
                            /* 11010101 00000011 0100.... 11011111 */
                            /* ../target/arm/tcg/a64.decode:266 */
                            disas_a64_extract_msr_i(ctx, &u.f_i, insn);
                            if (trans_MSR_i_DAIFSET(ctx, &u.f_i)) return true;
                            break;
                        case 0x000000ff:
                            /* 11010101 00000011 0100.... 11111111 */
                            /* ../target/arm/tcg/a64.decode:267 */
                            disas_a64_extract_msr_i(ctx, &u.f_i, insn);
                            if (trans_MSR_i_DAIFCLEAR(ctx, &u.f_i)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                case 0x00080000:
                    /* 11010101 00.01... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:275 */
                    disas_a64_extract_disas_a64_Fmt_55(ctx, &u.f_disas_a6429, insn);
                    if (trans_SYS(ctx, &u.f_disas_a6429)) return true;
                    break;
                case 0x00100000:
                    /* 11010101 00.10... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:276 */
                    disas_a64_extract_disas_a64_Fmt_56(ctx, &u.f_disas_a6429, insn);
                    if (trans_SYS(ctx, &u.f_disas_a6429)) return true;
                    break;
                case 0x00180000:
                    /* 11010101 00.11... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:277 */
                    disas_a64_extract_disas_a64_Fmt_57(ctx, &u.f_disas_a6429, insn);
                    if (trans_SYS(ctx, &u.f_disas_a6429)) return true;
                    break;
                }
                break;
            case 0x82000000u:
                /* 11010110 ........ ........ ........ */
                switch (insn & 0x00fff81f) {
                case 0x001f0000:
                    /* 11010110 00011111 00000... ...00000 */
                    disas_a64_extract_disas_a64_Fmt_45(ctx, &u.f_r, insn);
                    switch ((insn >> 10) & 0x1) {
                    case 0x0:
                        /* 11010110 00011111 000000.. ...00000 */
                        /* ../target/arm/tcg/a64.decode:186 */
                        if (trans_BR(ctx, &u.f_r)) return true;
                        break;
                    }
                    break;
                case 0x001f081f:
                    /* 11010110 00011111 00001... ...11111 */
                    /* ../target/arm/tcg/a64.decode:191 */
                    disas_a64_extract_disas_a64_Fmt_46(ctx, &u.f_braz, insn);
                    if (trans_BRAZ(ctx, &u.f_braz)) return true;
                    break;
                case 0x003f0000:
                    /* 11010110 00111111 00000... ...00000 */
                    disas_a64_extract_disas_a64_Fmt_45(ctx, &u.f_r, insn);
                    switch ((insn >> 10) & 0x1) {
                    case 0x0:
                        /* 11010110 00111111 000000.. ...00000 */
                        /* ../target/arm/tcg/a64.decode:187 */
                        if (trans_BLR(ctx, &u.f_r)) return true;
                        break;
                    }
                    break;
                case 0x003f081f:
                    /* 11010110 00111111 00001... ...11111 */
                    /* ../target/arm/tcg/a64.decode:192 */
                    disas_a64_extract_disas_a64_Fmt_46(ctx, &u.f_braz, insn);
                    if (trans_BLRAZ(ctx, &u.f_braz)) return true;
                    break;
                case 0x005f0000:
                    /* 11010110 01011111 00000... ...00000 */
                    disas_a64_extract_disas_a64_Fmt_45(ctx, &u.f_r, insn);
                    switch ((insn >> 10) & 0x1) {
                    case 0x0:
                        /* 11010110 01011111 000000.. ...00000 */
                        /* ../target/arm/tcg/a64.decode:188 */
                        if (trans_RET(ctx, &u.f_r)) return true;
                        break;
                    }
                    break;
                case 0x005f081f:
                    /* 11010110 01011111 00001... ...11111 */
                    disas_a64_extract_disas_a64_Fmt_47(ctx, &u.f_reta, insn);
                    switch ((insn >> 5) & 0x1f) {
                    case 0x1f:
                        /* 11010110 01011111 00001.11 11111111 */
                        /* ../target/arm/tcg/a64.decode:195 */
                        if (trans_RETA(ctx, &u.f_reta)) return true;
                        break;
                    }
                    break;
                case 0x009f0000:
                    /* 11010110 10011111 00000... ...00000 */
                    disas_a64_extract_disas_a64_Fmt_49(ctx, &u.f_disas_a6425, insn);
                    switch ((insn >> 5) & 0x3f) {
                    case 0x1f:
                        /* 11010110 10011111 00000011 11100000 */
                        /* ../target/arm/tcg/a64.decode:201 */
                        if (trans_ERET(ctx, &u.f_disas_a6425)) return true;
                        break;
                    }
                    break;
                case 0x009f081f:
                    /* 11010110 10011111 00001... ...11111 */
                    disas_a64_extract_disas_a64_Fmt_47(ctx, &u.f_reta, insn);
                    switch ((insn >> 5) & 0x1f) {
                    case 0x1f:
                        /* 11010110 10011111 00001.11 11111111 */
                        /* ../target/arm/tcg/a64.decode:202 */
                        if (trans_ERETA(ctx, &u.f_reta)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x83000000u:
                /* 11010111 ........ ........ ........ */
                disas_a64_extract_disas_a64_Fmt_48(ctx, &u.f_bra, insn);
                switch ((insn >> 11) & 0x1fff) {
                case 0x3e1:
                    /* 11010111 00011111 00001... ........ */
                    /* ../target/arm/tcg/a64.decode:198 */
                    if (trans_BRA(ctx, &u.f_bra)) return true;
                    break;
                case 0x7e1:
                    /* 11010111 00111111 00001... ........ */
                    /* ../target/arm/tcg/a64.decode:199 */
                    if (trans_BLRA(ctx, &u.f_bra)) return true;
                    break;
                }
                break;
            }
            break;
        }
        break;
    case 0x6:
        /* ...110.. ........ ........ ........ */
        switch (insn & 0x23000000) {
        case 0x00000000:
            /* ..011000 ........ ........ ........ */
            switch ((insn >> 30) & 0x3) {
            case 0x0:
                /* 00011000 ........ ........ ........ */
                /* ../target/arm/tcg/a64.decode:319 */
                disas_a64_extract_ldlit(ctx, &u.f_ldlit, insn);
                u.f_ldlit.sz = 2;
                u.f_ldlit.sign = 0;
                if (trans_LD_lit(ctx, &u.f_ldlit)) return true;
                break;
            case 0x1:
                /* 01011000 ........ ........ ........ */
                /* ../target/arm/tcg/a64.decode:320 */
                disas_a64_extract_ldlit(ctx, &u.f_ldlit, insn);
                u.f_ldlit.sz = 3;
                u.f_ldlit.sign = 0;
                if (trans_LD_lit(ctx, &u.f_ldlit)) return true;
                break;
            case 0x2:
                /* 10011000 ........ ........ ........ */
                /* ../target/arm/tcg/a64.decode:321 */
                disas_a64_extract_ldlit(ctx, &u.f_ldlit, insn);
                u.f_ldlit.sz = 2;
                u.f_ldlit.sign = 1;
                if (trans_LD_lit(ctx, &u.f_ldlit)) return true;
                break;
            case 0x3:
                /* 11011000 ........ ........ ........ */
                /* ../target/arm/tcg/a64.decode:327 */
                disas_a64_extract_disas_a64_Fmt_49(ctx, &u.f_disas_a6425, insn);
                if (trans_NOP(ctx, &u.f_disas_a6425)) return true;
                break;
            }
            break;
        case 0x01000000:
            /* ..011001 ........ ........ ........ */
            switch (insn & 0x00e00c00) {
            case 0x00000000:
                /* ..011001 000..... ....00.. ........ */
                /* ../target/arm/tcg/a64.decode:530 */
                disas_a64_extract_ldapr_stlr_i(ctx, &u.f_ldapr_stlr_i, insn);
                u.f_ldapr_stlr_i.sz = extract32(insn, 30, 2);
                u.f_ldapr_stlr_i.sign = 0;
                u.f_ldapr_stlr_i.ext = 0;
                if (trans_STLR_i(ctx, &u.f_ldapr_stlr_i)) return true;
                break;
            case 0x00000400:
                /* ..011001 000..... ....01.. ........ */
                disas_a64_extract_cpy(ctx, &u.f_cpy, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x0:
                    /* 00011001 000..... ....01.. ........ */
                    /* ../target/arm/tcg/a64.decode:645 */
                    if (trans_CPYFP(ctx, &u.f_cpy)) return true;
                    break;
                }
                break;
            case 0x00200000:
                /* ..011001 001..... ....00.. ........ */
                disas_a64_extract_ldst_tag_mult(ctx, &u.f_ldst_tag, insn);
                switch (insn & 0xc01ff000u) {
                case 0xc0000000u:
                    /* 11011001 00100000 000000.. ........ */
                    /* ../target/arm/tcg/a64.decode:597 */
                    u.f_ldst_tag.p = 0;
                    u.f_ldst_tag.w = 0;
                    if (trans_STZGM(ctx, &u.f_ldst_tag)) return true;
                    break;
                }
                break;
            case 0x00200400:
                /* ..011001 001..... ....01.. ........ */
                disas_a64_extract_ldst_tag(ctx, &u.f_ldst_tag, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x3:
                    /* 11011001 001..... ....01.. ........ */
                    /* ../target/arm/tcg/a64.decode:598 */
                    u.f_ldst_tag.p = 1;
                    u.f_ldst_tag.w = 1;
                    if (trans_STG(ctx, &u.f_ldst_tag)) return true;
                    break;
                }
                break;
            case 0x00200800:
                /* ..011001 001..... ....10.. ........ */
                disas_a64_extract_ldst_tag(ctx, &u.f_ldst_tag, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x3:
                    /* 11011001 001..... ....10.. ........ */
                    /* ../target/arm/tcg/a64.decode:599 */
                    u.f_ldst_tag.p = 0;
                    u.f_ldst_tag.w = 0;
                    if (trans_STG(ctx, &u.f_ldst_tag)) return true;
                    break;
                }
                break;
            case 0x00200c00:
                /* ..011001 001..... ....11.. ........ */
                disas_a64_extract_ldst_tag(ctx, &u.f_ldst_tag, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x3:
                    /* 11011001 001..... ....11.. ........ */
                    /* ../target/arm/tcg/a64.decode:600 */
                    u.f_ldst_tag.p = 0;
                    u.f_ldst_tag.w = 1;
                    if (trans_STG(ctx, &u.f_ldst_tag)) return true;
                    break;
                }
                break;
            case 0x00400000:
                /* ..011001 010..... ....00.. ........ */
                /* ../target/arm/tcg/a64.decode:531 */
                disas_a64_extract_ldapr_stlr_i(ctx, &u.f_ldapr_stlr_i, insn);
                u.f_ldapr_stlr_i.sz = extract32(insn, 30, 2);
                u.f_ldapr_stlr_i.sign = 0;
                u.f_ldapr_stlr_i.ext = 0;
                if (trans_LDAPR_i(ctx, &u.f_ldapr_stlr_i)) return true;
                break;
            case 0x00400400:
                /* ..011001 010..... ....01.. ........ */
                disas_a64_extract_cpy(ctx, &u.f_cpy, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x0:
                    /* 00011001 010..... ....01.. ........ */
                    /* ../target/arm/tcg/a64.decode:646 */
                    if (trans_CPYFM(ctx, &u.f_cpy)) return true;
                    break;
                }
                break;
            case 0x00600000:
                /* ..011001 011..... ....00.. ........ */
                disas_a64_extract_ldst_tag(ctx, &u.f_ldst_tag, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x3:
                    /* 11011001 011..... ....00.. ........ */
                    /* ../target/arm/tcg/a64.decode:602 */
                    u.f_ldst_tag.p = 0;
                    u.f_ldst_tag.w = 0;
                    if (trans_LDG(ctx, &u.f_ldst_tag)) return true;
                    break;
                }
                break;
            case 0x00600400:
                /* ..011001 011..... ....01.. ........ */
                disas_a64_extract_ldst_tag(ctx, &u.f_ldst_tag, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x3:
                    /* 11011001 011..... ....01.. ........ */
                    /* ../target/arm/tcg/a64.decode:603 */
                    u.f_ldst_tag.p = 1;
                    u.f_ldst_tag.w = 1;
                    if (trans_STZG(ctx, &u.f_ldst_tag)) return true;
                    break;
                }
                break;
            case 0x00600800:
                /* ..011001 011..... ....10.. ........ */
                disas_a64_extract_ldst_tag(ctx, &u.f_ldst_tag, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x3:
                    /* 11011001 011..... ....10.. ........ */
                    /* ../target/arm/tcg/a64.decode:604 */
                    u.f_ldst_tag.p = 0;
                    u.f_ldst_tag.w = 0;
                    if (trans_STZG(ctx, &u.f_ldst_tag)) return true;
                    break;
                }
                break;
            case 0x00600c00:
                /* ..011001 011..... ....11.. ........ */
                disas_a64_extract_ldst_tag(ctx, &u.f_ldst_tag, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x3:
                    /* 11011001 011..... ....11.. ........ */
                    /* ../target/arm/tcg/a64.decode:605 */
                    u.f_ldst_tag.p = 0;
                    u.f_ldst_tag.w = 1;
                    if (trans_STZG(ctx, &u.f_ldst_tag)) return true;
                    break;
                }
                break;
            case 0x00800000:
                /* ..011001 100..... ....00.. ........ */
                disas_a64_extract_ldapr_stlr_i(ctx, &u.f_ldapr_stlr_i, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x0:
                    /* 00011001 100..... ....00.. ........ */
                    /* ../target/arm/tcg/a64.decode:532 */
                    u.f_ldapr_stlr_i.sz = 0;
                    u.f_ldapr_stlr_i.sign = 1;
                    u.f_ldapr_stlr_i.ext = 0;
                    if (trans_LDAPR_i(ctx, &u.f_ldapr_stlr_i)) return true;
                    break;
                case 0x1:
                    /* 01011001 100..... ....00.. ........ */
                    /* ../target/arm/tcg/a64.decode:533 */
                    u.f_ldapr_stlr_i.sz = 1;
                    u.f_ldapr_stlr_i.sign = 1;
                    u.f_ldapr_stlr_i.ext = 0;
                    if (trans_LDAPR_i(ctx, &u.f_ldapr_stlr_i)) return true;
                    break;
                case 0x2:
                    /* 10011001 100..... ....00.. ........ */
                    /* ../target/arm/tcg/a64.decode:534 */
                    u.f_ldapr_stlr_i.sz = 2;
                    u.f_ldapr_stlr_i.sign = 1;
                    u.f_ldapr_stlr_i.ext = 0;
                    if (trans_LDAPR_i(ctx, &u.f_ldapr_stlr_i)) return true;
                    break;
                }
                break;
            case 0x00800400:
                /* ..011001 100..... ....01.. ........ */
                disas_a64_extract_cpy(ctx, &u.f_cpy, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x0:
                    /* 00011001 100..... ....01.. ........ */
                    /* ../target/arm/tcg/a64.decode:647 */
                    if (trans_CPYFE(ctx, &u.f_cpy)) return true;
                    break;
                }
                break;
            case 0x00a00000:
                /* ..011001 101..... ....00.. ........ */
                disas_a64_extract_ldst_tag_mult(ctx, &u.f_ldst_tag, insn);
                switch (insn & 0xc01ff000u) {
                case 0xc0000000u:
                    /* 11011001 10100000 000000.. ........ */
                    /* ../target/arm/tcg/a64.decode:607 */
                    u.f_ldst_tag.p = 0;
                    u.f_ldst_tag.w = 0;
                    if (trans_STGM(ctx, &u.f_ldst_tag)) return true;
                    break;
                }
                break;
            case 0x00a00400:
                /* ..011001 101..... ....01.. ........ */
                disas_a64_extract_ldst_tag(ctx, &u.f_ldst_tag, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x3:
                    /* 11011001 101..... ....01.. ........ */
                    /* ../target/arm/tcg/a64.decode:608 */
                    u.f_ldst_tag.p = 1;
                    u.f_ldst_tag.w = 1;
                    if (trans_ST2G(ctx, &u.f_ldst_tag)) return true;
                    break;
                }
                break;
            case 0x00a00800:
                /* ..011001 101..... ....10.. ........ */
                disas_a64_extract_ldst_tag(ctx, &u.f_ldst_tag, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x3:
                    /* 11011001 101..... ....10.. ........ */
                    /* ../target/arm/tcg/a64.decode:609 */
                    u.f_ldst_tag.p = 0;
                    u.f_ldst_tag.w = 0;
                    if (trans_ST2G(ctx, &u.f_ldst_tag)) return true;
                    break;
                }
                break;
            case 0x00a00c00:
                /* ..011001 101..... ....11.. ........ */
                disas_a64_extract_ldst_tag(ctx, &u.f_ldst_tag, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x3:
                    /* 11011001 101..... ....11.. ........ */
                    /* ../target/arm/tcg/a64.decode:610 */
                    u.f_ldst_tag.p = 0;
                    u.f_ldst_tag.w = 1;
                    if (trans_ST2G(ctx, &u.f_ldst_tag)) return true;
                    break;
                }
                break;
            case 0x00c00000:
                /* ..011001 110..... ....00.. ........ */
                disas_a64_extract_ldapr_stlr_i(ctx, &u.f_ldapr_stlr_i, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x0:
                    /* 00011001 110..... ....00.. ........ */
                    /* ../target/arm/tcg/a64.decode:535 */
                    u.f_ldapr_stlr_i.sz = 0;
                    u.f_ldapr_stlr_i.sign = 1;
                    u.f_ldapr_stlr_i.ext = 1;
                    if (trans_LDAPR_i(ctx, &u.f_ldapr_stlr_i)) return true;
                    break;
                case 0x1:
                    /* 01011001 110..... ....00.. ........ */
                    /* ../target/arm/tcg/a64.decode:536 */
                    u.f_ldapr_stlr_i.sz = 1;
                    u.f_ldapr_stlr_i.sign = 1;
                    u.f_ldapr_stlr_i.ext = 1;
                    if (trans_LDAPR_i(ctx, &u.f_ldapr_stlr_i)) return true;
                    break;
                }
                break;
            case 0x00c00400:
                /* ..011001 110..... ....01.. ........ */
                disas_a64_extract_set(ctx, &u.f_set, insn);
                switch (insn & 0xc000c000u) {
                case 0x00000000:
                    /* 00011001 110..... 00..01.. ........ */
                    /* ../target/arm/tcg/a64.decode:629 */
                    if (trans_SETP(ctx, &u.f_set)) return true;
                    break;
                case 0x00004000:
                    /* 00011001 110..... 01..01.. ........ */
                    /* ../target/arm/tcg/a64.decode:630 */
                    if (trans_SETM(ctx, &u.f_set)) return true;
                    break;
                case 0x00008000:
                    /* 00011001 110..... 10..01.. ........ */
                    /* ../target/arm/tcg/a64.decode:631 */
                    if (trans_SETE(ctx, &u.f_set)) return true;
                    break;
                }
                break;
            case 0x00e00000:
                /* ..011001 111..... ....00.. ........ */
                disas_a64_extract_ldst_tag_mult(ctx, &u.f_ldst_tag, insn);
                switch (insn & 0xc01ff000u) {
                case 0xc0000000u:
                    /* 11011001 11100000 000000.. ........ */
                    /* ../target/arm/tcg/a64.decode:612 */
                    u.f_ldst_tag.p = 0;
                    u.f_ldst_tag.w = 0;
                    if (trans_LDGM(ctx, &u.f_ldst_tag)) return true;
                    break;
                }
                break;
            case 0x00e00400:
                /* ..011001 111..... ....01.. ........ */
                disas_a64_extract_ldst_tag(ctx, &u.f_ldst_tag, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x3:
                    /* 11011001 111..... ....01.. ........ */
                    /* ../target/arm/tcg/a64.decode:613 */
                    u.f_ldst_tag.p = 1;
                    u.f_ldst_tag.w = 1;
                    if (trans_STZ2G(ctx, &u.f_ldst_tag)) return true;
                    break;
                }
                break;
            case 0x00e00800:
                /* ..011001 111..... ....10.. ........ */
                disas_a64_extract_ldst_tag(ctx, &u.f_ldst_tag, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x3:
                    /* 11011001 111..... ....10.. ........ */
                    /* ../target/arm/tcg/a64.decode:614 */
                    u.f_ldst_tag.p = 0;
                    u.f_ldst_tag.w = 0;
                    if (trans_STZ2G(ctx, &u.f_ldst_tag)) return true;
                    break;
                }
                break;
            case 0x00e00c00:
                /* ..011001 111..... ....11.. ........ */
                disas_a64_extract_ldst_tag(ctx, &u.f_ldst_tag, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x3:
                    /* 11011001 111..... ....11.. ........ */
                    /* ../target/arm/tcg/a64.decode:615 */
                    u.f_ldst_tag.p = 0;
                    u.f_ldst_tag.w = 1;
                    if (trans_STZ2G(ctx, &u.f_ldst_tag)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x20000000:
            /* ..111000 ........ ........ ........ */
            switch (insn & 0x00200400) {
            case 0x00000000:
                /* ..111000 ..0..... .....0.. ........ */
                switch (insn & 0x00c00800) {
                case 0x00000000:
                    /* ..111000 000..... ....00.. ........ */
                    /* ../target/arm/tcg/a64.decode:397 */
                    disas_a64_extract_ldst_imm(ctx, &u.f_ldst_imm, insn);
                    u.f_ldst_imm.sz = extract32(insn, 30, 2);
                    u.f_ldst_imm.sign = 0;
                    u.f_ldst_imm.ext = 0;
                    if (trans_STR_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                case 0x00000800:
                    /* ..111000 000..... ....10.. ........ */
                    /* ../target/arm/tcg/a64.decode:419 */
                    disas_a64_extract_ldst_imm_user(ctx, &u.f_ldst_imm, insn);
                    u.f_ldst_imm.sz = extract32(insn, 30, 2);
                    u.f_ldst_imm.sign = 0;
                    u.f_ldst_imm.ext = 0;
                    if (trans_STR_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                case 0x00400000:
                    /* ..111000 010..... ....00.. ........ */
                    disas_a64_extract_ldst_imm(ctx, &u.f_ldst_imm, insn);
                    switch ((insn >> 30) & 0x3) {
                    case 0x0:
                        /* 00111000 010..... ....00.. ........ */
                        /* ../target/arm/tcg/a64.decode:398 */
                        u.f_ldst_imm.sz = 0;
                        u.f_ldst_imm.sign = 0;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x1:
                        /* 01111000 010..... ....00.. ........ */
                        /* ../target/arm/tcg/a64.decode:399 */
                        u.f_ldst_imm.sz = 1;
                        u.f_ldst_imm.sign = 0;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x2:
                        /* 10111000 010..... ....00.. ........ */
                        /* ../target/arm/tcg/a64.decode:400 */
                        u.f_ldst_imm.sz = 2;
                        u.f_ldst_imm.sign = 0;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x3:
                        /* 11111000 010..... ....00.. ........ */
                        /* ../target/arm/tcg/a64.decode:401 */
                        u.f_ldst_imm.sz = 3;
                        u.f_ldst_imm.sign = 0;
                        u.f_ldst_imm.ext = 0;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    }
                    break;
                case 0x00400800:
                    /* ..111000 010..... ....10.. ........ */
                    disas_a64_extract_ldst_imm_user(ctx, &u.f_ldst_imm, insn);
                    switch ((insn >> 30) & 0x3) {
                    case 0x0:
                        /* 00111000 010..... ....10.. ........ */
                        /* ../target/arm/tcg/a64.decode:420 */
                        u.f_ldst_imm.sz = 0;
                        u.f_ldst_imm.sign = 0;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x1:
                        /* 01111000 010..... ....10.. ........ */
                        /* ../target/arm/tcg/a64.decode:421 */
                        u.f_ldst_imm.sz = 1;
                        u.f_ldst_imm.sign = 0;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x2:
                        /* 10111000 010..... ....10.. ........ */
                        /* ../target/arm/tcg/a64.decode:422 */
                        u.f_ldst_imm.sz = 2;
                        u.f_ldst_imm.sign = 0;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x3:
                        /* 11111000 010..... ....10.. ........ */
                        /* ../target/arm/tcg/a64.decode:423 */
                        u.f_ldst_imm.sz = 3;
                        u.f_ldst_imm.sign = 0;
                        u.f_ldst_imm.ext = 0;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    }
                    break;
                case 0x00800000:
                    /* ..111000 100..... ....00.. ........ */
                    switch ((insn >> 30) & 0x3) {
                    case 0x0:
                        /* 00111000 100..... ....00.. ........ */
                        /* ../target/arm/tcg/a64.decode:402 */
                        disas_a64_extract_ldst_imm(ctx, &u.f_ldst_imm, insn);
                        u.f_ldst_imm.sz = 0;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 0;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x1:
                        /* 01111000 100..... ....00.. ........ */
                        /* ../target/arm/tcg/a64.decode:403 */
                        disas_a64_extract_ldst_imm(ctx, &u.f_ldst_imm, insn);
                        u.f_ldst_imm.sz = 1;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 0;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x2:
                        /* 10111000 100..... ....00.. ........ */
                        /* ../target/arm/tcg/a64.decode:404 */
                        disas_a64_extract_ldst_imm(ctx, &u.f_ldst_imm, insn);
                        u.f_ldst_imm.sz = 2;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 0;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x3:
                        /* 11111000 100..... ....00.. ........ */
                        /* ../target/arm/tcg/a64.decode:442 */
                        disas_a64_extract_disas_a64_Fmt_49(ctx, &u.f_disas_a6425, insn);
                        if (trans_NOP(ctx, &u.f_disas_a6425)) return true;
                        break;
                    }
                    break;
                case 0x00800800:
                    /* ..111000 100..... ....10.. ........ */
                    disas_a64_extract_ldst_imm_user(ctx, &u.f_ldst_imm, insn);
                    switch ((insn >> 30) & 0x3) {
                    case 0x0:
                        /* 00111000 100..... ....10.. ........ */
                        /* ../target/arm/tcg/a64.decode:424 */
                        u.f_ldst_imm.sz = 0;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 0;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x1:
                        /* 01111000 100..... ....10.. ........ */
                        /* ../target/arm/tcg/a64.decode:425 */
                        u.f_ldst_imm.sz = 1;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 0;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x2:
                        /* 10111000 100..... ....10.. ........ */
                        /* ../target/arm/tcg/a64.decode:426 */
                        u.f_ldst_imm.sz = 2;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 0;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    }
                    break;
                case 0x00c00000:
                    /* ..111000 110..... ....00.. ........ */
                    disas_a64_extract_ldst_imm(ctx, &u.f_ldst_imm, insn);
                    switch ((insn >> 30) & 0x3) {
                    case 0x0:
                        /* 00111000 110..... ....00.. ........ */
                        /* ../target/arm/tcg/a64.decode:405 */
                        u.f_ldst_imm.sz = 0;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x1:
                        /* 01111000 110..... ....00.. ........ */
                        /* ../target/arm/tcg/a64.decode:406 */
                        u.f_ldst_imm.sz = 1;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    }
                    break;
                case 0x00c00800:
                    /* ..111000 110..... ....10.. ........ */
                    disas_a64_extract_ldst_imm_user(ctx, &u.f_ldst_imm, insn);
                    switch ((insn >> 30) & 0x3) {
                    case 0x0:
                        /* 00111000 110..... ....10.. ........ */
                        /* ../target/arm/tcg/a64.decode:427 */
                        u.f_ldst_imm.sz = 0;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x1:
                        /* 01111000 110..... ....10.. ........ */
                        /* ../target/arm/tcg/a64.decode:428 */
                        u.f_ldst_imm.sz = 1;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x00000400:
                /* ..111000 ..0..... .....1.. ........ */
                switch (insn & 0x00c00800) {
                case 0x00000000:
                    /* ..111000 000..... ....01.. ........ */
                    /* ../target/arm/tcg/a64.decode:408 */
                    disas_a64_extract_ldst_imm_post(ctx, &u.f_ldst_imm, insn);
                    u.f_ldst_imm.sz = extract32(insn, 30, 2);
                    u.f_ldst_imm.sign = 0;
                    u.f_ldst_imm.ext = 0;
                    if (trans_STR_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                case 0x00000800:
                    /* ..111000 000..... ....11.. ........ */
                    /* ../target/arm/tcg/a64.decode:430 */
                    disas_a64_extract_ldst_imm_pre(ctx, &u.f_ldst_imm, insn);
                    u.f_ldst_imm.sz = extract32(insn, 30, 2);
                    u.f_ldst_imm.sign = 0;
                    u.f_ldst_imm.ext = 0;
                    if (trans_STR_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                case 0x00400000:
                    /* ..111000 010..... ....01.. ........ */
                    disas_a64_extract_ldst_imm_post(ctx, &u.f_ldst_imm, insn);
                    switch ((insn >> 30) & 0x3) {
                    case 0x0:
                        /* 00111000 010..... ....01.. ........ */
                        /* ../target/arm/tcg/a64.decode:409 */
                        u.f_ldst_imm.sz = 0;
                        u.f_ldst_imm.sign = 0;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x1:
                        /* 01111000 010..... ....01.. ........ */
                        /* ../target/arm/tcg/a64.decode:410 */
                        u.f_ldst_imm.sz = 1;
                        u.f_ldst_imm.sign = 0;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x2:
                        /* 10111000 010..... ....01.. ........ */
                        /* ../target/arm/tcg/a64.decode:411 */
                        u.f_ldst_imm.sz = 2;
                        u.f_ldst_imm.sign = 0;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x3:
                        /* 11111000 010..... ....01.. ........ */
                        /* ../target/arm/tcg/a64.decode:412 */
                        u.f_ldst_imm.sz = 3;
                        u.f_ldst_imm.sign = 0;
                        u.f_ldst_imm.ext = 0;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    }
                    break;
                case 0x00400800:
                    /* ..111000 010..... ....11.. ........ */
                    disas_a64_extract_ldst_imm_pre(ctx, &u.f_ldst_imm, insn);
                    switch ((insn >> 30) & 0x3) {
                    case 0x0:
                        /* 00111000 010..... ....11.. ........ */
                        /* ../target/arm/tcg/a64.decode:431 */
                        u.f_ldst_imm.sz = 0;
                        u.f_ldst_imm.sign = 0;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x1:
                        /* 01111000 010..... ....11.. ........ */
                        /* ../target/arm/tcg/a64.decode:432 */
                        u.f_ldst_imm.sz = 1;
                        u.f_ldst_imm.sign = 0;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x2:
                        /* 10111000 010..... ....11.. ........ */
                        /* ../target/arm/tcg/a64.decode:433 */
                        u.f_ldst_imm.sz = 2;
                        u.f_ldst_imm.sign = 0;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x3:
                        /* 11111000 010..... ....11.. ........ */
                        /* ../target/arm/tcg/a64.decode:434 */
                        u.f_ldst_imm.sz = 3;
                        u.f_ldst_imm.sign = 0;
                        u.f_ldst_imm.ext = 0;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    }
                    break;
                case 0x00800000:
                    /* ..111000 100..... ....01.. ........ */
                    disas_a64_extract_ldst_imm_post(ctx, &u.f_ldst_imm, insn);
                    switch ((insn >> 30) & 0x3) {
                    case 0x0:
                        /* 00111000 100..... ....01.. ........ */
                        /* ../target/arm/tcg/a64.decode:413 */
                        u.f_ldst_imm.sz = 0;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 0;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x1:
                        /* 01111000 100..... ....01.. ........ */
                        /* ../target/arm/tcg/a64.decode:414 */
                        u.f_ldst_imm.sz = 1;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 0;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x2:
                        /* 10111000 100..... ....01.. ........ */
                        /* ../target/arm/tcg/a64.decode:415 */
                        u.f_ldst_imm.sz = 2;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 0;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    }
                    break;
                case 0x00800800:
                    /* ..111000 100..... ....11.. ........ */
                    disas_a64_extract_ldst_imm_pre(ctx, &u.f_ldst_imm, insn);
                    switch ((insn >> 30) & 0x3) {
                    case 0x0:
                        /* 00111000 100..... ....11.. ........ */
                        /* ../target/arm/tcg/a64.decode:435 */
                        u.f_ldst_imm.sz = 0;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 0;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x1:
                        /* 01111000 100..... ....11.. ........ */
                        /* ../target/arm/tcg/a64.decode:436 */
                        u.f_ldst_imm.sz = 1;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 0;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x2:
                        /* 10111000 100..... ....11.. ........ */
                        /* ../target/arm/tcg/a64.decode:437 */
                        u.f_ldst_imm.sz = 2;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 0;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    }
                    break;
                case 0x00c00000:
                    /* ..111000 110..... ....01.. ........ */
                    disas_a64_extract_ldst_imm_post(ctx, &u.f_ldst_imm, insn);
                    switch ((insn >> 30) & 0x3) {
                    case 0x0:
                        /* 00111000 110..... ....01.. ........ */
                        /* ../target/arm/tcg/a64.decode:416 */
                        u.f_ldst_imm.sz = 0;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x1:
                        /* 01111000 110..... ....01.. ........ */
                        /* ../target/arm/tcg/a64.decode:417 */
                        u.f_ldst_imm.sz = 1;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    }
                    break;
                case 0x00c00800:
                    /* ..111000 110..... ....11.. ........ */
                    disas_a64_extract_ldst_imm_pre(ctx, &u.f_ldst_imm, insn);
                    switch ((insn >> 30) & 0x3) {
                    case 0x0:
                        /* 00111000 110..... ....11.. ........ */
                        /* ../target/arm/tcg/a64.decode:438 */
                        u.f_ldst_imm.sz = 0;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    case 0x1:
                        /* 01111000 110..... ....11.. ........ */
                        /* ../target/arm/tcg/a64.decode:439 */
                        u.f_ldst_imm.sz = 1;
                        u.f_ldst_imm.sign = 1;
                        u.f_ldst_imm.ext = 1;
                        if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x00200000:
                /* ..111000 ..1..... .....0.. ........ */
                switch ((insn >> 11) & 0x1) {
                case 0x0:
                    /* ..111000 ..1..... ....00.. ........ */
                    switch ((insn >> 12) & 0xf) {
                    case 0x0:
                        /* ..111000 ..1..... 000000.. ........ */
                        /* ../target/arm/tcg/a64.decode:509 */
                        disas_a64_extract_atomic(ctx, &u.f_atomic, insn);
                        if (trans_LDADD(ctx, &u.f_atomic)) return true;
                        break;
                    case 0x1:
                        /* ..111000 ..1..... 000100.. ........ */
                        /* ../target/arm/tcg/a64.decode:510 */
                        disas_a64_extract_atomic(ctx, &u.f_atomic, insn);
                        if (trans_LDCLR(ctx, &u.f_atomic)) return true;
                        break;
                    case 0x2:
                        /* ..111000 ..1..... 001000.. ........ */
                        /* ../target/arm/tcg/a64.decode:511 */
                        disas_a64_extract_atomic(ctx, &u.f_atomic, insn);
                        if (trans_LDEOR(ctx, &u.f_atomic)) return true;
                        break;
                    case 0x3:
                        /* ..111000 ..1..... 001100.. ........ */
                        /* ../target/arm/tcg/a64.decode:512 */
                        disas_a64_extract_atomic(ctx, &u.f_atomic, insn);
                        if (trans_LDSET(ctx, &u.f_atomic)) return true;
                        break;
                    case 0x4:
                        /* ..111000 ..1..... 010000.. ........ */
                        /* ../target/arm/tcg/a64.decode:513 */
                        disas_a64_extract_atomic(ctx, &u.f_atomic, insn);
                        if (trans_LDSMAX(ctx, &u.f_atomic)) return true;
                        break;
                    case 0x5:
                        /* ..111000 ..1..... 010100.. ........ */
                        /* ../target/arm/tcg/a64.decode:514 */
                        disas_a64_extract_atomic(ctx, &u.f_atomic, insn);
                        if (trans_LDSMIN(ctx, &u.f_atomic)) return true;
                        break;
                    case 0x6:
                        /* ..111000 ..1..... 011000.. ........ */
                        /* ../target/arm/tcg/a64.decode:515 */
                        disas_a64_extract_atomic(ctx, &u.f_atomic, insn);
                        if (trans_LDUMAX(ctx, &u.f_atomic)) return true;
                        break;
                    case 0x7:
                        /* ..111000 ..1..... 011100.. ........ */
                        /* ../target/arm/tcg/a64.decode:516 */
                        disas_a64_extract_atomic(ctx, &u.f_atomic, insn);
                        if (trans_LDUMIN(ctx, &u.f_atomic)) return true;
                        break;
                    case 0x8:
                        /* ..111000 ..1..... 100000.. ........ */
                        /* ../target/arm/tcg/a64.decode:517 */
                        disas_a64_extract_atomic(ctx, &u.f_atomic, insn);
                        if (trans_SWP(ctx, &u.f_atomic)) return true;
                        break;
                    case 0xc:
                        /* ..111000 ..1..... 110000.. ........ */
                        disas_a64_extract_disas_a64_Fmt_73(ctx, &u.f_disas_a6438, insn);
                        switch (insn & 0x00df0000) {
                        case 0x009f0000:
                            /* ..111000 10111111 110000.. ........ */
                            /* ../target/arm/tcg/a64.decode:519 */
                            if (trans_LDAPR(ctx, &u.f_disas_a6438)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                case 0x1:
                    /* ..111000 ..1..... ....10.. ........ */
                    switch ((insn >> 22) & 0x3) {
                    case 0x0:
                        /* ..111000 001..... ....10.. ........ */
                        /* ../target/arm/tcg/a64.decode:487 */
                        disas_a64_extract_ldst(ctx, &u.f_ldst, insn);
                        u.f_ldst.sz = extract32(insn, 30, 2);
                        u.f_ldst.sign = 0;
                        u.f_ldst.ext = 0;
                        if (trans_STR(ctx, &u.f_ldst)) return true;
                        break;
                    case 0x1:
                        /* ..111000 011..... ....10.. ........ */
                        disas_a64_extract_ldst(ctx, &u.f_ldst, insn);
                        switch ((insn >> 30) & 0x3) {
                        case 0x0:
                            /* 00111000 011..... ....10.. ........ */
                            /* ../target/arm/tcg/a64.decode:488 */
                            u.f_ldst.sz = 0;
                            u.f_ldst.sign = 0;
                            u.f_ldst.ext = 1;
                            if (trans_LDR(ctx, &u.f_ldst)) return true;
                            break;
                        case 0x1:
                            /* 01111000 011..... ....10.. ........ */
                            /* ../target/arm/tcg/a64.decode:489 */
                            u.f_ldst.sz = 1;
                            u.f_ldst.sign = 0;
                            u.f_ldst.ext = 1;
                            if (trans_LDR(ctx, &u.f_ldst)) return true;
                            break;
                        case 0x2:
                            /* 10111000 011..... ....10.. ........ */
                            /* ../target/arm/tcg/a64.decode:490 */
                            u.f_ldst.sz = 2;
                            u.f_ldst.sign = 0;
                            u.f_ldst.ext = 1;
                            if (trans_LDR(ctx, &u.f_ldst)) return true;
                            break;
                        case 0x3:
                            /* 11111000 011..... ....10.. ........ */
                            /* ../target/arm/tcg/a64.decode:491 */
                            u.f_ldst.sz = 3;
                            u.f_ldst.sign = 0;
                            u.f_ldst.ext = 0;
                            if (trans_LDR(ctx, &u.f_ldst)) return true;
                            break;
                        }
                        break;
                    case 0x2:
                        /* ..111000 101..... ....10.. ........ */
                        switch ((insn >> 30) & 0x3) {
                        case 0x0:
                            /* 00111000 101..... ....10.. ........ */
                            /* ../target/arm/tcg/a64.decode:492 */
                            disas_a64_extract_ldst(ctx, &u.f_ldst, insn);
                            u.f_ldst.sz = 0;
                            u.f_ldst.sign = 1;
                            u.f_ldst.ext = 0;
                            if (trans_LDR(ctx, &u.f_ldst)) return true;
                            break;
                        case 0x1:
                            /* 01111000 101..... ....10.. ........ */
                            /* ../target/arm/tcg/a64.decode:493 */
                            disas_a64_extract_ldst(ctx, &u.f_ldst, insn);
                            u.f_ldst.sz = 1;
                            u.f_ldst.sign = 1;
                            u.f_ldst.ext = 0;
                            if (trans_LDR(ctx, &u.f_ldst)) return true;
                            break;
                        case 0x2:
                            /* 10111000 101..... ....10.. ........ */
                            /* ../target/arm/tcg/a64.decode:494 */
                            disas_a64_extract_ldst(ctx, &u.f_ldst, insn);
                            u.f_ldst.sz = 2;
                            u.f_ldst.sign = 1;
                            u.f_ldst.ext = 0;
                            if (trans_LDR(ctx, &u.f_ldst)) return true;
                            break;
                        case 0x3:
                            /* 11111000 101..... ....10.. ........ */
                            disas_a64_extract_disas_a64_Fmt_49(ctx, &u.f_disas_a6425, insn);
                            switch ((insn >> 14) & 0x1) {
                            case 0x1:
                                /* 11111000 101..... .1..10.. ........ */
                                /* ../target/arm/tcg/a64.decode:499 */
                                if (trans_NOP(ctx, &u.f_disas_a6425)) return true;
                                break;
                            }
                            break;
                        }
                        break;
                    case 0x3:
                        /* ..111000 111..... ....10.. ........ */
                        disas_a64_extract_ldst(ctx, &u.f_ldst, insn);
                        switch ((insn >> 30) & 0x3) {
                        case 0x0:
                            /* 00111000 111..... ....10.. ........ */
                            /* ../target/arm/tcg/a64.decode:495 */
                            u.f_ldst.sz = 0;
                            u.f_ldst.sign = 1;
                            u.f_ldst.ext = 1;
                            if (trans_LDR(ctx, &u.f_ldst)) return true;
                            break;
                        case 0x1:
                            /* 01111000 111..... ....10.. ........ */
                            /* ../target/arm/tcg/a64.decode:496 */
                            u.f_ldst.sz = 1;
                            u.f_ldst.sign = 1;
                            u.f_ldst.ext = 1;
                            if (trans_LDR(ctx, &u.f_ldst)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                }
                break;
            case 0x00200400:
                /* ..111000 ..1..... .....1.. ........ */
                disas_a64_extract_disas_a64_Fmt_74(ctx, &u.f_disas_a6439, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x3:
                    /* 11111000 ..1..... .....1.. ........ */
                    /* ../target/arm/tcg/a64.decode:526 */
                    if (trans_LDRA(ctx, &u.f_disas_a6439)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x21000000:
            /* ..111001 ........ ........ ........ */
            switch ((insn >> 22) & 0x3) {
            case 0x0:
                /* ..111001 00...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:465 */
                u.f_ldst_imm.sz = extract32(insn, 30, 2);
                u.f_ldst_imm.sign = 0;
                u.f_ldst_imm.ext = 0;
                disas_a64_extract_ldst_uimm(ctx, &u.f_ldst_imm, insn);
                if (trans_STR_i(ctx, &u.f_ldst_imm)) return true;
                break;
            case 0x1:
                /* ..111001 01...... ........ ........ */
                switch ((insn >> 30) & 0x3) {
                case 0x0:
                    /* 00111001 01...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:466 */
                    u.f_ldst_imm.sz = 0;
                    u.f_ldst_imm.sign = 0;
                    u.f_ldst_imm.ext = 1;
                    disas_a64_extract_ldst_uimm(ctx, &u.f_ldst_imm, insn);
                    if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                case 0x1:
                    /* 01111001 01...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:467 */
                    u.f_ldst_imm.sz = 1;
                    u.f_ldst_imm.sign = 0;
                    u.f_ldst_imm.ext = 1;
                    disas_a64_extract_ldst_uimm(ctx, &u.f_ldst_imm, insn);
                    if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                case 0x2:
                    /* 10111001 01...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:468 */
                    u.f_ldst_imm.sz = 2;
                    u.f_ldst_imm.sign = 0;
                    u.f_ldst_imm.ext = 1;
                    disas_a64_extract_ldst_uimm(ctx, &u.f_ldst_imm, insn);
                    if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                case 0x3:
                    /* 11111001 01...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:469 */
                    u.f_ldst_imm.sz = 3;
                    u.f_ldst_imm.sign = 0;
                    u.f_ldst_imm.ext = 0;
                    disas_a64_extract_ldst_uimm(ctx, &u.f_ldst_imm, insn);
                    if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                }
                break;
            case 0x2:
                /* ..111001 10...... ........ ........ */
                switch ((insn >> 30) & 0x3) {
                case 0x0:
                    /* 00111001 10...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:470 */
                    u.f_ldst_imm.sz = 0;
                    u.f_ldst_imm.sign = 1;
                    u.f_ldst_imm.ext = 0;
                    disas_a64_extract_ldst_uimm(ctx, &u.f_ldst_imm, insn);
                    if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                case 0x1:
                    /* 01111001 10...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:471 */
                    u.f_ldst_imm.sz = 1;
                    u.f_ldst_imm.sign = 1;
                    u.f_ldst_imm.ext = 0;
                    disas_a64_extract_ldst_uimm(ctx, &u.f_ldst_imm, insn);
                    if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                case 0x2:
                    /* 10111001 10...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:472 */
                    u.f_ldst_imm.sz = 2;
                    u.f_ldst_imm.sign = 1;
                    u.f_ldst_imm.ext = 0;
                    disas_a64_extract_ldst_uimm(ctx, &u.f_ldst_imm, insn);
                    if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                case 0x3:
                    /* 11111001 10...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:477 */
                    disas_a64_extract_disas_a64_Fmt_49(ctx, &u.f_disas_a6425, insn);
                    if (trans_NOP(ctx, &u.f_disas_a6425)) return true;
                    break;
                }
                break;
            case 0x3:
                /* ..111001 11...... ........ ........ */
                switch ((insn >> 30) & 0x3) {
                case 0x0:
                    /* 00111001 11...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:473 */
                    u.f_ldst_imm.sz = 0;
                    u.f_ldst_imm.sign = 1;
                    u.f_ldst_imm.ext = 1;
                    disas_a64_extract_ldst_uimm(ctx, &u.f_ldst_imm, insn);
                    if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                case 0x1:
                    /* 01111001 11...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:474 */
                    u.f_ldst_imm.sz = 1;
                    u.f_ldst_imm.sign = 1;
                    u.f_ldst_imm.ext = 1;
                    disas_a64_extract_ldst_uimm(ctx, &u.f_ldst_imm, insn);
                    if (trans_LDR_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                }
                break;
            }
            break;
        }
        break;
    case 0x7:
        /* ...111.. ........ ........ ........ */
        switch (insn & 0x23000000) {
        case 0x00000000:
            /* ..011100 ........ ........ ........ */
            disas_a64_extract_ldlit(ctx, &u.f_ldlit, insn);
            switch ((insn >> 30) & 0x3) {
            case 0x0:
                /* 00011100 ........ ........ ........ */
                /* ../target/arm/tcg/a64.decode:322 */
                u.f_ldlit.sz = 2;
                u.f_ldlit.sign = 0;
                if (trans_LD_lit_v(ctx, &u.f_ldlit)) return true;
                break;
            case 0x1:
                /* 01011100 ........ ........ ........ */
                /* ../target/arm/tcg/a64.decode:323 */
                u.f_ldlit.sz = 3;
                u.f_ldlit.sign = 0;
                if (trans_LD_lit_v(ctx, &u.f_ldlit)) return true;
                break;
            case 0x2:
                /* 10011100 ........ ........ ........ */
                /* ../target/arm/tcg/a64.decode:324 */
                u.f_ldlit.sz = 4;
                u.f_ldlit.sign = 0;
                if (trans_LD_lit_v(ctx, &u.f_ldlit)) return true;
                break;
            }
            break;
        case 0x01000000:
            /* ..011101 ........ ........ ........ */
            switch (insn & 0xc0e00c00u) {
            case 0x00000400:
                /* 00011101 000..... ....01.. ........ */
                /* ../target/arm/tcg/a64.decode:648 */
                disas_a64_extract_cpy(ctx, &u.f_cpy, insn);
                if (trans_CPYP(ctx, &u.f_cpy)) return true;
                break;
            case 0x00400400:
                /* 00011101 010..... ....01.. ........ */
                /* ../target/arm/tcg/a64.decode:649 */
                disas_a64_extract_cpy(ctx, &u.f_cpy, insn);
                if (trans_CPYM(ctx, &u.f_cpy)) return true;
                break;
            case 0x00800400:
                /* 00011101 100..... ....01.. ........ */
                /* ../target/arm/tcg/a64.decode:650 */
                disas_a64_extract_cpy(ctx, &u.f_cpy, insn);
                if (trans_CPYE(ctx, &u.f_cpy)) return true;
                break;
            case 0x00c00400:
                /* 00011101 110..... ....01.. ........ */
                disas_a64_extract_set(ctx, &u.f_set, insn);
                switch ((insn >> 14) & 0x3) {
                case 0x0:
                    /* 00011101 110..... 00..01.. ........ */
                    /* ../target/arm/tcg/a64.decode:634 */
                    if (trans_SETGP(ctx, &u.f_set)) return true;
                    break;
                case 0x1:
                    /* 00011101 110..... 01..01.. ........ */
                    /* ../target/arm/tcg/a64.decode:635 */
                    if (trans_SETGM(ctx, &u.f_set)) return true;
                    break;
                case 0x2:
                    /* 00011101 110..... 10..01.. ........ */
                    /* ../target/arm/tcg/a64.decode:636 */
                    if (trans_SETGE(ctx, &u.f_set)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x02000000:
            /* ..011110 ........ ........ ........ */
            switch (insn & 0xc0200c00u) {
            case 0x00200000:
                /* 00011110 ..1..... ....00.. ........ */
                disas_a64_extract_disas_a64_Fmt_106(ctx, &u.f_disas_a6455, insn);
                switch (insn & 0x000013e0) {
                case 0x00001000:
                    /* 00011110 ..1..... ...10000 000..... */
                    /* ../target/arm/tcg/a64.decode:1188 */
                    if (trans_FMOVI_s(ctx, &u.f_disas_a6455)) return true;
                    break;
                }
                break;
            case 0x00200800:
                /* 00011110 ..1..... ....10.. ........ */
                disas_a64_extract_rrr_hsd(ctx, &u.f_rrr_e, insn);
                switch ((insn >> 12) & 0xf) {
                case 0x0:
                    /* 00011110 ..1..... 000010.. ........ */
                    /* ../target/arm/tcg/a64.decode:728 */
                    if (trans_FMUL_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x1:
                    /* 00011110 ..1..... 000110.. ........ */
                    /* ../target/arm/tcg/a64.decode:727 */
                    if (trans_FDIV_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x2:
                    /* 00011110 ..1..... 001010.. ........ */
                    /* ../target/arm/tcg/a64.decode:725 */
                    if (trans_FADD_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x3:
                    /* 00011110 ..1..... 001110.. ........ */
                    /* ../target/arm/tcg/a64.decode:726 */
                    if (trans_FSUB_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x4:
                    /* 00011110 ..1..... 010010.. ........ */
                    /* ../target/arm/tcg/a64.decode:731 */
                    if (trans_FMAX_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x5:
                    /* 00011110 ..1..... 010110.. ........ */
                    /* ../target/arm/tcg/a64.decode:732 */
                    if (trans_FMIN_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x6:
                    /* 00011110 ..1..... 011010.. ........ */
                    /* ../target/arm/tcg/a64.decode:733 */
                    if (trans_FMAXNM_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x7:
                    /* 00011110 ..1..... 011110.. ........ */
                    /* ../target/arm/tcg/a64.decode:734 */
                    if (trans_FMINNM_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x8:
                    /* 00011110 ..1..... 100010.. ........ */
                    /* ../target/arm/tcg/a64.decode:729 */
                    if (trans_FNMUL_s(ctx, &u.f_rrr_e)) return true;
                    break;
                }
                break;
            case 0x00200c00:
                /* 00011110 ..1..... ....11.. ........ */
                /* ../target/arm/tcg/a64.decode:1135 */
                disas_a64_extract_disas_a64_Fmt_101(ctx, &u.f_disas_a6453, insn);
                if (trans_FCSEL(ctx, &u.f_disas_a6453)) return true;
                break;
            case 0x40000000:
                /* 01011110 ..0..... ....00.. ........ */
                disas_a64_extract_rrr_q1e0(ctx, &u.f_qrrr_e, insn);
                switch (insn & 0x00c0f000) {
                case 0x00000000:
                    /* 01011110 000..... 000000.. ........ */
                    /* ../target/arm/tcg/a64.decode:661 */
                    if (trans_SHA1C(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00001000:
                    /* 01011110 000..... 000100.. ........ */
                    /* ../target/arm/tcg/a64.decode:662 */
                    if (trans_SHA1P(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00002000:
                    /* 01011110 000..... 001000.. ........ */
                    /* ../target/arm/tcg/a64.decode:663 */
                    if (trans_SHA1M(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00003000:
                    /* 01011110 000..... 001100.. ........ */
                    /* ../target/arm/tcg/a64.decode:664 */
                    if (trans_SHA1SU0(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00004000:
                    /* 01011110 000..... 010000.. ........ */
                    /* ../target/arm/tcg/a64.decode:665 */
                    if (trans_SHA256H(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00005000:
                    /* 01011110 000..... 010100.. ........ */
                    /* ../target/arm/tcg/a64.decode:666 */
                    if (trans_SHA256H2(ctx, &u.f_qrrr_e)) return true;
                    break;
                case 0x00006000:
                    /* 01011110 000..... 011000.. ........ */
                    /* ../target/arm/tcg/a64.decode:667 */
                    if (trans_SHA256SU1(ctx, &u.f_qrrr_e)) return true;
                    break;
                }
                break;
            case 0x40000400:
                /* 01011110 ..0..... ....01.. ........ */
                switch (insn & 0x00c0f000) {
                case 0x00000000:
                    /* 01011110 000..... 000001.. ........ */
                    /* ../target/arm/tcg/a64.decode:712 */
                    disas_a64_extract_disas_a64_Fmt_88(ctx, &u.f_disas_a6448, insn);
                    if (trans_DUP_element_s(ctx, &u.f_disas_a6448)) return true;
                    break;
                case 0x00402000:
                    /* 01011110 010..... 001001.. ........ */
                    /* ../target/arm/tcg/a64.decode:739 */
                    disas_a64_extract_rrr_h(ctx, &u.f_rrr_e, insn);
                    if (trans_FCMEQ_s(ctx, &u.f_rrr_e)) return true;
                    break;
                }
                break;
            case 0x40000c00:
                /* 01011110 ..0..... ....11.. ........ */
                disas_a64_extract_rrr_h(ctx, &u.f_rrr_e, insn);
                switch (insn & 0x00c0f000) {
                case 0x00401000:
                    /* 01011110 010..... 000111.. ........ */
                    /* ../target/arm/tcg/a64.decode:736 */
                    if (trans_FMULX_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x00403000:
                    /* 01011110 010..... 001111.. ........ */
                    /* ../target/arm/tcg/a64.decode:757 */
                    if (trans_FRECPS_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x00c03000:
                    /* 01011110 110..... 001111.. ........ */
                    /* ../target/arm/tcg/a64.decode:760 */
                    if (trans_FRSQRTS_s(ctx, &u.f_rrr_e)) return true;
                    break;
                }
                break;
            case 0x40200000:
                /* 01011110 ..1..... ....00.. ........ */
                switch (insn & 0x00c0f000) {
                case 0x00409000:
                    /* 01011110 011..... 100100.. ........ */
                    /* ../target/arm/tcg/a64.decode:797 */
                    disas_a64_extract_disas_a64_Fmt_93(ctx, &u.f_rrx_e, insn);
                    if (trans_SQDMLAL_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x0040b000:
                    /* 01011110 011..... 101100.. ........ */
                    /* ../target/arm/tcg/a64.decode:799 */
                    disas_a64_extract_disas_a64_Fmt_95(ctx, &u.f_rrx_e, insn);
                    if (trans_SQDMLSL_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x0040d000:
                    /* 01011110 011..... 110100.. ........ */
                    /* ../target/arm/tcg/a64.decode:795 */
                    disas_a64_extract_disas_a64_Fmt_91(ctx, &u.f_rrx_e, insn);
                    if (trans_SQDMULL_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x00809000:
                    /* 01011110 101..... 100100.. ........ */
                    /* ../target/arm/tcg/a64.decode:798 */
                    disas_a64_extract_disas_a64_Fmt_94(ctx, &u.f_rrx_e, insn);
                    if (trans_SQDMLAL_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x0080b000:
                    /* 01011110 101..... 101100.. ........ */
                    /* ../target/arm/tcg/a64.decode:800 */
                    disas_a64_extract_disas_a64_Fmt_96(ctx, &u.f_rrx_e, insn);
                    if (trans_SQDMLSL_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x0080d000:
                    /* 01011110 101..... 110100.. ........ */
                    /* ../target/arm/tcg/a64.decode:796 */
                    disas_a64_extract_disas_a64_Fmt_92(ctx, &u.f_rrx_e, insn);
                    if (trans_SQDMULL_si(ctx, &u.f_rrx_e)) return true;
                    break;
                }
                break;
            case 0x40200400:
                /* 01011110 ..1..... ....01.. ........ */
                switch ((insn >> 12) & 0xf) {
                case 0x3:
                    /* 01011110 ..1..... 001101.. ........ */
                    disas_a64_extract_rrr_d(ctx, &u.f_rrr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x3:
                        /* 01011110 111..... 001101.. ........ */
                        /* ../target/arm/tcg/a64.decode:782 */
                        if (trans_CMGT_s(ctx, &u.f_rrr_e)) return true;
                        break;
                    }
                    break;
                case 0x4:
                    /* 01011110 ..1..... 010001.. ........ */
                    disas_a64_extract_rrr_d(ctx, &u.f_rrr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x3:
                        /* 01011110 111..... 010001.. ........ */
                        /* ../target/arm/tcg/a64.decode:771 */
                        if (trans_SSHL_s(ctx, &u.f_rrr_e)) return true;
                        break;
                    }
                    break;
                case 0x5:
                    /* 01011110 ..1..... 010101.. ........ */
                    disas_a64_extract_rrr_d(ctx, &u.f_rrr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x3:
                        /* 01011110 111..... 010101.. ........ */
                        /* ../target/arm/tcg/a64.decode:773 */
                        if (trans_SRSHL_s(ctx, &u.f_rrr_e)) return true;
                        break;
                    }
                    break;
                case 0x8:
                    /* 01011110 ..1..... 100001.. ........ */
                    disas_a64_extract_rrr_d(ctx, &u.f_rrr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x3:
                        /* 01011110 111..... 100001.. ........ */
                        /* ../target/arm/tcg/a64.decode:780 */
                        if (trans_ADD_s(ctx, &u.f_rrr_e)) return true;
                        break;
                    }
                    break;
                case 0xb:
                    /* 01011110 ..1..... 101101.. ........ */
                    /* ../target/arm/tcg/a64.decode:789 */
                    disas_a64_extract_rrr_e(ctx, &u.f_rrr_e, insn);
                    if (trans_SQDMULH_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0xe:
                    /* 01011110 ..1..... 111001.. ........ */
                    disas_a64_extract_rrr_sd(ctx, &u.f_rrr_e, insn);
                    switch ((insn >> 23) & 0x1) {
                    case 0x0:
                        /* 01011110 0.1..... 111001.. ........ */
                        /* ../target/arm/tcg/a64.decode:740 */
                        if (trans_FCMEQ_s(ctx, &u.f_rrr_e)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x40200800:
                /* 01011110 ..1..... ....10.. ........ */
                switch ((insn >> 12) & 0x1ff) {
                case 0x3:
                    /* 01011110 ..100000 001110.. ........ */
                    /* ../target/arm/tcg/a64.decode:768 */
                    disas_a64_extract_r2r_e(ctx, &u.f_rrr_e, insn);
                    if (trans_SUQADD_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x80:
                    /* 01011110 ..101000 000010.. ........ */
                    disas_a64_extract_rr_q1e0(ctx, &u.f_qrr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x0:
                        /* 01011110 00101000 000010.. ........ */
                        /* ../target/arm/tcg/a64.decode:671 */
                        if (trans_SHA1H(ctx, &u.f_qrr_e)) return true;
                        break;
                    }
                    break;
                case 0x81:
                    /* 01011110 ..101000 000110.. ........ */
                    disas_a64_extract_rr_q1e0(ctx, &u.f_qrr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x0:
                        /* 01011110 00101000 000110.. ........ */
                        /* ../target/arm/tcg/a64.decode:672 */
                        if (trans_SHA1SU1(ctx, &u.f_qrr_e)) return true;
                        break;
                    }
                    break;
                case 0x82:
                    /* 01011110 ..101000 001010.. ........ */
                    disas_a64_extract_rr_q1e0(ctx, &u.f_qrr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x0:
                        /* 01011110 00101000 001010.. ........ */
                        /* ../target/arm/tcg/a64.decode:673 */
                        if (trans_SHA256SU0(ctx, &u.f_qrr_e)) return true;
                        break;
                    }
                    break;
                case 0x10c:
                    /* 01011110 ..110000 110010.. ........ */
                    disas_a64_extract_rr_h(ctx, &u.f_rr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x0:
                        /* 01011110 00110000 110010.. ........ */
                        /* ../target/arm/tcg/a64.decode:813 */
                        if (trans_FMAXNMP_s(ctx, &u.f_rr_e)) return true;
                        break;
                    case 0x2:
                        /* 01011110 10110000 110010.. ........ */
                        /* ../target/arm/tcg/a64.decode:816 */
                        if (trans_FMINNMP_s(ctx, &u.f_rr_e)) return true;
                        break;
                    }
                    break;
                case 0x10d:
                    /* 01011110 ..110000 110110.. ........ */
                    disas_a64_extract_rr_h(ctx, &u.f_rr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x0:
                        /* 01011110 00110000 110110.. ........ */
                        /* ../target/arm/tcg/a64.decode:804 */
                        if (trans_FADDP_s(ctx, &u.f_rr_e)) return true;
                        break;
                    }
                    break;
                case 0x10f:
                    /* 01011110 ..110000 111110.. ........ */
                    disas_a64_extract_rr_h(ctx, &u.f_rr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x0:
                        /* 01011110 00110000 111110.. ........ */
                        /* ../target/arm/tcg/a64.decode:807 */
                        if (trans_FMAXP_s(ctx, &u.f_rr_e)) return true;
                        break;
                    case 0x2:
                        /* 01011110 10110000 111110.. ........ */
                        /* ../target/arm/tcg/a64.decode:810 */
                        if (trans_FMINP_s(ctx, &u.f_rr_e)) return true;
                        break;
                    }
                    break;
                case 0x11b:
                    /* 01011110 ..110001 101110.. ........ */
                    disas_a64_extract_rr_d(ctx, &u.f_rr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x3:
                        /* 01011110 11110001 101110.. ........ */
                        /* ../target/arm/tcg/a64.decode:819 */
                        if (trans_ADDP_s(ctx, &u.f_rr_e)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x40200c00:
                /* 01011110 ..1..... ....11.. ........ */
                switch ((insn >> 12) & 0xf) {
                case 0x0:
                    /* 01011110 ..1..... 000011.. ........ */
                    /* ../target/arm/tcg/a64.decode:763 */
                    disas_a64_extract_rrr_e(ctx, &u.f_rrr_e, insn);
                    if (trans_SQADD_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x2:
                    /* 01011110 ..1..... 001011.. ........ */
                    /* ../target/arm/tcg/a64.decode:765 */
                    disas_a64_extract_rrr_e(ctx, &u.f_rrr_e, insn);
                    if (trans_SQSUB_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x3:
                    /* 01011110 ..1..... 001111.. ........ */
                    disas_a64_extract_rrr_d(ctx, &u.f_rrr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x3:
                        /* 01011110 111..... 001111.. ........ */
                        /* ../target/arm/tcg/a64.decode:784 */
                        if (trans_CMGE_s(ctx, &u.f_rrr_e)) return true;
                        break;
                    }
                    break;
                case 0x4:
                    /* 01011110 ..1..... 010011.. ........ */
                    /* ../target/arm/tcg/a64.decode:775 */
                    disas_a64_extract_rrr_e(ctx, &u.f_rrr_e, insn);
                    if (trans_SQSHL_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x5:
                    /* 01011110 ..1..... 010111.. ........ */
                    /* ../target/arm/tcg/a64.decode:777 */
                    disas_a64_extract_rrr_e(ctx, &u.f_rrr_e, insn);
                    if (trans_SQRSHL_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x8:
                    /* 01011110 ..1..... 100011.. ........ */
                    disas_a64_extract_rrr_d(ctx, &u.f_rrr_e, insn);
                    switch ((insn >> 22) & 0x3) {
                    case 0x3:
                        /* 01011110 111..... 100011.. ........ */
                        /* ../target/arm/tcg/a64.decode:786 */
                        if (trans_CMTST_s(ctx, &u.f_rrr_e)) return true;
                        break;
                    }
                    break;
                case 0xd:
                    /* 01011110 ..1..... 110111.. ........ */
                    disas_a64_extract_rrr_sd(ctx, &u.f_rrr_e, insn);
                    switch ((insn >> 23) & 0x1) {
                    case 0x0:
                        /* 01011110 0.1..... 110111.. ........ */
                        /* ../target/arm/tcg/a64.decode:737 */
                        if (trans_FMULX_s(ctx, &u.f_rrr_e)) return true;
                        break;
                    }
                    break;
                case 0xf:
                    /* 01011110 ..1..... 111111.. ........ */
                    disas_a64_extract_rrr_sd(ctx, &u.f_rrr_e, insn);
                    switch ((insn >> 23) & 0x1) {
                    case 0x0:
                        /* 01011110 0.1..... 111111.. ........ */
                        /* ../target/arm/tcg/a64.decode:758 */
                        if (trans_FRECPS_s(ctx, &u.f_rrr_e)) return true;
                        break;
                    case 0x1:
                        /* 01011110 1.1..... 111111.. ........ */
                        /* ../target/arm/tcg/a64.decode:761 */
                        if (trans_FRSQRTS_s(ctx, &u.f_rrr_e)) return true;
                        break;
                    }
                    break;
                }
                break;
            }
            break;
        case 0x03000000:
            /* ..011111 ........ ........ ........ */
            switch (insn & 0xc0008000u) {
            case 0x00000000:
                /* 00011111 ........ 0....... ........ */
                disas_a64_extract_rrrr_hsd(ctx, &u.f_rrrr_e, insn);
                switch ((insn >> 21) & 0x1) {
                case 0x0:
                    /* 00011111 ..0..... 0....... ........ */
                    /* ../target/arm/tcg/a64.decode:1141 */
                    if (trans_FMADD(ctx, &u.f_rrrr_e)) return true;
                    break;
                case 0x1:
                    /* 00011111 ..1..... 0....... ........ */
                    /* ../target/arm/tcg/a64.decode:1143 */
                    if (trans_FNMADD(ctx, &u.f_rrrr_e)) return true;
                    break;
                }
                break;
            case 0x00008000:
                /* 00011111 ........ 1....... ........ */
                disas_a64_extract_rrrr_hsd(ctx, &u.f_rrrr_e, insn);
                switch ((insn >> 21) & 0x1) {
                case 0x0:
                    /* 00011111 ..0..... 1....... ........ */
                    /* ../target/arm/tcg/a64.decode:1142 */
                    if (trans_FMSUB(ctx, &u.f_rrrr_e)) return true;
                    break;
                case 0x1:
                    /* 00011111 ..1..... 1....... ........ */
                    /* ../target/arm/tcg/a64.decode:1144 */
                    if (trans_FNMSUB(ctx, &u.f_rrrr_e)) return true;
                    break;
                }
                break;
            case 0x40000000:
                /* 01011111 ........ 0....... ........ */
                switch (insn & 0x00c07400) {
                case 0x00001000:
                    /* 01011111 00...... 0001.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1021 */
                    disas_a64_extract_rrx_h(ctx, &u.f_rrx_e, insn);
                    if (trans_FMLA_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x00005000:
                    /* 01011111 00...... 0101.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1025 */
                    disas_a64_extract_rrx_h(ctx, &u.f_rrx_e, insn);
                    if (trans_FMLS_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x00007400:
                    /* 01011111 00...... 0111.1.. ........ */
                    switch (insn & 0x00200800) {
                    case 0x00000000:
                        /* 01011111 000..... 011101.. ........ */
                        switch ((insn >> 20) & 0x1) {
                        case 0x0:
                            /* 01011111 0000.... 011101.. ........ */
                            disas_a64_extract_shli_b(ctx, &u.f_rri_e, insn);
                            switch ((insn >> 19) & 0x1) {
                            case 0x1:
                                /* 01011111 00001... 011101.. ........ */
                                /* ../target/arm/tcg/a64.decode:1358 */
                                if (trans_SQSHL_si(ctx, &u.f_rri_e)) return true;
                                break;
                            }
                            break;
                        case 0x1:
                            /* 01011111 0001.... 011101.. ........ */
                            /* ../target/arm/tcg/a64.decode:1359 */
                            disas_a64_extract_shli_h(ctx, &u.f_rri_e, insn);
                            if (trans_SQSHL_si(ctx, &u.f_rri_e)) return true;
                            break;
                        }
                        break;
                    case 0x00200000:
                        /* 01011111 001..... 011101.. ........ */
                        /* ../target/arm/tcg/a64.decode:1360 */
                        disas_a64_extract_shli_s(ctx, &u.f_rri_e, insn);
                        if (trans_SQSHL_si(ctx, &u.f_rri_e)) return true;
                        break;
                    }
                    break;
                case 0x00400400:
                    /* 01011111 01...... 0000.1.. ........ */
                    disas_a64_extract_shri_d(ctx, &u.f_rri_e, insn);
                    switch ((insn >> 11) & 0x1) {
                    case 0x0:
                        /* 01011111 01...... 000001.. ........ */
                        /* ../target/arm/tcg/a64.decode:1345 */
                        if (trans_SSHR_s(ctx, &u.f_rri_e)) return true;
                        break;
                    }
                    break;
                case 0x00401400:
                    /* 01011111 01...... 0001.1.. ........ */
                    disas_a64_extract_shri_d(ctx, &u.f_rri_e, insn);
                    switch ((insn >> 11) & 0x1) {
                    case 0x0:
                        /* 01011111 01...... 000101.. ........ */
                        /* ../target/arm/tcg/a64.decode:1347 */
                        if (trans_SSRA_s(ctx, &u.f_rri_e)) return true;
                        break;
                    }
                    break;
                case 0x00402400:
                    /* 01011111 01...... 0010.1.. ........ */
                    disas_a64_extract_shri_d(ctx, &u.f_rri_e, insn);
                    switch ((insn >> 11) & 0x1) {
                    case 0x0:
                        /* 01011111 01...... 001001.. ........ */
                        /* ../target/arm/tcg/a64.decode:1349 */
                        if (trans_SRSHR_s(ctx, &u.f_rri_e)) return true;
                        break;
                    }
                    break;
                case 0x00403000:
                    /* 01011111 01...... 0011.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1048 */
                    disas_a64_extract_rrx_h(ctx, &u.f_rrx_e, insn);
                    if (trans_SQDMLAL_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x00403400:
                    /* 01011111 01...... 0011.1.. ........ */
                    disas_a64_extract_shri_d(ctx, &u.f_rri_e, insn);
                    switch ((insn >> 11) & 0x1) {
                    case 0x0:
                        /* 01011111 01...... 001101.. ........ */
                        /* ../target/arm/tcg/a64.decode:1351 */
                        if (trans_SRSRA_s(ctx, &u.f_rri_e)) return true;
                        break;
                    }
                    break;
                case 0x00405400:
                    /* 01011111 01...... 0101.1.. ........ */
                    disas_a64_extract_shli_d(ctx, &u.f_rri_e, insn);
                    switch ((insn >> 11) & 0x1) {
                    case 0x0:
                        /* 01011111 01...... 010101.. ........ */
                        /* ../target/arm/tcg/a64.decode:1355 */
                        if (trans_SHL_s(ctx, &u.f_rri_e)) return true;
                        break;
                    }
                    break;
                case 0x00407000:
                    /* 01011111 01...... 0111.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1051 */
                    disas_a64_extract_rrx_h(ctx, &u.f_rrx_e, insn);
                    if (trans_SQDMLSL_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x00407400:
                    /* 01011111 01...... 0111.1.. ........ */
                    disas_a64_extract_shli_d(ctx, &u.f_rri_e, insn);
                    switch ((insn >> 11) & 0x1) {
                    case 0x0:
                        /* 01011111 01...... 011101.. ........ */
                        /* ../target/arm/tcg/a64.decode:1361 */
                        if (trans_SQSHL_si(ctx, &u.f_rri_e)) return true;
                        break;
                    }
                    break;
                case 0x00801000:
                    /* 01011111 10...... 0001.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1022 */
                    disas_a64_extract_rrx_s(ctx, &u.f_rrx_e, insn);
                    if (trans_FMLA_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x00803000:
                    /* 01011111 10...... 0011.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1049 */
                    disas_a64_extract_rrx_s(ctx, &u.f_rrx_e, insn);
                    if (trans_SQDMLAL_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x00805000:
                    /* 01011111 10...... 0101.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1026 */
                    disas_a64_extract_rrx_s(ctx, &u.f_rrx_e, insn);
                    if (trans_FMLS_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x00807000:
                    /* 01011111 10...... 0111.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1052 */
                    disas_a64_extract_rrx_s(ctx, &u.f_rrx_e, insn);
                    if (trans_SQDMLSL_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x00c01000:
                    /* 01011111 11...... 0001.0.. ........ */
                    disas_a64_extract_rrx_d(ctx, &u.f_rrx_e, insn);
                    switch ((insn >> 21) & 0x1) {
                    case 0x0:
                        /* 01011111 110..... 0001.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1023 */
                        if (trans_FMLA_si(ctx, &u.f_rrx_e)) return true;
                        break;
                    }
                    break;
                case 0x00c05000:
                    /* 01011111 11...... 0101.0.. ........ */
                    disas_a64_extract_rrx_d(ctx, &u.f_rrx_e, insn);
                    switch ((insn >> 21) & 0x1) {
                    case 0x0:
                        /* 01011111 110..... 0101.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1027 */
                        if (trans_FMLS_si(ctx, &u.f_rrx_e)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x40008000:
                /* 01011111 ........ 1....... ........ */
                switch (insn & 0x00c07400) {
                case 0x00001000:
                    /* 01011111 00...... 1001.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1017 */
                    disas_a64_extract_rrx_h(ctx, &u.f_rrx_e, insn);
                    if (trans_FMUL_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x00001400:
                    /* 01011111 00...... 1001.1.. ........ */
                    switch (insn & 0x00200800) {
                    case 0x00000000:
                        /* 01011111 000..... 100101.. ........ */
                        switch ((insn >> 20) & 0x1) {
                        case 0x0:
                            /* 01011111 0000.... 100101.. ........ */
                            disas_a64_extract_shri_b(ctx, &u.f_rri_e, insn);
                            switch ((insn >> 19) & 0x1) {
                            case 0x1:
                                /* 01011111 00001... 100101.. ........ */
                                /* ../target/arm/tcg/a64.decode:1373 */
                                if (trans_SQSHRN_si(ctx, &u.f_rri_e)) return true;
                                break;
                            }
                            break;
                        case 0x1:
                            /* 01011111 0001.... 100101.. ........ */
                            /* ../target/arm/tcg/a64.decode:1374 */
                            disas_a64_extract_shri_h(ctx, &u.f_rri_e, insn);
                            if (trans_SQSHRN_si(ctx, &u.f_rri_e)) return true;
                            break;
                        }
                        break;
                    case 0x00000800:
                        /* 01011111 000..... 100111.. ........ */
                        switch ((insn >> 20) & 0x1) {
                        case 0x0:
                            /* 01011111 0000.... 100111.. ........ */
                            disas_a64_extract_shri_b(ctx, &u.f_rri_e, insn);
                            switch ((insn >> 19) & 0x1) {
                            case 0x1:
                                /* 01011111 00001... 100111.. ........ */
                                /* ../target/arm/tcg/a64.decode:1385 */
                                if (trans_SQRSHRN_si(ctx, &u.f_rri_e)) return true;
                                break;
                            }
                            break;
                        case 0x1:
                            /* 01011111 0001.... 100111.. ........ */
                            /* ../target/arm/tcg/a64.decode:1386 */
                            disas_a64_extract_shri_h(ctx, &u.f_rri_e, insn);
                            if (trans_SQRSHRN_si(ctx, &u.f_rri_e)) return true;
                            break;
                        }
                        break;
                    case 0x00200000:
                        /* 01011111 001..... 100101.. ........ */
                        /* ../target/arm/tcg/a64.decode:1375 */
                        disas_a64_extract_shri_s(ctx, &u.f_rri_e, insn);
                        if (trans_SQSHRN_si(ctx, &u.f_rri_e)) return true;
                        break;
                    case 0x00200800:
                        /* 01011111 001..... 100111.. ........ */
                        /* ../target/arm/tcg/a64.decode:1387 */
                        disas_a64_extract_shri_s(ctx, &u.f_rri_e, insn);
                        if (trans_SQRSHRN_si(ctx, &u.f_rri_e)) return true;
                        break;
                    }
                    break;
                case 0x00403000:
                    /* 01011111 01...... 1011.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1045 */
                    disas_a64_extract_rrx_h(ctx, &u.f_rrx_e, insn);
                    if (trans_SQDMULL_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x00404000:
                    /* 01011111 01...... 1100.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1033 */
                    disas_a64_extract_rrx_h(ctx, &u.f_rrx_e, insn);
                    if (trans_SQDMULH_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x00405000:
                    /* 01011111 01...... 1101.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1036 */
                    disas_a64_extract_rrx_h(ctx, &u.f_rrx_e, insn);
                    if (trans_SQRDMULH_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x00801000:
                    /* 01011111 10...... 1001.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1018 */
                    disas_a64_extract_rrx_s(ctx, &u.f_rrx_e, insn);
                    if (trans_FMUL_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x00803000:
                    /* 01011111 10...... 1011.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1046 */
                    disas_a64_extract_rrx_s(ctx, &u.f_rrx_e, insn);
                    if (trans_SQDMULL_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x00804000:
                    /* 01011111 10...... 1100.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1034 */
                    disas_a64_extract_rrx_s(ctx, &u.f_rrx_e, insn);
                    if (trans_SQDMULH_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x00805000:
                    /* 01011111 10...... 1101.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1037 */
                    disas_a64_extract_rrx_s(ctx, &u.f_rrx_e, insn);
                    if (trans_SQRDMULH_si(ctx, &u.f_rrx_e)) return true;
                    break;
                case 0x00c01000:
                    /* 01011111 11...... 1001.0.. ........ */
                    disas_a64_extract_rrx_d(ctx, &u.f_rrx_e, insn);
                    switch ((insn >> 21) & 0x1) {
                    case 0x0:
                        /* 01011111 110..... 1001.0.. ........ */
                        /* ../target/arm/tcg/a64.decode:1019 */
                        if (trans_FMUL_si(ctx, &u.f_rrx_e)) return true;
                        break;
                    }
                    break;
                }
                break;
            }
            break;
        case 0x20000000:
            /* ..111100 ........ ........ ........ */
            switch (insn & 0x00e00c00) {
            case 0x00000000:
                /* ..111100 000..... ....00.. ........ */
                /* ../target/arm/tcg/a64.decode:444 */
                disas_a64_extract_ldst_imm(ctx, &u.f_ldst_imm, insn);
                u.f_ldst_imm.sz = extract32(insn, 30, 2);
                u.f_ldst_imm.sign = 0;
                u.f_ldst_imm.ext = 0;
                if (trans_STR_v_i(ctx, &u.f_ldst_imm)) return true;
                break;
            case 0x00000400:
                /* ..111100 000..... ....01.. ........ */
                /* ../target/arm/tcg/a64.decode:449 */
                disas_a64_extract_ldst_imm_post(ctx, &u.f_ldst_imm, insn);
                u.f_ldst_imm.sz = extract32(insn, 30, 2);
                u.f_ldst_imm.sign = 0;
                u.f_ldst_imm.ext = 0;
                if (trans_STR_v_i(ctx, &u.f_ldst_imm)) return true;
                break;
            case 0x00000c00:
                /* ..111100 000..... ....11.. ........ */
                /* ../target/arm/tcg/a64.decode:454 */
                disas_a64_extract_ldst_imm_pre(ctx, &u.f_ldst_imm, insn);
                u.f_ldst_imm.sz = extract32(insn, 30, 2);
                u.f_ldst_imm.sign = 0;
                u.f_ldst_imm.ext = 0;
                if (trans_STR_v_i(ctx, &u.f_ldst_imm)) return true;
                break;
            case 0x00200800:
                /* ..111100 001..... ....10.. ........ */
                /* ../target/arm/tcg/a64.decode:501 */
                disas_a64_extract_ldst(ctx, &u.f_ldst, insn);
                u.f_ldst.sz = extract32(insn, 30, 2);
                u.f_ldst.sign = 0;
                u.f_ldst.ext = 0;
                if (trans_STR_v(ctx, &u.f_ldst)) return true;
                break;
            case 0x00400000:
                /* ..111100 010..... ....00.. ........ */
                /* ../target/arm/tcg/a64.decode:446 */
                disas_a64_extract_ldst_imm(ctx, &u.f_ldst_imm, insn);
                u.f_ldst_imm.sz = extract32(insn, 30, 2);
                u.f_ldst_imm.sign = 0;
                u.f_ldst_imm.ext = 0;
                if (trans_LDR_v_i(ctx, &u.f_ldst_imm)) return true;
                break;
            case 0x00400400:
                /* ..111100 010..... ....01.. ........ */
                /* ../target/arm/tcg/a64.decode:451 */
                disas_a64_extract_ldst_imm_post(ctx, &u.f_ldst_imm, insn);
                u.f_ldst_imm.sz = extract32(insn, 30, 2);
                u.f_ldst_imm.sign = 0;
                u.f_ldst_imm.ext = 0;
                if (trans_LDR_v_i(ctx, &u.f_ldst_imm)) return true;
                break;
            case 0x00400c00:
                /* ..111100 010..... ....11.. ........ */
                /* ../target/arm/tcg/a64.decode:456 */
                disas_a64_extract_ldst_imm_pre(ctx, &u.f_ldst_imm, insn);
                u.f_ldst_imm.sz = extract32(insn, 30, 2);
                u.f_ldst_imm.sign = 0;
                u.f_ldst_imm.ext = 0;
                if (trans_LDR_v_i(ctx, &u.f_ldst_imm)) return true;
                break;
            case 0x00600800:
                /* ..111100 011..... ....10.. ........ */
                /* ../target/arm/tcg/a64.decode:503 */
                disas_a64_extract_ldst(ctx, &u.f_ldst, insn);
                u.f_ldst.sz = extract32(insn, 30, 2);
                u.f_ldst.sign = 0;
                u.f_ldst.ext = 0;
                if (trans_LDR_v(ctx, &u.f_ldst)) return true;
                break;
            case 0x00800000:
                /* ..111100 100..... ....00.. ........ */
                disas_a64_extract_ldst_imm(ctx, &u.f_ldst_imm, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x0:
                    /* 00111100 100..... ....00.. ........ */
                    /* ../target/arm/tcg/a64.decode:445 */
                    u.f_ldst_imm.sz = 4;
                    u.f_ldst_imm.sign = 0;
                    u.f_ldst_imm.ext = 0;
                    if (trans_STR_v_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                }
                break;
            case 0x00800400:
                /* ..111100 100..... ....01.. ........ */
                disas_a64_extract_ldst_imm_post(ctx, &u.f_ldst_imm, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x0:
                    /* 00111100 100..... ....01.. ........ */
                    /* ../target/arm/tcg/a64.decode:450 */
                    u.f_ldst_imm.sz = 4;
                    u.f_ldst_imm.sign = 0;
                    u.f_ldst_imm.ext = 0;
                    if (trans_STR_v_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                }
                break;
            case 0x00800c00:
                /* ..111100 100..... ....11.. ........ */
                disas_a64_extract_ldst_imm_pre(ctx, &u.f_ldst_imm, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x0:
                    /* 00111100 100..... ....11.. ........ */
                    /* ../target/arm/tcg/a64.decode:455 */
                    u.f_ldst_imm.sz = 4;
                    u.f_ldst_imm.sign = 0;
                    u.f_ldst_imm.ext = 0;
                    if (trans_STR_v_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                }
                break;
            case 0x00a00800:
                /* ..111100 101..... ....10.. ........ */
                disas_a64_extract_ldst(ctx, &u.f_ldst, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x0:
                    /* 00111100 101..... ....10.. ........ */
                    /* ../target/arm/tcg/a64.decode:502 */
                    u.f_ldst.sz = 4;
                    u.f_ldst.sign = 0;
                    u.f_ldst.ext = 0;
                    if (trans_STR_v(ctx, &u.f_ldst)) return true;
                    break;
                }
                break;
            case 0x00c00000:
                /* ..111100 110..... ....00.. ........ */
                disas_a64_extract_ldst_imm(ctx, &u.f_ldst_imm, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x0:
                    /* 00111100 110..... ....00.. ........ */
                    /* ../target/arm/tcg/a64.decode:447 */
                    u.f_ldst_imm.sz = 4;
                    u.f_ldst_imm.sign = 0;
                    u.f_ldst_imm.ext = 0;
                    if (trans_LDR_v_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                }
                break;
            case 0x00c00400:
                /* ..111100 110..... ....01.. ........ */
                disas_a64_extract_ldst_imm_post(ctx, &u.f_ldst_imm, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x0:
                    /* 00111100 110..... ....01.. ........ */
                    /* ../target/arm/tcg/a64.decode:452 */
                    u.f_ldst_imm.sz = 4;
                    u.f_ldst_imm.sign = 0;
                    u.f_ldst_imm.ext = 0;
                    if (trans_LDR_v_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                }
                break;
            case 0x00c00c00:
                /* ..111100 110..... ....11.. ........ */
                disas_a64_extract_ldst_imm_pre(ctx, &u.f_ldst_imm, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x0:
                    /* 00111100 110..... ....11.. ........ */
                    /* ../target/arm/tcg/a64.decode:457 */
                    u.f_ldst_imm.sz = 4;
                    u.f_ldst_imm.sign = 0;
                    u.f_ldst_imm.ext = 0;
                    if (trans_LDR_v_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                }
                break;
            case 0x00e00800:
                /* ..111100 111..... ....10.. ........ */
                disas_a64_extract_ldst(ctx, &u.f_ldst, insn);
                switch ((insn >> 30) & 0x3) {
                case 0x0:
                    /* 00111100 111..... ....10.. ........ */
                    /* ../target/arm/tcg/a64.decode:504 */
                    u.f_ldst.sz = 4;
                    u.f_ldst.sign = 0;
                    u.f_ldst.ext = 0;
                    if (trans_LDR_v(ctx, &u.f_ldst)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x21000000:
            /* ..111101 ........ ........ ........ */
            switch ((insn >> 22) & 0x3) {
            case 0x0:
                /* ..111101 00...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:479 */
                u.f_ldst_imm.sz = extract32(insn, 30, 2);
                u.f_ldst_imm.sign = 0;
                u.f_ldst_imm.ext = 0;
                disas_a64_extract_ldst_uimm(ctx, &u.f_ldst_imm, insn);
                if (trans_STR_v_i(ctx, &u.f_ldst_imm)) return true;
                break;
            case 0x1:
                /* ..111101 01...... ........ ........ */
                /* ../target/arm/tcg/a64.decode:481 */
                u.f_ldst_imm.sz = extract32(insn, 30, 2);
                u.f_ldst_imm.sign = 0;
                u.f_ldst_imm.ext = 0;
                disas_a64_extract_ldst_uimm(ctx, &u.f_ldst_imm, insn);
                if (trans_LDR_v_i(ctx, &u.f_ldst_imm)) return true;
                break;
            case 0x2:
                /* ..111101 10...... ........ ........ */
                switch ((insn >> 30) & 0x3) {
                case 0x0:
                    /* 00111101 10...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:480 */
                    u.f_ldst_imm.sz = 4;
                    u.f_ldst_imm.sign = 0;
                    u.f_ldst_imm.ext = 0;
                    disas_a64_extract_ldst_uimm(ctx, &u.f_ldst_imm, insn);
                    if (trans_STR_v_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                }
                break;
            case 0x3:
                /* ..111101 11...... ........ ........ */
                switch ((insn >> 30) & 0x3) {
                case 0x0:
                    /* 00111101 11...... ........ ........ */
                    /* ../target/arm/tcg/a64.decode:482 */
                    u.f_ldst_imm.sz = 4;
                    u.f_ldst_imm.sign = 0;
                    u.f_ldst_imm.ext = 0;
                    disas_a64_extract_ldst_uimm(ctx, &u.f_ldst_imm, insn);
                    if (trans_LDR_v_i(ctx, &u.f_ldst_imm)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x22000000:
            /* ..111110 ........ ........ ........ */
            switch (insn & 0xc020fc00u) {
            case 0x40001400:
                /* 01111110 ..0..... 000101.. ........ */
                disas_a64_extract_rrr_h(ctx, &u.f_rrr_e, insn);
                switch ((insn >> 22) & 0x3) {
                case 0x3:
                    /* 01111110 110..... 000101.. ........ */
                    /* ../target/arm/tcg/a64.decode:754 */
                    if (trans_FABD_s(ctx, &u.f_rrr_e)) return true;
                    break;
                }
                break;
            case 0x40002400:
                /* 01111110 ..0..... 001001.. ........ */
                disas_a64_extract_rrr_h(ctx, &u.f_rrr_e, insn);
                switch ((insn >> 22) & 0x3) {
                case 0x1:
                    /* 01111110 010..... 001001.. ........ */
                    /* ../target/arm/tcg/a64.decode:742 */
                    if (trans_FCMGE_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x3:
                    /* 01111110 110..... 001001.. ........ */
                    /* ../target/arm/tcg/a64.decode:745 */
                    if (trans_FCMGT_s(ctx, &u.f_rrr_e)) return true;
                    break;
                }
                break;
            case 0x40002c00:
                /* 01111110 ..0..... 001011.. ........ */
                disas_a64_extract_rrr_h(ctx, &u.f_rrr_e, insn);
                switch ((insn >> 22) & 0x3) {
                case 0x1:
                    /* 01111110 010..... 001011.. ........ */
                    /* ../target/arm/tcg/a64.decode:748 */
                    if (trans_FACGE_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x3:
                    /* 01111110 110..... 001011.. ........ */
                    /* ../target/arm/tcg/a64.decode:751 */
                    if (trans_FACGT_s(ctx, &u.f_rrr_e)) return true;
                    break;
                }
                break;
            case 0x40008400:
                /* 01111110 ..0..... 100001.. ........ */
                /* ../target/arm/tcg/a64.decode:791 */
                disas_a64_extract_rrr_e(ctx, &u.f_rrr_e, insn);
                if (trans_SQRDMLAH_s(ctx, &u.f_rrr_e)) return true;
                break;
            case 0x40008c00:
                /* 01111110 ..0..... 100011.. ........ */
                /* ../target/arm/tcg/a64.decode:792 */
                disas_a64_extract_rrr_e(ctx, &u.f_rrr_e, insn);
                if (trans_SQRDMLSH_s(ctx, &u.f_rrr_e)) return true;
                break;
            case 0x40200c00:
                /* 01111110 ..1..... 000011.. ........ */
                /* ../target/arm/tcg/a64.decode:764 */
                disas_a64_extract_rrr_e(ctx, &u.f_rrr_e, insn);
                if (trans_UQADD_s(ctx, &u.f_rrr_e)) return true;
                break;
            case 0x40202c00:
                /* 01111110 ..1..... 001011.. ........ */
                /* ../target/arm/tcg/a64.decode:766 */
                disas_a64_extract_rrr_e(ctx, &u.f_rrr_e, insn);
                if (trans_UQSUB_s(ctx, &u.f_rrr_e)) return true;
                break;
            case 0x40203400:
                /* 01111110 ..1..... 001101.. ........ */
                disas_a64_extract_rrr_d(ctx, &u.f_rrr_e, insn);
                switch ((insn >> 22) & 0x3) {
                case 0x3:
                    /* 01111110 111..... 001101.. ........ */
                    /* ../target/arm/tcg/a64.decode:783 */
                    if (trans_CMHI_s(ctx, &u.f_rrr_e)) return true;
                    break;
                }
                break;
            case 0x40203800:
                /* 01111110 ..1..... 001110.. ........ */
                disas_a64_extract_r2r_e(ctx, &u.f_rrr_e, insn);
                switch ((insn >> 16) & 0x1f) {
                case 0x0:
                    /* 01111110 ..100000 001110.. ........ */
                    /* ../target/arm/tcg/a64.decode:769 */
                    if (trans_USQADD_s(ctx, &u.f_rrr_e)) return true;
                    break;
                }
                break;
            case 0x40203c00:
                /* 01111110 ..1..... 001111.. ........ */
                disas_a64_extract_rrr_d(ctx, &u.f_rrr_e, insn);
                switch ((insn >> 22) & 0x3) {
                case 0x3:
                    /* 01111110 111..... 001111.. ........ */
                    /* ../target/arm/tcg/a64.decode:785 */
                    if (trans_CMHS_s(ctx, &u.f_rrr_e)) return true;
                    break;
                }
                break;
            case 0x40204400:
                /* 01111110 ..1..... 010001.. ........ */
                disas_a64_extract_rrr_d(ctx, &u.f_rrr_e, insn);
                switch ((insn >> 22) & 0x3) {
                case 0x3:
                    /* 01111110 111..... 010001.. ........ */
                    /* ../target/arm/tcg/a64.decode:772 */
                    if (trans_USHL_s(ctx, &u.f_rrr_e)) return true;
                    break;
                }
                break;
            case 0x40204c00:
                /* 01111110 ..1..... 010011.. ........ */
                /* ../target/arm/tcg/a64.decode:776 */
                disas_a64_extract_rrr_e(ctx, &u.f_rrr_e, insn);
                if (trans_UQSHL_s(ctx, &u.f_rrr_e)) return true;
                break;
            case 0x40205400:
                /* 01111110 ..1..... 010101.. ........ */
                disas_a64_extract_rrr_d(ctx, &u.f_rrr_e, insn);
                switch ((insn >> 22) & 0x3) {
                case 0x3:
                    /* 01111110 111..... 010101.. ........ */
                    /* ../target/arm/tcg/a64.decode:774 */
                    if (trans_URSHL_s(ctx, &u.f_rrr_e)) return true;
                    break;
                }
                break;
            case 0x40205c00:
                /* 01111110 ..1..... 010111.. ........ */
                /* ../target/arm/tcg/a64.decode:778 */
                disas_a64_extract_rrr_e(ctx, &u.f_rrr_e, insn);
                if (trans_UQRSHL_s(ctx, &u.f_rrr_e)) return true;
                break;
            case 0x40208400:
                /* 01111110 ..1..... 100001.. ........ */
                disas_a64_extract_rrr_d(ctx, &u.f_rrr_e, insn);
                switch ((insn >> 22) & 0x3) {
                case 0x3:
                    /* 01111110 111..... 100001.. ........ */
                    /* ../target/arm/tcg/a64.decode:781 */
                    if (trans_SUB_s(ctx, &u.f_rrr_e)) return true;
                    break;
                }
                break;
            case 0x40208c00:
                /* 01111110 ..1..... 100011.. ........ */
                disas_a64_extract_rrr_d(ctx, &u.f_rrr_e, insn);
                switch ((insn >> 22) & 0x3) {
                case 0x3:
                    /* 01111110 111..... 100011.. ........ */
                    /* ../target/arm/tcg/a64.decode:787 */
                    if (trans_CMEQ_s(ctx, &u.f_rrr_e)) return true;
                    break;
                }
                break;
            case 0x4020b400:
                /* 01111110 ..1..... 101101.. ........ */
                /* ../target/arm/tcg/a64.decode:790 */
                disas_a64_extract_rrr_e(ctx, &u.f_rrr_e, insn);
                if (trans_SQRDMULH_s(ctx, &u.f_rrr_e)) return true;
                break;
            case 0x4020c800:
                /* 01111110 ..1..... 110010.. ........ */
                disas_a64_extract_rr_sd(ctx, &u.f_rr_e, insn);
                switch (insn & 0x009f0000) {
                case 0x00100000:
                    /* 01111110 0.110000 110010.. ........ */
                    /* ../target/arm/tcg/a64.decode:814 */
                    if (trans_FMAXNMP_s(ctx, &u.f_rr_e)) return true;
                    break;
                case 0x00900000:
                    /* 01111110 1.110000 110010.. ........ */
                    /* ../target/arm/tcg/a64.decode:817 */
                    if (trans_FMINNMP_s(ctx, &u.f_rr_e)) return true;
                    break;
                }
                break;
            case 0x4020d400:
                /* 01111110 ..1..... 110101.. ........ */
                disas_a64_extract_rrr_sd(ctx, &u.f_rrr_e, insn);
                switch ((insn >> 23) & 0x1) {
                case 0x1:
                    /* 01111110 1.1..... 110101.. ........ */
                    /* ../target/arm/tcg/a64.decode:755 */
                    if (trans_FABD_s(ctx, &u.f_rrr_e)) return true;
                    break;
                }
                break;
            case 0x4020d800:
                /* 01111110 ..1..... 110110.. ........ */
                disas_a64_extract_rr_sd(ctx, &u.f_rr_e, insn);
                switch (insn & 0x009f0000) {
                case 0x00100000:
                    /* 01111110 0.110000 110110.. ........ */
                    /* ../target/arm/tcg/a64.decode:805 */
                    if (trans_FADDP_s(ctx, &u.f_rr_e)) return true;
                    break;
                }
                break;
            case 0x4020e400:
                /* 01111110 ..1..... 111001.. ........ */
                disas_a64_extract_rrr_sd(ctx, &u.f_rrr_e, insn);
                switch ((insn >> 23) & 0x1) {
                case 0x0:
                    /* 01111110 0.1..... 111001.. ........ */
                    /* ../target/arm/tcg/a64.decode:743 */
                    if (trans_FCMGE_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x1:
                    /* 01111110 1.1..... 111001.. ........ */
                    /* ../target/arm/tcg/a64.decode:746 */
                    if (trans_FCMGT_s(ctx, &u.f_rrr_e)) return true;
                    break;
                }
                break;
            case 0x4020ec00:
                /* 01111110 ..1..... 111011.. ........ */
                disas_a64_extract_rrr_sd(ctx, &u.f_rrr_e, insn);
                switch ((insn >> 23) & 0x1) {
                case 0x0:
                    /* 01111110 0.1..... 111011.. ........ */
                    /* ../target/arm/tcg/a64.decode:749 */
                    if (trans_FACGE_s(ctx, &u.f_rrr_e)) return true;
                    break;
                case 0x1:
                    /* 01111110 1.1..... 111011.. ........ */
                    /* ../target/arm/tcg/a64.decode:752 */
                    if (trans_FACGT_s(ctx, &u.f_rrr_e)) return true;
                    break;
                }
                break;
            case 0x4020f800:
                /* 01111110 ..1..... 111110.. ........ */
                disas_a64_extract_rr_sd(ctx, &u.f_rr_e, insn);
                switch (insn & 0x009f0000) {
                case 0x00100000:
                    /* 01111110 0.110000 111110.. ........ */
                    /* ../target/arm/tcg/a64.decode:808 */
                    if (trans_FMAXP_s(ctx, &u.f_rr_e)) return true;
                    break;
                case 0x00900000:
                    /* 01111110 1.110000 111110.. ........ */
                    /* ../target/arm/tcg/a64.decode:811 */
                    if (trans_FMINP_s(ctx, &u.f_rr_e)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x23000000:
            /* ..111111 ........ ........ ........ */
            switch (insn & 0xc0c0f400u) {
            case 0x40006400:
                /* 01111111 00...... 0110.1.. ........ */
                switch (insn & 0x00200800) {
                case 0x00000000:
                    /* 01111111 000..... 011001.. ........ */
                    switch ((insn >> 20) & 0x1) {
                    case 0x0:
                        /* 01111111 0000.... 011001.. ........ */
                        disas_a64_extract_shli_b(ctx, &u.f_rri_e, insn);
                        switch ((insn >> 19) & 0x1) {
                        case 0x1:
                            /* 01111111 00001... 011001.. ........ */
                            /* ../target/arm/tcg/a64.decode:1368 */
                            if (trans_SQSHLU_si(ctx, &u.f_rri_e)) return true;
                            break;
                        }
                        break;
                    case 0x1:
                        /* 01111111 0001.... 011001.. ........ */
                        /* ../target/arm/tcg/a64.decode:1369 */
                        disas_a64_extract_shli_h(ctx, &u.f_rri_e, insn);
                        if (trans_SQSHLU_si(ctx, &u.f_rri_e)) return true;
                        break;
                    }
                    break;
                case 0x00200000:
                    /* 01111111 001..... 011001.. ........ */
                    /* ../target/arm/tcg/a64.decode:1370 */
                    disas_a64_extract_shli_s(ctx, &u.f_rri_e, insn);
                    if (trans_SQSHLU_si(ctx, &u.f_rri_e)) return true;
                    break;
                }
                break;
            case 0x40007400:
                /* 01111111 00...... 0111.1.. ........ */
                switch (insn & 0x00200800) {
                case 0x00000000:
                    /* 01111111 000..... 011101.. ........ */
                    switch ((insn >> 20) & 0x1) {
                    case 0x0:
                        /* 01111111 0000.... 011101.. ........ */
                        disas_a64_extract_shli_b(ctx, &u.f_rri_e, insn);
                        switch ((insn >> 19) & 0x1) {
                        case 0x1:
                            /* 01111111 00001... 011101.. ........ */
                            /* ../target/arm/tcg/a64.decode:1363 */
                            if (trans_UQSHL_si(ctx, &u.f_rri_e)) return true;
                            break;
                        }
                        break;
                    case 0x1:
                        /* 01111111 0001.... 011101.. ........ */
                        /* ../target/arm/tcg/a64.decode:1364 */
                        disas_a64_extract_shli_h(ctx, &u.f_rri_e, insn);
                        if (trans_UQSHL_si(ctx, &u.f_rri_e)) return true;
                        break;
                    }
                    break;
                case 0x00200000:
                    /* 01111111 001..... 011101.. ........ */
                    /* ../target/arm/tcg/a64.decode:1365 */
                    disas_a64_extract_shli_s(ctx, &u.f_rri_e, insn);
                    if (trans_UQSHL_si(ctx, &u.f_rri_e)) return true;
                    break;
                }
                break;
            case 0x40008400:
                /* 01111111 00...... 1000.1.. ........ */
                switch (insn & 0x00200800) {
                case 0x00000000:
                    /* 01111111 000..... 100001.. ........ */
                    switch ((insn >> 20) & 0x1) {
                    case 0x0:
                        /* 01111111 0000.... 100001.. ........ */
                        disas_a64_extract_shri_b(ctx, &u.f_rri_e, insn);
                        switch ((insn >> 19) & 0x1) {
                        case 0x1:
                            /* 01111111 00001... 100001.. ........ */
                            /* ../target/arm/tcg/a64.decode:1381 */
                            if (trans_SQSHRUN_si(ctx, &u.f_rri_e)) return true;
                            break;
                        }
                        break;
                    case 0x1:
                        /* 01111111 0001.... 100001.. ........ */
                        /* ../target/arm/tcg/a64.decode:1382 */
                        disas_a64_extract_shri_h(ctx, &u.f_rri_e, insn);
                        if (trans_SQSHRUN_si(ctx, &u.f_rri_e)) return true;
                        break;
                    }
                    break;
                case 0x00000800:
                    /* 01111111 000..... 100011.. ........ */
                    switch ((insn >> 20) & 0x1) {
                    case 0x0:
                        /* 01111111 0000.... 100011.. ........ */
                        disas_a64_extract_shri_b(ctx, &u.f_rri_e, insn);
                        switch ((insn >> 19) & 0x1) {
                        case 0x1:
                            /* 01111111 00001... 100011.. ........ */
                            /* ../target/arm/tcg/a64.decode:1393 */
                            if (trans_SQRSHRUN_si(ctx, &u.f_rri_e)) return true;
                            break;
                        }
                        break;
                    case 0x1:
                        /* 01111111 0001.... 100011.. ........ */
                        /* ../target/arm/tcg/a64.decode:1394 */
                        disas_a64_extract_shri_h(ctx, &u.f_rri_e, insn);
                        if (trans_SQRSHRUN_si(ctx, &u.f_rri_e)) return true;
                        break;
                    }
                    break;
                case 0x00200000:
                    /* 01111111 001..... 100001.. ........ */
                    /* ../target/arm/tcg/a64.decode:1383 */
                    disas_a64_extract_shri_s(ctx, &u.f_rri_e, insn);
                    if (trans_SQSHRUN_si(ctx, &u.f_rri_e)) return true;
                    break;
                case 0x00200800:
                    /* 01111111 001..... 100011.. ........ */
                    /* ../target/arm/tcg/a64.decode:1395 */
                    disas_a64_extract_shri_s(ctx, &u.f_rri_e, insn);
                    if (trans_SQRSHRUN_si(ctx, &u.f_rri_e)) return true;
                    break;
                }
                break;
            case 0x40009000:
                /* 01111111 00...... 1001.0.. ........ */
                /* ../target/arm/tcg/a64.decode:1029 */
                disas_a64_extract_rrx_h(ctx, &u.f_rrx_e, insn);
                if (trans_FMULX_si(ctx, &u.f_rrx_e)) return true;
                break;
            case 0x40009400:
                /* 01111111 00...... 1001.1.. ........ */
                switch (insn & 0x00200800) {
                case 0x00000000:
                    /* 01111111 000..... 100101.. ........ */
                    switch ((insn >> 20) & 0x1) {
                    case 0x0:
                        /* 01111111 0000.... 100101.. ........ */
                        disas_a64_extract_shri_b(ctx, &u.f_rri_e, insn);
                        switch ((insn >> 19) & 0x1) {
                        case 0x1:
                            /* 01111111 00001... 100101.. ........ */
                            /* ../target/arm/tcg/a64.decode:1377 */
                            if (trans_UQSHRN_si(ctx, &u.f_rri_e)) return true;
                            break;
                        }
                        break;
                    case 0x1:
                        /* 01111111 0001.... 100101.. ........ */
                        /* ../target/arm/tcg/a64.decode:1378 */
                        disas_a64_extract_shri_h(ctx, &u.f_rri_e, insn);
                        if (trans_UQSHRN_si(ctx, &u.f_rri_e)) return true;
                        break;
                    }
                    break;
                case 0x00000800:
                    /* 01111111 000..... 100111.. ........ */
                    switch ((insn >> 20) & 0x1) {
                    case 0x0:
                        /* 01111111 0000.... 100111.. ........ */
                        disas_a64_extract_shri_b(ctx, &u.f_rri_e, insn);
                        switch ((insn >> 19) & 0x1) {
                        case 0x1:
                            /* 01111111 00001... 100111.. ........ */
                            /* ../target/arm/tcg/a64.decode:1389 */
                            if (trans_UQRSHRN_si(ctx, &u.f_rri_e)) return true;
                            break;
                        }
                        break;
                    case 0x1:
                        /* 01111111 0001.... 100111.. ........ */
                        /* ../target/arm/tcg/a64.decode:1390 */
                        disas_a64_extract_shri_h(ctx, &u.f_rri_e, insn);
                        if (trans_UQRSHRN_si(ctx, &u.f_rri_e)) return true;
                        break;
                    }
                    break;
                case 0x00200000:
                    /* 01111111 001..... 100101.. ........ */
                    /* ../target/arm/tcg/a64.decode:1379 */
                    disas_a64_extract_shri_s(ctx, &u.f_rri_e, insn);
                    if (trans_UQSHRN_si(ctx, &u.f_rri_e)) return true;
                    break;
                case 0x00200800:
                    /* 01111111 001..... 100111.. ........ */
                    /* ../target/arm/tcg/a64.decode:1391 */
                    disas_a64_extract_shri_s(ctx, &u.f_rri_e, insn);
                    if (trans_UQRSHRN_si(ctx, &u.f_rri_e)) return true;
                    break;
                }
                break;
            case 0x40400400:
                /* 01111111 01...... 0000.1.. ........ */
                disas_a64_extract_shri_d(ctx, &u.f_rri_e, insn);
                switch ((insn >> 11) & 0x1) {
                case 0x0:
                    /* 01111111 01...... 000001.. ........ */
                    /* ../target/arm/tcg/a64.decode:1346 */
                    if (trans_USHR_s(ctx, &u.f_rri_e)) return true;
                    break;
                }
                break;
            case 0x40401400:
                /* 01111111 01...... 0001.1.. ........ */
                disas_a64_extract_shri_d(ctx, &u.f_rri_e, insn);
                switch ((insn >> 11) & 0x1) {
                case 0x0:
                    /* 01111111 01...... 000101.. ........ */
                    /* ../target/arm/tcg/a64.decode:1348 */
                    if (trans_USRA_s(ctx, &u.f_rri_e)) return true;
                    break;
                }
                break;
            case 0x40402400:
                /* 01111111 01...... 0010.1.. ........ */
                disas_a64_extract_shri_d(ctx, &u.f_rri_e, insn);
                switch ((insn >> 11) & 0x1) {
                case 0x0:
                    /* 01111111 01...... 001001.. ........ */
                    /* ../target/arm/tcg/a64.decode:1350 */
                    if (trans_URSHR_s(ctx, &u.f_rri_e)) return true;
                    break;
                }
                break;
            case 0x40403400:
                /* 01111111 01...... 0011.1.. ........ */
                disas_a64_extract_shri_d(ctx, &u.f_rri_e, insn);
                switch ((insn >> 11) & 0x1) {
                case 0x0:
                    /* 01111111 01...... 001101.. ........ */
                    /* ../target/arm/tcg/a64.decode:1352 */
                    if (trans_URSRA_s(ctx, &u.f_rri_e)) return true;
                    break;
                }
                break;
            case 0x40404400:
                /* 01111111 01...... 0100.1.. ........ */
                disas_a64_extract_shri_d(ctx, &u.f_rri_e, insn);
                switch ((insn >> 11) & 0x1) {
                case 0x0:
                    /* 01111111 01...... 010001.. ........ */
                    /* ../target/arm/tcg/a64.decode:1353 */
                    if (trans_SRI_s(ctx, &u.f_rri_e)) return true;
                    break;
                }
                break;
            case 0x40405400:
                /* 01111111 01...... 0101.1.. ........ */
                disas_a64_extract_shli_d(ctx, &u.f_rri_e, insn);
                switch ((insn >> 11) & 0x1) {
                case 0x0:
                    /* 01111111 01...... 010101.. ........ */
                    /* ../target/arm/tcg/a64.decode:1356 */
                    if (trans_SLI_s(ctx, &u.f_rri_e)) return true;
                    break;
                }
                break;
            case 0x40406400:
                /* 01111111 01...... 0110.1.. ........ */
                disas_a64_extract_shli_d(ctx, &u.f_rri_e, insn);
                switch ((insn >> 11) & 0x1) {
                case 0x0:
                    /* 01111111 01...... 011001.. ........ */
                    /* ../target/arm/tcg/a64.decode:1371 */
                    if (trans_SQSHLU_si(ctx, &u.f_rri_e)) return true;
                    break;
                }
                break;
            case 0x40407400:
                /* 01111111 01...... 0111.1.. ........ */
                disas_a64_extract_shli_d(ctx, &u.f_rri_e, insn);
                switch ((insn >> 11) & 0x1) {
                case 0x0:
                    /* 01111111 01...... 011101.. ........ */
                    /* ../target/arm/tcg/a64.decode:1366 */
                    if (trans_UQSHL_si(ctx, &u.f_rri_e)) return true;
                    break;
                }
                break;
            case 0x4040d000:
                /* 01111111 01...... 1101.0.. ........ */
                /* ../target/arm/tcg/a64.decode:1039 */
                disas_a64_extract_rrx_h(ctx, &u.f_rrx_e, insn);
                if (trans_SQRDMLAH_si(ctx, &u.f_rrx_e)) return true;
                break;
            case 0x4040f000:
                /* 01111111 01...... 1111.0.. ........ */
                /* ../target/arm/tcg/a64.decode:1042 */
                disas_a64_extract_rrx_h(ctx, &u.f_rrx_e, insn);
                if (trans_SQRDMLSH_si(ctx, &u.f_rrx_e)) return true;
                break;
            case 0x40809000:
                /* 01111111 10...... 1001.0.. ........ */
                /* ../target/arm/tcg/a64.decode:1030 */
                disas_a64_extract_rrx_s(ctx, &u.f_rrx_e, insn);
                if (trans_FMULX_si(ctx, &u.f_rrx_e)) return true;
                break;
            case 0x4080d000:
                /* 01111111 10...... 1101.0.. ........ */
                /* ../target/arm/tcg/a64.decode:1040 */
                disas_a64_extract_rrx_s(ctx, &u.f_rrx_e, insn);
                if (trans_SQRDMLAH_si(ctx, &u.f_rrx_e)) return true;
                break;
            case 0x4080f000:
                /* 01111111 10...... 1111.0.. ........ */
                /* ../target/arm/tcg/a64.decode:1043 */
                disas_a64_extract_rrx_s(ctx, &u.f_rrx_e, insn);
                if (trans_SQRDMLSH_si(ctx, &u.f_rrx_e)) return true;
                break;
            case 0x40c09000:
                /* 01111111 11...... 1001.0.. ........ */
                disas_a64_extract_rrx_d(ctx, &u.f_rrx_e, insn);
                switch ((insn >> 21) & 0x1) {
                case 0x0:
                    /* 01111111 110..... 1001.0.. ........ */
                    /* ../target/arm/tcg/a64.decode:1031 */
                    if (trans_FMULX_si(ctx, &u.f_rrx_e)) return true;
                    break;
                }
                break;
            }
            break;
        }
        break;
    }
    return false;
}
