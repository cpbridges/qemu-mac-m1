/* This file is autogenerated by scripts/decodetree.py.  */

typedef struct {
    int b;
    int l;
    int n;
    int disp;
    int sp;
} arg_BE;

typedef struct {
    int l;
    int n;
    int disp;
} arg_BL;

typedef struct {
    int r;
    int sp;
} arg_decode15;

typedef struct {
    int t;
    int r;
} arg_decode16;

typedef struct {
    int r;
} arg_decode17;

typedef struct {
    int t;
} arg_decode18;

typedef struct {
    int t;
    int sp;
} arg_decode19;

typedef struct {
    int r;
    int e;
    int t;
} arg_decode20;

typedef struct {
    int b;
    int sp;
    int t;
} arg_decode21;

typedef struct {
    int t;
    int i;
} arg_decode22;

typedef struct {
    int b;
    int ri;
    int sp;
    int imm;
    int write;
    int t;
} arg_decode23;

typedef struct {
    int b;
    int r;
    int sp;
    int addr;
    int data;
} arg_decode24;

typedef struct {
    int r;
    int data;
    int addr;
} arg_decode25;

typedef struct {
    int r2;
    int r1;
    int data;
} arg_decode26;

typedef struct {
    int r;
    int i;
} arg_decode27;

typedef struct {
    int b;
    int t;
    int i;
} arg_decode28;

typedef struct {
    int r1;
    int r2;
    int c0;
    int c1;
    int c2;
    int c3;
    int t;
} arg_decode29;

typedef struct {
    int b;
    int r;
    int sp;
    int a;
    int m;
    int disp;
} arg_decode30;

typedef struct {
    int r;
    int c;
    int n;
    int disp;
    int d;
} arg_decode32;

typedef struct {
    int p;
    int r;
    int c;
    int n;
    int disp;
    int d;
} arg_decode33;

typedef struct {
    int r2;
    int r1;
    int c;
    int d;
    int t;
} arg_decode34;

typedef struct {
    int r2;
    int r1;
    int c;
    int cpos;
    int t;
    int d;
} arg_decode35;

typedef struct {
    int r;
    int t;
    int c;
    int se;
    int d;
    int len;
} arg_decode36;

typedef struct {
    int r;
    int t;
    int c;
    int se;
    int pos;
    int d;
    int len;
} arg_decode37;

typedef struct {
    int t;
    int r;
    int c;
    int nz;
    int d;
    int len;
} arg_decode38;

typedef struct {
    int t;
    int r;
    int c;
    int nz;
    int cpos;
    int d;
    int len;
} arg_decode39;

typedef struct {
    int t;
    int c;
    int nz;
    int d;
    int i;
    int len;
} arg_decode40;

typedef struct {
    int t;
    int c;
    int nz;
    int cpos;
    int d;
    int i;
    int len;
} arg_decode41;

typedef struct {
    int l;
    int x;
    int n;
} arg_decode44;

typedef struct {
    int b;
    int x;
    int n;
} arg_decode45;

typedef struct {
    int b;
    int n;
    int l;
} arg_decode46;

typedef struct {
    int neg;
    int rm1;
    int rm2;
    int ra3;
    int t;
} arg_decode47;

typedef struct {
    int y;
    int c;
} arg_decode51;

typedef struct {
    int i;
} arg_decode52;

typedef struct {
} arg_empty;

typedef struct {
    int r;
    int t;
} arg_fclass01;

typedef struct {
    int r1;
    int r2;
    int c;
    int y;
} arg_fclass2;

typedef struct {
    int r1;
    int r2;
    int t;
} arg_fclass3;

typedef struct {
    int t;
    int b;
    int x;
    int disp;
    int sp;
    int m;
    int scale;
    int size;
} arg_ldst;

typedef struct {
    int rm1;
    int rm2;
    int ta;
    int ra;
    int tm;
} arg_mpyadd;

typedef struct {
    int disp;
    int n;
    int c;
    int d;
    int f;
    int r;
    int i;
} arg_rib_c_d_f;

typedef struct {
    int disp;
    int n;
    int c;
    int f;
    int r;
    int i;
} arg_rib_c_f;

typedef struct {
    int t;
    int r;
    int cf;
    int d;
} arg_rr_cf_d;

typedef struct {
    int disp;
    int n;
    int c;
    int d;
    int f;
    int r1;
    int r2;
} arg_rrb_c_d_f;

typedef struct {
    int disp;
    int n;
    int c;
    int f;
    int r1;
    int r2;
} arg_rrb_c_f;

typedef struct {
    int t;
    int r;
    int i;
} arg_rri;

typedef struct {
    int t;
    int r;
    int i;
    int cf;
} arg_rri_cf;

typedef struct {
    int t;
    int r;
    int i;
    int cf;
    int d;
} arg_rri_cf_d;

typedef struct {
    int t;
    int r1;
    int r2;
} arg_rrr;

typedef struct {
    int t;
    int r1;
    int r2;
    int cf;
} arg_rrr_cf;

typedef struct {
    int t;
    int r1;
    int r2;
    int cf;
    int d;
} arg_rrr_cf_d;

typedef struct {
    int t;
    int r1;
    int r2;
    int cf;
    int d;
    int sh;
} arg_rrr_cf_d_sh;

typedef struct {
    int t;
    int r1;
    int r2;
    int sh;
} arg_rrr_sh;

typedef arg_empty arg_break;
static bool trans_break(DisasContext *ctx, arg_break *a);
typedef arg_decode15 arg_mtsp;
static bool trans_mtsp(DisasContext *ctx, arg_mtsp *a);
typedef arg_decode16 arg_mtctl;
static bool trans_mtctl(DisasContext *ctx, arg_mtctl *a);
typedef arg_decode17 arg_mtsarcm;
static bool trans_mtsarcm(DisasContext *ctx, arg_mtsarcm *a);
typedef arg_decode17 arg_mtsm;
static bool trans_mtsm(DisasContext *ctx, arg_mtsm *a);
typedef arg_decode18 arg_mfia;
static bool trans_mfia(DisasContext *ctx, arg_mfia *a);
typedef arg_decode19 arg_mfsp;
static bool trans_mfsp(DisasContext *ctx, arg_mfsp *a);
typedef arg_decode20 arg_mfctl;
static bool trans_mfctl(DisasContext *ctx, arg_mfctl *a);
typedef arg_empty arg_sync;
static bool trans_sync(DisasContext *ctx, arg_sync *a);
typedef arg_decode21 arg_ldsid;
static bool trans_ldsid(DisasContext *ctx, arg_ldsid *a);
typedef arg_decode22 arg_rsm;
static bool trans_rsm(DisasContext *ctx, arg_rsm *a);
typedef arg_decode22 arg_ssm;
static bool trans_ssm(DisasContext *ctx, arg_ssm *a);
typedef arg_empty arg_rfi;
static bool trans_rfi(DisasContext *ctx, arg_rfi *a);
typedef arg_empty arg_rfi_r;
static bool trans_rfi_r(DisasContext *ctx, arg_rfi_r *a);
typedef arg_empty arg_halt;
static bool trans_halt(DisasContext *ctx, arg_halt *a);
typedef arg_empty arg_reset;
static bool trans_reset(DisasContext *ctx, arg_reset *a);
typedef arg_empty arg_getshadowregs;
static bool trans_getshadowregs(DisasContext *ctx, arg_getshadowregs *a);
typedef arg_empty arg_nop;
static bool trans_nop(DisasContext *ctx, arg_nop *a);
typedef arg_ldst arg_nop_addrx;
static bool trans_nop_addrx(DisasContext *ctx, arg_nop_addrx *a);
typedef arg_ldst arg_fic;
static bool trans_fic(DisasContext *ctx, arg_fic *a);
typedef arg_decode23 arg_probe;
static bool trans_probe(DisasContext *ctx, arg_probe *a);
typedef arg_decode24 arg_ixtlbx;
static bool trans_ixtlbx(DisasContext *ctx, arg_ixtlbx *a);
typedef arg_decode25 arg_ixtlbxf;
static bool trans_ixtlbxf(DisasContext *ctx, arg_ixtlbxf *a);
typedef arg_decode26 arg_ixtlbt;
static bool trans_ixtlbt(DisasContext *ctx, arg_ixtlbt *a);
typedef arg_ldst arg_pxtlb;
static bool trans_pxtlb(DisasContext *ctx, arg_pxtlb *a);
typedef arg_ldst arg_pxtlb_l;
static bool trans_pxtlb_l(DisasContext *ctx, arg_pxtlb_l *a);
typedef arg_ldst arg_pxtlbe;
static bool trans_pxtlbe(DisasContext *ctx, arg_pxtlbe *a);
typedef arg_ldst arg_lpa;
static bool trans_lpa(DisasContext *ctx, arg_lpa *a);
typedef arg_decode18 arg_lci;
static bool trans_lci(DisasContext *ctx, arg_lci *a);
typedef arg_rrr_cf_d arg_andcm;
static bool trans_andcm(DisasContext *ctx, arg_andcm *a);
typedef arg_rrr_cf_d arg_and;
static bool trans_and(DisasContext *ctx, arg_and *a);
typedef arg_rrr_cf_d arg_or;
static bool trans_or(DisasContext *ctx, arg_or *a);
typedef arg_rrr_cf_d arg_xor;
static bool trans_xor(DisasContext *ctx, arg_xor *a);
typedef arg_rrr_cf_d arg_uxor;
static bool trans_uxor(DisasContext *ctx, arg_uxor *a);
typedef arg_rrr_cf arg_ds;
static bool trans_ds(DisasContext *ctx, arg_ds *a);
typedef arg_rrr_cf_d arg_cmpclr;
static bool trans_cmpclr(DisasContext *ctx, arg_cmpclr *a);
typedef arg_rrr_cf_d arg_uaddcm;
static bool trans_uaddcm(DisasContext *ctx, arg_uaddcm *a);
typedef arg_rrr_cf_d arg_uaddcm_tc;
static bool trans_uaddcm_tc(DisasContext *ctx, arg_uaddcm_tc *a);
typedef arg_rr_cf_d arg_dcor;
static bool trans_dcor(DisasContext *ctx, arg_dcor *a);
typedef arg_rr_cf_d arg_dcor_i;
static bool trans_dcor_i(DisasContext *ctx, arg_dcor_i *a);
typedef arg_rrr_cf_d_sh arg_add;
static bool trans_add(DisasContext *ctx, arg_add *a);
typedef arg_rrr_cf_d_sh arg_add_l;
static bool trans_add_l(DisasContext *ctx, arg_add_l *a);
typedef arg_rrr_cf_d_sh arg_add_tsv;
static bool trans_add_tsv(DisasContext *ctx, arg_add_tsv *a);
typedef arg_rrr_cf_d_sh arg_add_c;
static bool trans_add_c(DisasContext *ctx, arg_add_c *a);
typedef arg_rrr_sh arg_hshladd;
static bool trans_hshladd(DisasContext *ctx, arg_hshladd *a);
typedef arg_rrr_cf_d_sh arg_add_c_tsv;
static bool trans_add_c_tsv(DisasContext *ctx, arg_add_c_tsv *a);
typedef arg_rrr_cf_d arg_sub;
static bool trans_sub(DisasContext *ctx, arg_sub *a);
typedef arg_rrr_cf_d arg_sub_tsv;
static bool trans_sub_tsv(DisasContext *ctx, arg_sub_tsv *a);
typedef arg_rrr_cf_d arg_sub_tc;
static bool trans_sub_tc(DisasContext *ctx, arg_sub_tc *a);
typedef arg_rrr_cf_d arg_sub_tsv_tc;
static bool trans_sub_tsv_tc(DisasContext *ctx, arg_sub_tsv_tc *a);
typedef arg_rrr_cf_d arg_sub_b;
static bool trans_sub_b(DisasContext *ctx, arg_sub_b *a);
typedef arg_rrr_sh arg_hshradd;
static bool trans_hshradd(DisasContext *ctx, arg_hshradd *a);
typedef arg_rrr_cf_d arg_sub_b_tsv;
static bool trans_sub_b_tsv(DisasContext *ctx, arg_sub_b_tsv *a);
typedef arg_decode22 arg_ldil;
static bool trans_ldil(DisasContext *ctx, arg_ldil *a);
typedef arg_decode27 arg_addil;
static bool trans_addil(DisasContext *ctx, arg_addil *a);
typedef arg_decode28 arg_ldo;
static bool trans_ldo(DisasContext *ctx, arg_ldo *a);
typedef arg_rri_cf arg_addi;
static bool trans_addi(DisasContext *ctx, arg_addi *a);
typedef arg_rri_cf arg_addi_tsv;
static bool trans_addi_tsv(DisasContext *ctx, arg_addi_tsv *a);
typedef arg_rri_cf arg_addi_tc;
static bool trans_addi_tc(DisasContext *ctx, arg_addi_tc *a);
typedef arg_rri_cf arg_addi_tc_tsv;
static bool trans_addi_tc_tsv(DisasContext *ctx, arg_addi_tc_tsv *a);
typedef arg_rri_cf arg_subi;
static bool trans_subi(DisasContext *ctx, arg_subi *a);
typedef arg_rri_cf arg_subi_tsv;
static bool trans_subi_tsv(DisasContext *ctx, arg_subi_tsv *a);
typedef arg_rri_cf_d arg_cmpiclr;
static bool trans_cmpiclr(DisasContext *ctx, arg_cmpiclr *a);
typedef arg_rrr arg_hadd;
static bool trans_hadd(DisasContext *ctx, arg_hadd *a);
typedef arg_rrr arg_hadd_ss;
static bool trans_hadd_ss(DisasContext *ctx, arg_hadd_ss *a);
typedef arg_rrr arg_hadd_us;
static bool trans_hadd_us(DisasContext *ctx, arg_hadd_us *a);
typedef arg_rrr arg_havg;
static bool trans_havg(DisasContext *ctx, arg_havg *a);
typedef arg_rri arg_hshl;
static bool trans_hshl(DisasContext *ctx, arg_hshl *a);
typedef arg_rri arg_hshr_s;
static bool trans_hshr_s(DisasContext *ctx, arg_hshr_s *a);
typedef arg_rri arg_hshr_u;
static bool trans_hshr_u(DisasContext *ctx, arg_hshr_u *a);
typedef arg_rrr arg_hsub;
static bool trans_hsub(DisasContext *ctx, arg_hsub *a);
typedef arg_rrr arg_hsub_ss;
static bool trans_hsub_ss(DisasContext *ctx, arg_hsub_ss *a);
typedef arg_rrr arg_hsub_us;
static bool trans_hsub_us(DisasContext *ctx, arg_hsub_us *a);
typedef arg_rrr arg_mixh_l;
static bool trans_mixh_l(DisasContext *ctx, arg_mixh_l *a);
typedef arg_rrr arg_mixh_r;
static bool trans_mixh_r(DisasContext *ctx, arg_mixh_r *a);
typedef arg_rrr arg_mixw_l;
static bool trans_mixw_l(DisasContext *ctx, arg_mixw_l *a);
typedef arg_rrr arg_mixw_r;
static bool trans_mixw_r(DisasContext *ctx, arg_mixw_r *a);
typedef arg_decode29 arg_permh;
static bool trans_permh(DisasContext *ctx, arg_permh *a);
typedef arg_ldst arg_ld;
static bool trans_ld(DisasContext *ctx, arg_ld *a);
typedef arg_ldst arg_st;
static bool trans_st(DisasContext *ctx, arg_st *a);
typedef arg_ldst arg_ldc;
static bool trans_ldc(DisasContext *ctx, arg_ldc *a);
typedef arg_ldst arg_lda;
static bool trans_lda(DisasContext *ctx, arg_lda *a);
typedef arg_ldst arg_sta;
static bool trans_sta(DisasContext *ctx, arg_sta *a);
typedef arg_decode30 arg_stby;
static bool trans_stby(DisasContext *ctx, arg_stby *a);
typedef arg_decode30 arg_stdby;
static bool trans_stdby(DisasContext *ctx, arg_stdby *a);
typedef arg_ldst arg_fldw;
static bool trans_fldw(DisasContext *ctx, arg_fldw *a);
typedef arg_ldst arg_fstw;
static bool trans_fstw(DisasContext *ctx, arg_fstw *a);
typedef arg_ldst arg_fldd;
static bool trans_fldd(DisasContext *ctx, arg_fldd *a);
typedef arg_ldst arg_fstd;
static bool trans_fstd(DisasContext *ctx, arg_fstd *a);
typedef arg_mpyadd arg_fmpyadd_f;
static bool trans_fmpyadd_f(DisasContext *ctx, arg_fmpyadd_f *a);
typedef arg_mpyadd arg_fmpyadd_d;
static bool trans_fmpyadd_d(DisasContext *ctx, arg_fmpyadd_d *a);
typedef arg_mpyadd arg_fmpysub_f;
static bool trans_fmpysub_f(DisasContext *ctx, arg_fmpysub_f *a);
typedef arg_mpyadd arg_fmpysub_d;
static bool trans_fmpysub_d(DisasContext *ctx, arg_fmpysub_d *a);
typedef arg_decode32 arg_bb_sar;
static bool trans_bb_sar(DisasContext *ctx, arg_bb_sar *a);
typedef arg_decode33 arg_bb_imm;
static bool trans_bb_imm(DisasContext *ctx, arg_bb_imm *a);
typedef arg_rrb_c_f arg_movb;
static bool trans_movb(DisasContext *ctx, arg_movb *a);
typedef arg_rib_c_f arg_movbi;
static bool trans_movbi(DisasContext *ctx, arg_movbi *a);
typedef arg_rrb_c_d_f arg_cmpb;
static bool trans_cmpb(DisasContext *ctx, arg_cmpb *a);
typedef arg_rib_c_d_f arg_cmpbi;
static bool trans_cmpbi(DisasContext *ctx, arg_cmpbi *a);
typedef arg_rrb_c_f arg_addb;
static bool trans_addb(DisasContext *ctx, arg_addb *a);
typedef arg_rib_c_f arg_addbi;
static bool trans_addbi(DisasContext *ctx, arg_addbi *a);
typedef arg_decode34 arg_shrp_sar;
static bool trans_shrp_sar(DisasContext *ctx, arg_shrp_sar *a);
typedef arg_decode35 arg_shrp_imm;
static bool trans_shrp_imm(DisasContext *ctx, arg_shrp_imm *a);
typedef arg_decode36 arg_extr_sar;
static bool trans_extr_sar(DisasContext *ctx, arg_extr_sar *a);
typedef arg_decode37 arg_extr_imm;
static bool trans_extr_imm(DisasContext *ctx, arg_extr_imm *a);
typedef arg_decode38 arg_dep_sar;
static bool trans_dep_sar(DisasContext *ctx, arg_dep_sar *a);
typedef arg_decode39 arg_dep_imm;
static bool trans_dep_imm(DisasContext *ctx, arg_dep_imm *a);
typedef arg_decode40 arg_depi_sar;
static bool trans_depi_sar(DisasContext *ctx, arg_depi_sar *a);
typedef arg_decode41 arg_depi_imm;
static bool trans_depi_imm(DisasContext *ctx, arg_depi_imm *a);
typedef arg_BE arg_be;
static bool trans_be(DisasContext *ctx, arg_be *a);
typedef arg_BL arg_bl;
static bool trans_bl(DisasContext *ctx, arg_bl *a);
typedef arg_BL arg_b_gate;
static bool trans_b_gate(DisasContext *ctx, arg_b_gate *a);
typedef arg_decode44 arg_blr;
static bool trans_blr(DisasContext *ctx, arg_blr *a);
typedef arg_empty arg_nopbts;
static bool trans_nopbts(DisasContext *ctx, arg_nopbts *a);
typedef arg_decode45 arg_bv;
static bool trans_bv(DisasContext *ctx, arg_bv *a);
typedef arg_decode46 arg_bve;
static bool trans_bve(DisasContext *ctx, arg_bve *a);
typedef arg_decode47 arg_fmpyfadd_f;
static bool trans_fmpyfadd_f(DisasContext *ctx, arg_fmpyfadd_f *a);
typedef arg_decode47 arg_fmpyfadd_d;
static bool trans_fmpyfadd_d(DisasContext *ctx, arg_fmpyfadd_d *a);
typedef arg_empty arg_fid_f;
static bool trans_fid_f(DisasContext *ctx, arg_fid_f *a);
typedef arg_fclass01 arg_fcpy_f;
static bool trans_fcpy_f(DisasContext *ctx, arg_fcpy_f *a);
typedef arg_fclass01 arg_fabs_f;
static bool trans_fabs_f(DisasContext *ctx, arg_fabs_f *a);
typedef arg_fclass01 arg_fsqrt_f;
static bool trans_fsqrt_f(DisasContext *ctx, arg_fsqrt_f *a);
typedef arg_fclass01 arg_frnd_f;
static bool trans_frnd_f(DisasContext *ctx, arg_frnd_f *a);
typedef arg_fclass01 arg_fneg_f;
static bool trans_fneg_f(DisasContext *ctx, arg_fneg_f *a);
typedef arg_fclass01 arg_fnegabs_f;
static bool trans_fnegabs_f(DisasContext *ctx, arg_fnegabs_f *a);
typedef arg_fclass01 arg_fcpy_d;
static bool trans_fcpy_d(DisasContext *ctx, arg_fcpy_d *a);
typedef arg_fclass01 arg_fabs_d;
static bool trans_fabs_d(DisasContext *ctx, arg_fabs_d *a);
typedef arg_fclass01 arg_fsqrt_d;
static bool trans_fsqrt_d(DisasContext *ctx, arg_fsqrt_d *a);
typedef arg_fclass01 arg_frnd_d;
static bool trans_frnd_d(DisasContext *ctx, arg_frnd_d *a);
typedef arg_fclass01 arg_fneg_d;
static bool trans_fneg_d(DisasContext *ctx, arg_fneg_d *a);
typedef arg_fclass01 arg_fnegabs_d;
static bool trans_fnegabs_d(DisasContext *ctx, arg_fnegabs_d *a);
typedef arg_fclass01 arg_fcnv_d_f;
static bool trans_fcnv_d_f(DisasContext *ctx, arg_fcnv_d_f *a);
typedef arg_fclass01 arg_fcnv_f_d;
static bool trans_fcnv_f_d(DisasContext *ctx, arg_fcnv_f_d *a);
typedef arg_fclass01 arg_fcnv_w_f;
static bool trans_fcnv_w_f(DisasContext *ctx, arg_fcnv_w_f *a);
typedef arg_fclass01 arg_fcnv_q_f;
static bool trans_fcnv_q_f(DisasContext *ctx, arg_fcnv_q_f *a);
typedef arg_fclass01 arg_fcnv_w_d;
static bool trans_fcnv_w_d(DisasContext *ctx, arg_fcnv_w_d *a);
typedef arg_fclass01 arg_fcnv_q_d;
static bool trans_fcnv_q_d(DisasContext *ctx, arg_fcnv_q_d *a);
typedef arg_fclass01 arg_fcnv_f_w;
static bool trans_fcnv_f_w(DisasContext *ctx, arg_fcnv_f_w *a);
typedef arg_fclass01 arg_fcnv_d_w;
static bool trans_fcnv_d_w(DisasContext *ctx, arg_fcnv_d_w *a);
typedef arg_fclass01 arg_fcnv_f_q;
static bool trans_fcnv_f_q(DisasContext *ctx, arg_fcnv_f_q *a);
typedef arg_fclass01 arg_fcnv_d_q;
static bool trans_fcnv_d_q(DisasContext *ctx, arg_fcnv_d_q *a);
typedef arg_fclass01 arg_fcnv_t_f_w;
static bool trans_fcnv_t_f_w(DisasContext *ctx, arg_fcnv_t_f_w *a);
typedef arg_fclass01 arg_fcnv_t_d_w;
static bool trans_fcnv_t_d_w(DisasContext *ctx, arg_fcnv_t_d_w *a);
typedef arg_fclass01 arg_fcnv_t_f_q;
static bool trans_fcnv_t_f_q(DisasContext *ctx, arg_fcnv_t_f_q *a);
typedef arg_fclass01 arg_fcnv_t_d_q;
static bool trans_fcnv_t_d_q(DisasContext *ctx, arg_fcnv_t_d_q *a);
typedef arg_fclass01 arg_fcnv_uw_f;
static bool trans_fcnv_uw_f(DisasContext *ctx, arg_fcnv_uw_f *a);
typedef arg_fclass01 arg_fcnv_uq_f;
static bool trans_fcnv_uq_f(DisasContext *ctx, arg_fcnv_uq_f *a);
typedef arg_fclass01 arg_fcnv_uw_d;
static bool trans_fcnv_uw_d(DisasContext *ctx, arg_fcnv_uw_d *a);
typedef arg_fclass01 arg_fcnv_uq_d;
static bool trans_fcnv_uq_d(DisasContext *ctx, arg_fcnv_uq_d *a);
typedef arg_fclass01 arg_fcnv_f_uw;
static bool trans_fcnv_f_uw(DisasContext *ctx, arg_fcnv_f_uw *a);
typedef arg_fclass01 arg_fcnv_d_uw;
static bool trans_fcnv_d_uw(DisasContext *ctx, arg_fcnv_d_uw *a);
typedef arg_fclass01 arg_fcnv_f_uq;
static bool trans_fcnv_f_uq(DisasContext *ctx, arg_fcnv_f_uq *a);
typedef arg_fclass01 arg_fcnv_d_uq;
static bool trans_fcnv_d_uq(DisasContext *ctx, arg_fcnv_d_uq *a);
typedef arg_fclass01 arg_fcnv_t_f_uw;
static bool trans_fcnv_t_f_uw(DisasContext *ctx, arg_fcnv_t_f_uw *a);
typedef arg_fclass01 arg_fcnv_t_d_uw;
static bool trans_fcnv_t_d_uw(DisasContext *ctx, arg_fcnv_t_d_uw *a);
typedef arg_fclass01 arg_fcnv_t_f_uq;
static bool trans_fcnv_t_f_uq(DisasContext *ctx, arg_fcnv_t_f_uq *a);
typedef arg_fclass01 arg_fcnv_t_d_uq;
static bool trans_fcnv_t_d_uq(DisasContext *ctx, arg_fcnv_t_d_uq *a);
typedef arg_decode51 arg_ftest;
static bool trans_ftest(DisasContext *ctx, arg_ftest *a);
typedef arg_fclass2 arg_fcmp_f;
static bool trans_fcmp_f(DisasContext *ctx, arg_fcmp_f *a);
typedef arg_fclass2 arg_fcmp_d;
static bool trans_fcmp_d(DisasContext *ctx, arg_fcmp_d *a);
typedef arg_fclass3 arg_fadd_f;
static bool trans_fadd_f(DisasContext *ctx, arg_fadd_f *a);
typedef arg_fclass3 arg_fsub_f;
static bool trans_fsub_f(DisasContext *ctx, arg_fsub_f *a);
typedef arg_fclass3 arg_fmpy_f;
static bool trans_fmpy_f(DisasContext *ctx, arg_fmpy_f *a);
typedef arg_fclass3 arg_fdiv_f;
static bool trans_fdiv_f(DisasContext *ctx, arg_fdiv_f *a);
typedef arg_fclass3 arg_fadd_d;
static bool trans_fadd_d(DisasContext *ctx, arg_fadd_d *a);
typedef arg_fclass3 arg_fsub_d;
static bool trans_fsub_d(DisasContext *ctx, arg_fsub_d *a);
typedef arg_fclass3 arg_fmpy_d;
static bool trans_fmpy_d(DisasContext *ctx, arg_fmpy_d *a);
typedef arg_fclass3 arg_fdiv_d;
static bool trans_fdiv_d(DisasContext *ctx, arg_fdiv_d *a);
typedef arg_rrr arg_xmpyu;
static bool trans_xmpyu(DisasContext *ctx, arg_xmpyu *a);
typedef arg_empty arg_diag_btlb;
static bool trans_diag_btlb(DisasContext *ctx, arg_diag_btlb *a);
typedef arg_empty arg_diag_cout;
static bool trans_diag_cout(DisasContext *ctx, arg_diag_cout *a);
typedef arg_empty arg_diag_getshadowregs_pa1;
static bool trans_diag_getshadowregs_pa1(DisasContext *ctx, arg_diag_getshadowregs_pa1 *a);
typedef arg_empty arg_diag_putshadowregs_pa1;
static bool trans_diag_putshadowregs_pa1(DisasContext *ctx, arg_diag_putshadowregs_pa1 *a);
typedef arg_empty arg_diag_getshadowregs_pa2;
static bool trans_diag_getshadowregs_pa2(DisasContext *ctx, arg_diag_getshadowregs_pa2 *a);
typedef arg_empty arg_diag_putshadowregs_pa2;
static bool trans_diag_putshadowregs_pa2(DisasContext *ctx, arg_diag_putshadowregs_pa2 *a);
typedef arg_decode52 arg_diag_unimp;
static bool trans_diag_unimp(DisasContext *ctx, arg_diag_unimp *a);

static void decode_extract_addrx(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->x = extract32(insn, 16, 5);
    a->sp = 0;
    a->m = extract32(insn, 5, 1);
    a->size = 0;
    a->b = extract32(insn, 21, 5);
    a->t = 0;
    a->disp = 0;
}

static void decode_extract_be(DisasContext *ctx, arg_BE *a, uint32_t insn)
{
    a->disp = expand_shl2(ctx, deposit32(deposit32(deposit32(extract32(insn, 3, 10), 10, 22, extract32(insn, 2, 1)), 11, 21, extract32(insn, 16, 5)), 16, 16, sextract32(insn, 0, 1)));
    a->b = extract32(insn, 21, 5);
    a->sp = deposit32(extract32(insn, 14, 2), 2, 30, extract32(insn, 13, 1));
    a->n = extract32(insn, 1, 1);
}

static void decode_extract_bl(DisasContext *ctx, arg_BL *a, uint32_t insn)
{
    a->disp = expand_shl2(ctx, deposit32(deposit32(deposit32(extract32(insn, 3, 10), 10, 22, extract32(insn, 2, 1)), 11, 21, extract32(insn, 16, 5)), 16, 16, sextract32(insn, 0, 1)));
    a->l = extract32(insn, 21, 5);
    a->n = extract32(insn, 1, 1);
}

static void decode_extract_decode_Fmt_100(DisasContext *ctx, arg_decode52 *a, uint32_t insn)
{
    a->i = extract32(insn, 0, 26);
}

static void decode_extract_decode_Fmt_13(DisasContext *ctx, arg_empty *a, uint32_t insn)
{
}

static void decode_extract_decode_Fmt_14(DisasContext *ctx, arg_decode15 *a, uint32_t insn)
{
    a->r = extract32(insn, 16, 5);
    a->sp = deposit32(extract32(insn, 14, 2), 2, 30, extract32(insn, 13, 1));
}

static void decode_extract_decode_Fmt_15(DisasContext *ctx, arg_decode16 *a, uint32_t insn)
{
    a->r = extract32(insn, 16, 5);
    a->t = extract32(insn, 21, 5);
}

static void decode_extract_decode_Fmt_16(DisasContext *ctx, arg_decode17 *a, uint32_t insn)
{
    a->r = extract32(insn, 16, 5);
}

static void decode_extract_decode_Fmt_17(DisasContext *ctx, arg_decode18 *a, uint32_t insn)
{
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_decode_Fmt_18(DisasContext *ctx, arg_decode19 *a, uint32_t insn)
{
    a->t = extract32(insn, 0, 5);
    a->sp = deposit32(extract32(insn, 14, 2), 2, 30, extract32(insn, 13, 1));
}

static void decode_extract_decode_Fmt_19(DisasContext *ctx, arg_decode20 *a, uint32_t insn)
{
    a->r = extract32(insn, 21, 5);
    a->t = extract32(insn, 0, 5);
    a->e = extract32(insn, 14, 1);
}

static void decode_extract_decode_Fmt_20(DisasContext *ctx, arg_decode21 *a, uint32_t insn)
{
    a->b = extract32(insn, 21, 5);
    a->t = extract32(insn, 0, 5);
    a->sp = extract32(insn, 14, 2);
}

static void decode_extract_decode_Fmt_21(DisasContext *ctx, arg_decode22 *a, uint32_t insn)
{
    a->i = expand_sm_imm(ctx, extract32(insn, 16, 10));
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_decode_Fmt_23(DisasContext *ctx, arg_decode23 *a, uint32_t insn)
{
    a->sp = extract32(insn, 14, 2);
    a->imm = extract32(insn, 13, 1);
    a->ri = extract32(insn, 16, 5);
    a->write = extract32(insn, 6, 1);
    a->b = extract32(insn, 21, 5);
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_decode_Fmt_24(DisasContext *ctx, arg_decode24 *a, uint32_t insn)
{
    a->r = extract32(insn, 16, 5);
    a->sp = extract32(insn, 14, 2);
    a->data = 1;
    a->addr = extract32(insn, 6, 1);
    a->b = extract32(insn, 21, 5);
}

static void decode_extract_decode_Fmt_25(DisasContext *ctx, arg_decode24 *a, uint32_t insn)
{
    a->r = extract32(insn, 16, 5);
    a->sp = expand_sr3x(ctx, deposit32(extract32(insn, 14, 2), 2, 30, extract32(insn, 13, 1)));
    a->data = 0;
    a->addr = extract32(insn, 6, 1);
    a->b = extract32(insn, 21, 5);
}

static void decode_extract_decode_Fmt_26(DisasContext *ctx, arg_decode25 *a, uint32_t insn)
{
    a->r = extract32(insn, 16, 5);
    a->addr = extract32(insn, 6, 1);
    a->data = extract32(insn, 12, 1);
}

static void decode_extract_decode_Fmt_27(DisasContext *ctx, arg_decode26 *a, uint32_t insn)
{
    a->data = extract32(insn, 12, 1);
    a->r1 = extract32(insn, 16, 5);
    a->r2 = extract32(insn, 21, 5);
}

static void decode_extract_decode_Fmt_28(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->sp = extract32(insn, 14, 2);
    a->x = extract32(insn, 16, 5);
    a->m = extract32(insn, 5, 1);
    a->size = 0;
    a->b = extract32(insn, 21, 5);
    a->t = 0;
    a->disp = 0;
}

static void decode_extract_decode_Fmt_29(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->x = extract32(insn, 16, 5);
    a->sp = expand_sr3x(ctx, deposit32(extract32(insn, 14, 2), 2, 30, extract32(insn, 13, 1)));
    a->m = extract32(insn, 5, 1);
    a->size = 0;
    a->b = extract32(insn, 21, 5);
    a->t = 0;
    a->disp = 0;
}

static void decode_extract_decode_Fmt_30(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->sp = extract32(insn, 14, 2);
    a->x = extract32(insn, 16, 5);
    a->m = extract32(insn, 5, 1);
    a->size = 0;
    a->b = extract32(insn, 21, 5);
    a->t = 0;
    a->disp = 0;
}

static void decode_extract_decode_Fmt_31(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->x = extract32(insn, 16, 5);
    a->sp = expand_sr3x(ctx, deposit32(extract32(insn, 14, 2), 2, 30, extract32(insn, 13, 1)));
    a->m = extract32(insn, 5, 1);
    a->size = 0;
    a->b = extract32(insn, 21, 5);
    a->t = 0;
    a->disp = 0;
}

static void decode_extract_decode_Fmt_32(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->sp = extract32(insn, 14, 2);
    a->x = extract32(insn, 16, 5);
    a->m = extract32(insn, 5, 1);
    a->size = 0;
    a->b = extract32(insn, 21, 5);
    a->t = 0;
    a->disp = 0;
}

static void decode_extract_decode_Fmt_33(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->x = extract32(insn, 16, 5);
    a->sp = expand_sr3x(ctx, deposit32(extract32(insn, 14, 2), 2, 30, extract32(insn, 13, 1)));
    a->m = extract32(insn, 5, 1);
    a->size = 0;
    a->b = extract32(insn, 21, 5);
    a->t = 0;
    a->disp = 0;
}

static void decode_extract_decode_Fmt_34(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->sp = extract32(insn, 14, 2);
    a->x = extract32(insn, 16, 5);
    a->m = extract32(insn, 5, 1);
    a->size = 0;
    a->b = extract32(insn, 21, 5);
    a->t = extract32(insn, 0, 5);
    a->disp = 0;
}

static void decode_extract_decode_Fmt_35(DisasContext *ctx, arg_decode22 *a, uint32_t insn)
{
    a->i = expand_shl11(ctx, deposit32(deposit32(deposit32(deposit32(extract32(insn, 12, 2), 2, 30, extract32(insn, 16, 5)), 7, 25, extract32(insn, 14, 2)), 9, 23, extract32(insn, 1, 11)), 20, 12, sextract32(insn, 0, 1)));
    a->t = extract32(insn, 21, 5);
}

static void decode_extract_decode_Fmt_36(DisasContext *ctx, arg_decode27 *a, uint32_t insn)
{
    a->i = expand_shl11(ctx, deposit32(deposit32(deposit32(deposit32(extract32(insn, 12, 2), 2, 30, extract32(insn, 16, 5)), 7, 25, extract32(insn, 14, 2)), 9, 23, extract32(insn, 1, 11)), 20, 12, sextract32(insn, 0, 1)));
    a->r = extract32(insn, 21, 5);
}

static void decode_extract_decode_Fmt_37(DisasContext *ctx, arg_decode28 *a, uint32_t insn)
{
    a->i = expand_16(ctx, extract32(insn, 0, 16));
    a->b = extract32(insn, 21, 5);
    a->t = extract32(insn, 16, 5);
}

static void decode_extract_decode_Fmt_38(DisasContext *ctx, arg_rri *a, uint32_t insn)
{
    a->i = extract32(insn, 6, 4);
    a->r = extract32(insn, 16, 5);
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_decode_Fmt_39(DisasContext *ctx, arg_rri *a, uint32_t insn)
{
    a->i = extract32(insn, 6, 4);
    a->r = extract32(insn, 21, 5);
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_decode_Fmt_40(DisasContext *ctx, arg_decode29 *a, uint32_t insn)
{
    a->r1 = extract32(insn, 21, 5);
    a->c2 = extract32(insn, 8, 2);
    a->c0 = extract32(insn, 13, 2);
    a->r2 = extract32(insn, 16, 5);
    a->c3 = extract32(insn, 6, 2);
    a->c1 = extract32(insn, 10, 2);
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_decode_Fmt_44(DisasContext *ctx, arg_decode30 *a, uint32_t insn)
{
    a->sp = extract32(insn, 14, 2);
    a->a = extract32(insn, 13, 1);
    a->m = extract32(insn, 5, 1);
    a->r = extract32(insn, 16, 5);
    a->b = extract32(insn, 21, 5);
    a->disp = deposit32(extract32(insn, 1, 4), 4, 28, sextract32(insn, 0, 1));
}

static void decode_extract_decode_Fmt_53(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->sp = sp0_if_wide(ctx, extract32(insn, 14, 2));
    a->x = 0;
    a->m = neg_to_m(ctx, extract32(insn, 2, 1));
    a->size = 2;
    a->b = extract32(insn, 21, 5);
    a->t = deposit32(extract32(insn, 16, 5), 5, 27, extract32(insn, 1, 1));
    a->disp = expand_12a(ctx, deposit32(extract32(insn, 0, 1), 1, 31, extract32(insn, 3, 13)));
}

static void decode_extract_decode_Fmt_54(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->sp = sp0_if_wide(ctx, extract32(insn, 14, 2));
    a->x = 0;
    a->m = 0;
    a->size = 2;
    a->b = extract32(insn, 21, 5);
    a->t = deposit32(extract32(insn, 16, 5), 5, 27, extract32(insn, 1, 1));
    a->disp = expand_12a(ctx, deposit32(extract32(insn, 0, 1), 1, 31, extract32(insn, 3, 13)));
}

static void decode_extract_decode_Fmt_55(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->sp = sp0_if_wide(ctx, extract32(insn, 14, 2));
    a->x = 0;
    a->m = neg_to_m(ctx, extract32(insn, 2, 1));
    a->size = 2;
    a->b = extract32(insn, 21, 5);
    a->t = deposit32(extract32(insn, 16, 5), 5, 27, extract32(insn, 1, 1));
    a->disp = expand_12a(ctx, deposit32(extract32(insn, 0, 1), 1, 31, extract32(insn, 3, 13)));
}

static void decode_extract_decode_Fmt_56(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->sp = sp0_if_wide(ctx, extract32(insn, 14, 2));
    a->x = 0;
    a->m = 0;
    a->size = 2;
    a->b = extract32(insn, 21, 5);
    a->t = deposit32(extract32(insn, 16, 5), 5, 27, extract32(insn, 1, 1));
    a->disp = expand_12a(ctx, deposit32(extract32(insn, 0, 1), 1, 31, extract32(insn, 3, 13)));
}

static void decode_extract_decode_Fmt_58(DisasContext *ctx, arg_decode32 *a, uint32_t insn)
{
    a->c = extract32(insn, 15, 1);
    a->n = extract32(insn, 1, 1);
    a->d = pa20_d(ctx, extract32(insn, 13, 1));
    a->r = extract32(insn, 16, 5);
    a->disp = expand_shl2(ctx, deposit32(deposit32(extract32(insn, 3, 10), 10, 22, extract32(insn, 2, 1)), 11, 21, sextract32(insn, 0, 1)));
}

static void decode_extract_decode_Fmt_59(DisasContext *ctx, arg_decode33 *a, uint32_t insn)
{
    a->p = extract32(insn, 21, 5);
    a->c = extract32(insn, 15, 1);
    a->n = extract32(insn, 1, 1);
    a->d = pa20_d(ctx, extract32(insn, 13, 1));
    a->r = extract32(insn, 16, 5);
    a->disp = expand_shl2(ctx, deposit32(deposit32(extract32(insn, 3, 10), 10, 22, extract32(insn, 2, 1)), 11, 21, sextract32(insn, 0, 1)));
}

static void decode_extract_decode_Fmt_60(DisasContext *ctx, arg_rib_c_d_f *a, uint32_t insn)
{
    a->i = deposit32(extract32(insn, 17, 4), 4, 28, sextract32(insn, 16, 1));
    a->c = cmpbid_c(ctx, extract32(insn, 13, 2));
    a->n = extract32(insn, 1, 1);
    a->f = extract32(insn, 15, 1);
    a->d = 1;
    a->r = extract32(insn, 21, 5);
    a->disp = expand_shl2(ctx, deposit32(deposit32(extract32(insn, 3, 10), 10, 22, extract32(insn, 2, 1)), 11, 21, sextract32(insn, 0, 1)));
}

static void decode_extract_decode_Fmt_61(DisasContext *ctx, arg_decode34 *a, uint32_t insn)
{
    a->r2 = extract32(insn, 21, 5);
    a->c = extract32(insn, 13, 3);
    a->d = extract32(insn, 9, 1);
    a->r1 = extract32(insn, 16, 5);
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_decode_Fmt_62(DisasContext *ctx, arg_decode35 *a, uint32_t insn)
{
    a->r2 = extract32(insn, 21, 5);
    a->cpos = extract32(insn, 5, 5);
    a->c = extract32(insn, 13, 3);
    a->d = 0;
    a->r1 = extract32(insn, 16, 5);
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_decode_Fmt_63(DisasContext *ctx, arg_decode35 *a, uint32_t insn)
{
    a->r2 = extract32(insn, 21, 5);
    a->cpos = deposit32(extract32(insn, 5, 5), 5, 27, extract32(insn, 11, 1));
    a->c = extract32(insn, 13, 3);
    a->d = 1;
    a->r1 = extract32(insn, 16, 5);
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_decode_Fmt_64(DisasContext *ctx, arg_decode36 *a, uint32_t insn)
{
    a->se = extract32(insn, 10, 1);
    a->c = extract32(insn, 13, 3);
    a->len = assemble_6(ctx, extract32(insn, 0, 5));
    a->d = 0;
    a->r = extract32(insn, 21, 5);
    a->t = extract32(insn, 16, 5);
}

static void decode_extract_decode_Fmt_65(DisasContext *ctx, arg_decode36 *a, uint32_t insn)
{
    a->se = extract32(insn, 10, 1);
    a->c = extract32(insn, 13, 3);
    a->len = assemble_6(ctx, deposit32(extract32(insn, 0, 5), 5, 27, extract32(insn, 8, 1)));
    a->d = 1;
    a->r = extract32(insn, 21, 5);
    a->t = extract32(insn, 16, 5);
}

static void decode_extract_decode_Fmt_66(DisasContext *ctx, arg_decode37 *a, uint32_t insn)
{
    a->se = extract32(insn, 10, 1);
    a->c = extract32(insn, 13, 3);
    a->pos = extract32(insn, 5, 5);
    a->len = assemble_6(ctx, extract32(insn, 0, 5));
    a->d = 0;
    a->r = extract32(insn, 21, 5);
    a->t = extract32(insn, 16, 5);
}

static void decode_extract_decode_Fmt_67(DisasContext *ctx, arg_decode37 *a, uint32_t insn)
{
    a->se = extract32(insn, 10, 1);
    a->c = extract32(insn, 13, 3);
    a->pos = deposit32(extract32(insn, 5, 5), 5, 27, extract32(insn, 11, 1));
    a->len = assemble_6(ctx, deposit32(extract32(insn, 0, 5), 5, 27, extract32(insn, 12, 1)));
    a->d = 1;
    a->r = extract32(insn, 21, 5);
    a->t = extract32(insn, 16, 5);
}

static void decode_extract_decode_Fmt_68(DisasContext *ctx, arg_decode38 *a, uint32_t insn)
{
    a->nz = extract32(insn, 10, 1);
    a->c = extract32(insn, 13, 3);
    a->len = assemble_6(ctx, extract32(insn, 0, 5));
    a->d = 0;
    a->r = extract32(insn, 16, 5);
    a->t = extract32(insn, 21, 5);
}

static void decode_extract_decode_Fmt_69(DisasContext *ctx, arg_decode38 *a, uint32_t insn)
{
    a->nz = extract32(insn, 10, 1);
    a->c = extract32(insn, 13, 3);
    a->len = assemble_6(ctx, deposit32(extract32(insn, 0, 5), 5, 27, extract32(insn, 8, 1)));
    a->d = 1;
    a->r = extract32(insn, 16, 5);
    a->t = extract32(insn, 21, 5);
}

static void decode_extract_decode_Fmt_70(DisasContext *ctx, arg_decode39 *a, uint32_t insn)
{
    a->cpos = extract32(insn, 5, 5);
    a->nz = extract32(insn, 10, 1);
    a->c = extract32(insn, 13, 3);
    a->len = assemble_6(ctx, extract32(insn, 0, 5));
    a->d = 0;
    a->r = extract32(insn, 16, 5);
    a->t = extract32(insn, 21, 5);
}

static void decode_extract_decode_Fmt_71(DisasContext *ctx, arg_decode39 *a, uint32_t insn)
{
    a->nz = extract32(insn, 10, 1);
    a->cpos = deposit32(extract32(insn, 5, 5), 5, 27, extract32(insn, 11, 1));
    a->c = extract32(insn, 13, 3);
    a->len = assemble_6(ctx, deposit32(extract32(insn, 0, 5), 5, 27, extract32(insn, 12, 1)));
    a->d = 1;
    a->r = extract32(insn, 16, 5);
    a->t = extract32(insn, 21, 5);
}

static void decode_extract_decode_Fmt_72(DisasContext *ctx, arg_decode40 *a, uint32_t insn)
{
    a->nz = extract32(insn, 10, 1);
    a->i = deposit32(extract32(insn, 17, 4), 4, 28, sextract32(insn, 16, 1));
    a->c = extract32(insn, 13, 3);
    a->len = assemble_6(ctx, deposit32(extract32(insn, 0, 5), 5, 27, extract32(insn, 8, 1)));
    a->d = extract32(insn, 9, 1);
    a->t = extract32(insn, 21, 5);
}

static void decode_extract_decode_Fmt_73(DisasContext *ctx, arg_decode41 *a, uint32_t insn)
{
    a->cpos = extract32(insn, 5, 5);
    a->nz = extract32(insn, 10, 1);
    a->i = deposit32(extract32(insn, 17, 4), 4, 28, sextract32(insn, 16, 1));
    a->c = extract32(insn, 13, 3);
    a->len = assemble_6(ctx, extract32(insn, 0, 5));
    a->d = 0;
    a->t = extract32(insn, 21, 5);
}

static void decode_extract_decode_Fmt_74(DisasContext *ctx, arg_decode41 *a, uint32_t insn)
{
    a->nz = extract32(insn, 10, 1);
    a->cpos = deposit32(extract32(insn, 5, 5), 5, 27, extract32(insn, 11, 1));
    a->i = deposit32(extract32(insn, 17, 4), 4, 28, sextract32(insn, 16, 1));
    a->c = extract32(insn, 13, 3);
    a->len = assemble_6(ctx, deposit32(extract32(insn, 0, 5), 5, 27, extract32(insn, 12, 1)));
    a->d = 1;
    a->t = extract32(insn, 21, 5);
}

static void decode_extract_decode_Fmt_77(DisasContext *ctx, arg_BL *a, uint32_t insn)
{
    a->disp = expand_shl2(ctx, deposit32(deposit32(deposit32(extract32(insn, 3, 10), 10, 22, extract32(insn, 2, 1)), 11, 21, extract32(insn, 16, 10)), 21, 11, sextract32(insn, 0, 1)));
    a->l = 2;
    a->n = extract32(insn, 1, 1);
}

static void decode_extract_decode_Fmt_78(DisasContext *ctx, arg_decode44 *a, uint32_t insn)
{
    a->n = extract32(insn, 1, 1);
    a->l = extract32(insn, 21, 5);
    a->x = extract32(insn, 16, 5);
}

static void decode_extract_decode_Fmt_79(DisasContext *ctx, arg_decode45 *a, uint32_t insn)
{
    a->n = extract32(insn, 1, 1);
    a->b = extract32(insn, 21, 5);
    a->x = extract32(insn, 16, 5);
}

static void decode_extract_decode_Fmt_80(DisasContext *ctx, arg_decode46 *a, uint32_t insn)
{
    a->b = extract32(insn, 21, 5);
    a->l = 0;
    a->n = extract32(insn, 1, 1);
}

static void decode_extract_decode_Fmt_81(DisasContext *ctx, arg_decode46 *a, uint32_t insn)
{
    a->b = extract32(insn, 21, 5);
    a->l = 2;
    a->n = extract32(insn, 1, 1);
}

static void decode_extract_decode_Fmt_82(DisasContext *ctx, arg_decode47 *a, uint32_t insn)
{
    a->rm2 = deposit32(extract32(insn, 16, 5), 5, 27, extract32(insn, 12, 1));
    a->ra3 = deposit32(deposit32(extract32(insn, 9, 2), 2, 30, extract32(insn, 13, 3)), 5, 27, extract32(insn, 8, 1));
    a->rm1 = deposit32(extract32(insn, 21, 5), 5, 27, extract32(insn, 7, 1));
    a->neg = extract32(insn, 5, 1);
    a->t = deposit32(extract32(insn, 0, 5), 5, 27, extract32(insn, 6, 1));
}

static void decode_extract_decode_Fmt_83(DisasContext *ctx, arg_decode47 *a, uint32_t insn)
{
    a->rm2 = extract32(insn, 16, 5);
    a->ra3 = deposit32(extract32(insn, 9, 2), 2, 30, extract32(insn, 13, 3));
    a->rm1 = extract32(insn, 21, 5);
    a->neg = extract32(insn, 5, 1);
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_decode_Fmt_98(DisasContext *ctx, arg_decode51 *a, uint32_t insn)
{
    a->c = extract32(insn, 0, 5);
    a->y = extract32(insn, 13, 3);
}

static void decode_extract_decode_Fmt_99(DisasContext *ctx, arg_rrr *a, uint32_t insn)
{
    a->r2 = deposit32(extract32(insn, 16, 5), 5, 27, extract32(insn, 12, 1));
    a->r1 = deposit32(extract32(insn, 21, 5), 5, 27, extract32(insn, 7, 1));
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_f0c_0(DisasContext *ctx, arg_fclass01 *a, uint32_t insn)
{
    a->r = extract32(insn, 21, 5);
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_f0c_1(DisasContext *ctx, arg_fclass01 *a, uint32_t insn)
{
    a->r = extract32(insn, 21, 5);
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_f0c_2(DisasContext *ctx, arg_fclass2 *a, uint32_t insn)
{
    a->r1 = extract32(insn, 21, 5);
    a->c = extract32(insn, 0, 5);
    a->r2 = extract32(insn, 16, 5);
    a->y = extract32(insn, 13, 3);
}

static void decode_extract_f0c_3(DisasContext *ctx, arg_fclass3 *a, uint32_t insn)
{
    a->t = extract32(insn, 0, 5);
    a->r1 = extract32(insn, 21, 5);
    a->r2 = extract32(insn, 16, 5);
}

static void decode_extract_f0e_d_0(DisasContext *ctx, arg_fclass01 *a, uint32_t insn)
{
    a->r = extract32(insn, 21, 5);
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_f0e_d_2(DisasContext *ctx, arg_fclass2 *a, uint32_t insn)
{
    a->r1 = extract32(insn, 21, 5);
    a->c = extract32(insn, 0, 5);
    a->r2 = extract32(insn, 16, 5);
    a->y = extract32(insn, 13, 3);
}

static void decode_extract_f0e_d_3(DisasContext *ctx, arg_fclass3 *a, uint32_t insn)
{
    a->t = extract32(insn, 0, 5);
    a->r1 = extract32(insn, 21, 5);
    a->r2 = extract32(insn, 16, 5);
}

static void decode_extract_f0e_dd_1(DisasContext *ctx, arg_fclass01 *a, uint32_t insn)
{
    a->r = extract32(insn, 21, 5);
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_f0e_df_1(DisasContext *ctx, arg_fclass01 *a, uint32_t insn)
{
    a->r = extract32(insn, 21, 5);
    a->t = deposit32(extract32(insn, 0, 5), 5, 27, extract32(insn, 6, 1));
}

static void decode_extract_f0e_f_0(DisasContext *ctx, arg_fclass01 *a, uint32_t insn)
{
    a->r = deposit32(extract32(insn, 21, 5), 5, 27, extract32(insn, 7, 1));
    a->t = deposit32(extract32(insn, 0, 5), 5, 27, extract32(insn, 6, 1));
}

static void decode_extract_f0e_f_2(DisasContext *ctx, arg_fclass2 *a, uint32_t insn)
{
    a->r1 = deposit32(extract32(insn, 21, 5), 5, 27, extract32(insn, 7, 1));
    a->c = extract32(insn, 0, 5);
    a->r2 = deposit32(extract32(insn, 16, 5), 5, 27, extract32(insn, 12, 1));
    a->y = extract32(insn, 13, 3);
}

static void decode_extract_f0e_f_3(DisasContext *ctx, arg_fclass3 *a, uint32_t insn)
{
    a->t = deposit32(extract32(insn, 0, 5), 5, 27, extract32(insn, 6, 1));
    a->r1 = deposit32(extract32(insn, 21, 5), 5, 27, extract32(insn, 7, 1));
    a->r2 = deposit32(extract32(insn, 16, 5), 5, 27, extract32(insn, 12, 1));
}

static void decode_extract_f0e_fd_1(DisasContext *ctx, arg_fclass01 *a, uint32_t insn)
{
    a->r = deposit32(extract32(insn, 21, 5), 5, 27, extract32(insn, 7, 1));
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_f0e_ff_1(DisasContext *ctx, arg_fclass01 *a, uint32_t insn)
{
    a->r = deposit32(extract32(insn, 21, 5), 5, 27, extract32(insn, 7, 1));
    a->t = deposit32(extract32(insn, 0, 5), 5, 27, extract32(insn, 6, 1));
}

static void decode_extract_fldstdi(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->sp = extract32(insn, 14, 2);
    a->x = 0;
    a->m = ma_to_m(ctx, deposit32(extract32(insn, 13, 1), 1, 31, extract32(insn, 5, 1)));
    a->size = 3;
    a->b = extract32(insn, 21, 5);
    a->t = extract32(insn, 0, 5);
    a->disp = deposit32(extract32(insn, 17, 4), 4, 28, sextract32(insn, 16, 1));
}

static void decode_extract_fldstdx(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = extract32(insn, 13, 1);
    a->sp = extract32(insn, 14, 2);
    a->x = extract32(insn, 16, 5);
    a->m = extract32(insn, 5, 1);
    a->size = 3;
    a->b = extract32(insn, 21, 5);
    a->t = extract32(insn, 0, 5);
    a->disp = 0;
}

static void decode_extract_fldstwi(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->sp = extract32(insn, 14, 2);
    a->x = 0;
    a->m = ma_to_m(ctx, deposit32(extract32(insn, 13, 1), 1, 31, extract32(insn, 5, 1)));
    a->size = 2;
    a->b = extract32(insn, 21, 5);
    a->t = deposit32(extract32(insn, 0, 5), 5, 27, extract32(insn, 6, 1));
    a->disp = deposit32(extract32(insn, 17, 4), 4, 28, sextract32(insn, 16, 1));
}

static void decode_extract_fldstwx(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = extract32(insn, 13, 1);
    a->sp = extract32(insn, 14, 2);
    a->x = extract32(insn, 16, 5);
    a->m = extract32(insn, 5, 1);
    a->size = 2;
    a->b = extract32(insn, 21, 5);
    a->t = deposit32(extract32(insn, 0, 5), 5, 27, extract32(insn, 6, 1));
    a->disp = 0;
}

static void decode_extract_ldim5(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->x = 0;
    a->sp = extract32(insn, 14, 2);
    a->m = ma_to_m(ctx, deposit32(extract32(insn, 13, 1), 1, 31, extract32(insn, 5, 1)));
    a->b = extract32(insn, 21, 5);
    a->t = extract32(insn, 0, 5);
    a->disp = deposit32(extract32(insn, 17, 4), 4, 28, sextract32(insn, 16, 1));
}

static void decode_extract_ldstim11(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->sp = sp0_if_wide(ctx, extract32(insn, 14, 2));
    a->x = 0;
    a->m = ma_to_m(ctx, extract32(insn, 2, 2));
    a->size = 3;
    a->b = extract32(insn, 21, 5);
    a->t = extract32(insn, 16, 5);
    a->disp = expand_11a(ctx, deposit32(extract32(insn, 0, 1), 1, 31, extract32(insn, 4, 12)));
}

static void decode_extract_ldstim12m(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->x = 0;
    a->sp = sp0_if_wide(ctx, extract32(insn, 14, 2));
    a->m = pos_to_m(ctx, extract32(insn, 0, 1));
    a->b = extract32(insn, 21, 5);
    a->t = extract32(insn, 16, 5);
    a->disp = expand_12a(ctx, deposit32(extract32(insn, 0, 1), 1, 31, extract32(insn, 3, 13)));
}

static void decode_extract_ldstim14(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->x = 0;
    a->sp = sp0_if_wide(ctx, extract32(insn, 14, 2));
    a->m = 0;
    a->b = extract32(insn, 21, 5);
    a->t = extract32(insn, 16, 5);
    a->disp = expand_16(ctx, extract32(insn, 0, 16));
}

static void decode_extract_ldstim14m(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->x = 0;
    a->sp = sp0_if_wide(ctx, extract32(insn, 14, 2));
    a->m = neg_to_m(ctx, extract32(insn, 0, 1));
    a->b = extract32(insn, 21, 5);
    a->t = extract32(insn, 16, 5);
    a->disp = expand_16(ctx, extract32(insn, 0, 16));
}

static void decode_extract_ldstx(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = extract32(insn, 13, 1);
    a->sp = extract32(insn, 14, 2);
    a->x = extract32(insn, 16, 5);
    a->m = extract32(insn, 5, 1);
    a->b = extract32(insn, 21, 5);
    a->t = extract32(insn, 0, 5);
    a->disp = 0;
}

static void decode_extract_mpyadd(DisasContext *ctx, arg_mpyadd *a, uint32_t insn)
{
    a->ra = extract32(insn, 6, 5);
    a->rm2 = extract32(insn, 16, 5);
    a->ta = extract32(insn, 11, 5);
    a->tm = extract32(insn, 0, 5);
    a->rm1 = extract32(insn, 21, 5);
}

static void decode_extract_rib_cdf(DisasContext *ctx, arg_rib_c_d_f *a, uint32_t insn)
{
    a->i = deposit32(extract32(insn, 17, 4), 4, 28, sextract32(insn, 16, 1));
    a->c = extract32(insn, 13, 3);
    a->n = extract32(insn, 1, 1);
    a->r = extract32(insn, 21, 5);
    a->disp = expand_shl2(ctx, deposit32(deposit32(extract32(insn, 3, 10), 10, 22, extract32(insn, 2, 1)), 11, 21, sextract32(insn, 0, 1)));
}

static void decode_extract_rib_cf(DisasContext *ctx, arg_rib_c_f *a, uint32_t insn)
{
    a->i = deposit32(extract32(insn, 17, 4), 4, 28, sextract32(insn, 16, 1));
    a->c = extract32(insn, 13, 3);
    a->n = extract32(insn, 1, 1);
    a->r = extract32(insn, 21, 5);
    a->disp = expand_shl2(ctx, deposit32(deposit32(extract32(insn, 3, 10), 10, 22, extract32(insn, 2, 1)), 11, 21, sextract32(insn, 0, 1)));
}

static void decode_extract_rr_cf_d(DisasContext *ctx, arg_rr_cf_d *a, uint32_t insn)
{
    a->d = pa20_d(ctx, extract32(insn, 5, 1));
    a->cf = extract32(insn, 12, 4);
    a->r = extract32(insn, 21, 5);
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_rrb_cdf(DisasContext *ctx, arg_rrb_c_d_f *a, uint32_t insn)
{
    a->r2 = extract32(insn, 21, 5);
    a->c = extract32(insn, 13, 3);
    a->n = extract32(insn, 1, 1);
    a->r1 = extract32(insn, 16, 5);
    a->disp = expand_shl2(ctx, deposit32(deposit32(extract32(insn, 3, 10), 10, 22, extract32(insn, 2, 1)), 11, 21, sextract32(insn, 0, 1)));
}

static void decode_extract_rrb_cf(DisasContext *ctx, arg_rrb_c_f *a, uint32_t insn)
{
    a->r2 = extract32(insn, 21, 5);
    a->c = extract32(insn, 13, 3);
    a->n = extract32(insn, 1, 1);
    a->r1 = extract32(insn, 16, 5);
    a->disp = expand_shl2(ctx, deposit32(deposit32(extract32(insn, 3, 10), 10, 22, extract32(insn, 2, 1)), 11, 21, sextract32(insn, 0, 1)));
}

static void decode_extract_rri_cf(DisasContext *ctx, arg_rri_cf *a, uint32_t insn)
{
    a->cf = extract32(insn, 12, 4);
    a->i = deposit32(extract32(insn, 1, 10), 10, 22, sextract32(insn, 0, 1));
    a->r = extract32(insn, 21, 5);
    a->t = extract32(insn, 16, 5);
}

static void decode_extract_rri_cf_d(DisasContext *ctx, arg_rri_cf_d *a, uint32_t insn)
{
    a->i = deposit32(extract32(insn, 1, 10), 10, 22, sextract32(insn, 0, 1));
    a->cf = extract32(insn, 12, 4);
    a->d = pa20_d(ctx, extract32(insn, 11, 1));
    a->r = extract32(insn, 21, 5);
    a->t = extract32(insn, 16, 5);
}

static void decode_extract_rrr(DisasContext *ctx, arg_rrr *a, uint32_t insn)
{
    a->t = extract32(insn, 0, 5);
    a->r1 = extract32(insn, 16, 5);
    a->r2 = extract32(insn, 21, 5);
}

static void decode_extract_rrr_cf(DisasContext *ctx, arg_rrr_cf *a, uint32_t insn)
{
    a->cf = extract32(insn, 12, 4);
    a->r1 = extract32(insn, 16, 5);
    a->t = extract32(insn, 0, 5);
    a->r2 = extract32(insn, 21, 5);
}

static void decode_extract_rrr_cf_d(DisasContext *ctx, arg_rrr_cf_d *a, uint32_t insn)
{
    a->r2 = extract32(insn, 21, 5);
    a->cf = extract32(insn, 12, 4);
    a->d = pa20_d(ctx, extract32(insn, 5, 1));
    a->r1 = extract32(insn, 16, 5);
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_rrr_cf_d_sh(DisasContext *ctx, arg_rrr_cf_d_sh *a, uint32_t insn)
{
    a->r2 = extract32(insn, 21, 5);
    a->sh = extract32(insn, 6, 2);
    a->cf = extract32(insn, 12, 4);
    a->d = pa20_d(ctx, extract32(insn, 5, 1));
    a->r1 = extract32(insn, 16, 5);
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_rrr_cf_d_sh0(DisasContext *ctx, arg_rrr_cf_d_sh *a, uint32_t insn)
{
    a->r2 = extract32(insn, 21, 5);
    a->sh = 0;
    a->cf = extract32(insn, 12, 4);
    a->d = pa20_d(ctx, extract32(insn, 5, 1));
    a->r1 = extract32(insn, 16, 5);
    a->t = extract32(insn, 0, 5);
}

static void decode_extract_rrr_sh(DisasContext *ctx, arg_rrr_sh *a, uint32_t insn)
{
    a->sh = extract32(insn, 6, 2);
    a->r1 = extract32(insn, 16, 5);
    a->t = extract32(insn, 0, 5);
    a->r2 = extract32(insn, 21, 5);
}

static void decode_extract_stim5(DisasContext *ctx, arg_ldst *a, uint32_t insn)
{
    a->scale = 0;
    a->x = 0;
    a->sp = extract32(insn, 14, 2);
    a->m = ma_to_m(ctx, deposit32(extract32(insn, 13, 1), 1, 31, extract32(insn, 5, 1)));
    a->b = extract32(insn, 21, 5);
    a->t = extract32(insn, 16, 5);
    a->disp = deposit32(extract32(insn, 1, 4), 4, 28, sextract32(insn, 0, 1));
}

static bool decode(DisasContext *ctx, uint32_t insn)
{
    union {
        arg_BE f_BE;
        arg_BL f_BL;
        arg_decode15 f_decode15;
        arg_decode16 f_decode16;
        arg_decode17 f_decode17;
        arg_decode18 f_decode18;
        arg_decode19 f_decode19;
        arg_decode20 f_decode20;
        arg_decode21 f_decode21;
        arg_decode22 f_decode22;
        arg_decode23 f_decode23;
        arg_decode24 f_decode24;
        arg_decode25 f_decode25;
        arg_decode26 f_decode26;
        arg_decode27 f_decode27;
        arg_decode28 f_decode28;
        arg_decode29 f_decode29;
        arg_decode30 f_decode30;
        arg_decode32 f_decode32;
        arg_decode33 f_decode33;
        arg_decode34 f_decode34;
        arg_decode35 f_decode35;
        arg_decode36 f_decode36;
        arg_decode37 f_decode37;
        arg_decode38 f_decode38;
        arg_decode39 f_decode39;
        arg_decode40 f_decode40;
        arg_decode41 f_decode41;
        arg_decode44 f_decode44;
        arg_decode45 f_decode45;
        arg_decode46 f_decode46;
        arg_decode47 f_decode47;
        arg_decode51 f_decode51;
        arg_decode52 f_decode52;
        arg_empty f_empty;
        arg_fclass01 f_fclass01;
        arg_fclass2 f_fclass2;
        arg_fclass3 f_fclass3;
        arg_ldst f_ldst;
        arg_mpyadd f_mpyadd;
        arg_rib_c_d_f f_rib_c_d_f;
        arg_rib_c_f f_rib_c_f;
        arg_rr_cf_d f_rr_cf_d;
        arg_rrb_c_d_f f_rrb_c_d_f;
        arg_rrb_c_f f_rrb_c_f;
        arg_rri f_rri;
        arg_rri_cf f_rri_cf;
        arg_rri_cf_d f_rri_cf_d;
        arg_rrr f_rrr;
        arg_rrr_cf f_rrr_cf;
        arg_rrr_cf_d f_rrr_cf_d;
        arg_rrr_cf_d_sh f_rrr_cf_d_sh;
        arg_rrr_sh f_rrr_sh;
    } u;

    switch ((insn >> 26) & 0x3f) {
    case 0x0:
        /* 000000.. ........ ........ ........ */
        switch ((insn >> 5) & 0xff) {
        case 0x0:
            /* 000000.. ........ ...00000 000..... */
            /* ../target/hppa/insns.decode:116 */
            decode_extract_decode_Fmt_13(ctx, &u.f_empty, insn);
            if (trans_break(ctx, &u.f_empty)) return true;
            break;
        case 0x20:
            /* 000000.. ........ ...00100 000..... */
            decode_extract_decode_Fmt_13(ctx, &u.f_empty, insn);
            switch (insn & 0x0000e01f) {
            case 0x00000000:
                /* 000000.. ........ 00000100 00000000 */
                /* ../target/hppa/insns.decode:127 */
                if (trans_sync(ctx, &u.f_empty)) return true;
                break;
            }
            break;
        case 0x25:
            /* 000000.. ........ ...00100 101..... */
            decode_extract_decode_Fmt_18(ctx, &u.f_decode19, insn);
            switch ((insn >> 16) & 0x1f) {
            case 0x0:
                /* 000000.. ...00000 ...00100 101..... */
                /* ../target/hppa/insns.decode:124 */
                if (trans_mfsp(ctx, &u.f_decode19)) return true;
                break;
            }
            break;
        case 0x45:
            /* 000000.. ........ ...01000 101..... */
            decode_extract_decode_Fmt_19(ctx, &u.f_decode20, insn);
            switch ((insn >> 16) & 0x1f) {
            case 0x0:
                /* 000000.. ...00000 ...01000 101..... */
                /* ../target/hppa/insns.decode:125 */
                if (trans_mfctl(ctx, &u.f_decode20)) return true;
                break;
            }
            break;
        case 0x60:
            /* 000000.. ........ ...01100 000..... */
            decode_extract_decode_Fmt_13(ctx, &u.f_empty, insn);
            switch (insn & 0x0000001f) {
            case 0x00000000:
                /* 000000.. ........ ...01100 00000000 */
                /* ../target/hppa/insns.decode:134 */
                if (trans_rfi(ctx, &u.f_empty)) return true;
                break;
            }
            break;
        case 0x65:
            /* 000000.. ........ ...01100 101..... */
            decode_extract_decode_Fmt_13(ctx, &u.f_empty, insn);
            switch (insn & 0x0000001f) {
            case 0x00000000:
                /* 000000.. ........ ...01100 10100000 */
                /* ../target/hppa/insns.decode:135 */
                if (trans_rfi_r(ctx, &u.f_empty)) return true;
                break;
            }
            break;
        case 0x6b:
            /* 000000.. ........ ...01101 011..... */
            decode_extract_decode_Fmt_21(ctx, &u.f_decode22, insn);
            switch ((insn >> 13) & 0x7) {
            case 0x0:
                /* 000000.. ........ 00001101 011..... */
                /* ../target/hppa/insns.decode:132 */
                if (trans_ssm(ctx, &u.f_decode22)) return true;
                break;
            }
            break;
        case 0x73:
            /* 000000.. ........ ...01110 011..... */
            decode_extract_decode_Fmt_21(ctx, &u.f_decode22, insn);
            switch ((insn >> 13) & 0x7) {
            case 0x0:
                /* 000000.. ........ 00001110 011..... */
                /* ../target/hppa/insns.decode:131 */
                if (trans_rsm(ctx, &u.f_decode22)) return true;
                break;
            }
            break;
        case 0x85:
            /* 000000.. ........ ...10000 101..... */
            decode_extract_decode_Fmt_20(ctx, &u.f_decode21, insn);
            switch ((insn >> 13) & 0x1) {
            case 0x0:
                /* 000000.. ........ ..010000 101..... */
                /* ../target/hppa/insns.decode:129 */
                if (trans_ldsid(ctx, &u.f_decode21)) return true;
                break;
            }
            break;
        case 0xa5:
            /* 000000.. ........ ...10100 101..... */
            decode_extract_decode_Fmt_17(ctx, &u.f_decode18, insn);
            switch ((insn >> 16) & 0x1f) {
            case 0x0:
                /* 000000.. ...00000 ...10100 101..... */
                /* ../target/hppa/insns.decode:123 */
                if (trans_mfia(ctx, &u.f_decode18)) return true;
                break;
            }
            break;
        case 0xc1:
            /* 000000.. ........ ...11000 001..... */
            decode_extract_decode_Fmt_14(ctx, &u.f_decode15, insn);
            switch (insn & 0x0000001f) {
            case 0x00000000:
                /* 000000.. ........ ...11000 00100000 */
                /* ../target/hppa/insns.decode:118 */
                if (trans_mtsp(ctx, &u.f_decode15)) return true;
                break;
            }
            break;
        case 0xc2:
            /* 000000.. ........ ...11000 010..... */
            decode_extract_decode_Fmt_15(ctx, &u.f_decode16, insn);
            switch (insn & 0x0000001f) {
            case 0x00000000:
                /* 000000.. ........ ...11000 01000000 */
                /* ../target/hppa/insns.decode:119 */
                if (trans_mtctl(ctx, &u.f_decode16)) return true;
                break;
            }
            break;
        case 0xc3:
            /* 000000.. ........ ...11000 011..... */
            decode_extract_decode_Fmt_16(ctx, &u.f_decode17, insn);
            switch (insn & 0x03e0e01f) {
            case 0x00000000:
                /* 00000000 000..... 00011000 01100000 */
                /* ../target/hppa/insns.decode:121 */
                if (trans_mtsm(ctx, &u.f_decode17)) return true;
                break;
            }
            break;
        case 0xc6:
            /* 000000.. ........ ...11000 110..... */
            decode_extract_decode_Fmt_16(ctx, &u.f_decode17, insn);
            switch (insn & 0x03e0001f) {
            case 0x01600000:
                /* 00000001 011..... ...11000 11000000 */
                /* ../target/hppa/insns.decode:120 */
                if (trans_mtsarcm(ctx, &u.f_decode17)) return true;
                break;
            }
            break;
        }
        break;
    case 0x1:
        /* 000001.. ........ ........ ........ */
        switch ((insn >> 7) & 0x1f) {
        case 0x0:
            /* 000001.. ........ ....0000 0....... */
            switch (insn & 0x0000103f) {
            case 0x00000000:
                /* 000001.. ........ ...00000 0.000000 */
                /* ../target/hppa/insns.decode:162 */
                decode_extract_decode_Fmt_25(ctx, &u.f_decode24, insn);
                if (trans_ixtlbx(ctx, &u.f_decode24)) return true;
                break;
            case 0x00001000:
                /* 000001.. ........ ...10000 0.000000 */
                decode_extract_decode_Fmt_24(ctx, &u.f_decode24, insn);
                switch ((insn >> 13) & 0x1) {
                case 0x0:
                    /* 000001.. ........ ..010000 0.000000 */
                    /* ../target/hppa/insns.decode:161 */
                    if (trans_ixtlbx(ctx, &u.f_decode24)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x3:
            /* 000001.. ........ ....0001 1....... */
            decode_extract_decode_Fmt_23(ctx, &u.f_decode23, insn);
            switch (insn & 0x00001020) {
            case 0x00001000:
                /* 000001.. ........ ...10001 1.0..... */
                /* ../target/hppa/insns.decode:158 */
                if (trans_probe(ctx, &u.f_decode23)) return true;
                break;
            }
            break;
        case 0x4:
            /* 000001.. ........ ....0010 0....... */
            switch (insn & 0x00001040) {
            case 0x00000000:
                /* 000001.. ........ ...00010 00...... */
                /* ../target/hppa/insns.decode:174 */
                decode_extract_decode_Fmt_29(ctx, &u.f_ldst, insn);
                if (trans_pxtlb(ctx, &u.f_ldst)) return true;
                break;
            case 0x00000040:
                /* 000001.. ........ ...00010 01...... */
                /* ../target/hppa/insns.decode:186 */
                decode_extract_decode_Fmt_33(ctx, &u.f_ldst, insn);
                if (trans_pxtlbe(ctx, &u.f_ldst)) return true;
                break;
            case 0x00001000:
                /* 000001.. ........ ...10010 00...... */
                decode_extract_decode_Fmt_28(ctx, &u.f_ldst, insn);
                switch ((insn >> 13) & 0x1) {
                case 0x0:
                    /* 000001.. ........ ..010010 00...... */
                    /* ../target/hppa/insns.decode:172 */
                    if (trans_pxtlb(ctx, &u.f_ldst)) return true;
                    break;
                }
                break;
            case 0x00001040:
                /* 000001.. ........ ...10010 01...... */
                decode_extract_decode_Fmt_32(ctx, &u.f_ldst, insn);
                switch ((insn >> 13) & 0x1) {
                case 0x0:
                    /* 000001.. ........ ..010010 01...... */
                    /* ../target/hppa/insns.decode:184 */
                    if (trans_pxtlbe(ctx, &u.f_ldst)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x5:
            /* 000001.. ........ ....0010 1....... */
            switch (insn & 0x00001040) {
            case 0x00000000:
                /* 000001.. ........ ...00010 10...... */
                /* ../target/hppa/insns.decode:153 */
                decode_extract_addrx(ctx, &u.f_ldst, insn);
                if (trans_fic(ctx, &u.f_ldst)) return true;
                break;
            case 0x00000040:
                /* 000001.. ........ ...00010 11...... */
                /* ../target/hppa/insns.decode:155 */
                decode_extract_addrx(ctx, &u.f_ldst, insn);
                if (trans_fic(ctx, &u.f_ldst)) return true;
                break;
            case 0x00001000:
                /* 000001.. ........ ...10010 10...... */
                switch ((insn >> 13) & 0x1) {
                case 0x0:
                    /* 000001.. ........ ..010010 10...... */
                    /* ../target/hppa/insns.decode:151 */
                    decode_extract_addrx(ctx, &u.f_ldst, insn);
                    if (trans_nop_addrx(ctx, &u.f_ldst)) return true;
                    break;
                case 0x1:
                    /* 000001.. ........ ..110010 10...... */
                    decode_extract_decode_Fmt_13(ctx, &u.f_empty, insn);
                    switch ((insn >> 5) & 0x1) {
                    case 0x0:
                        /* 000001.. ........ ..110010 100..... */
                        /* ../target/hppa/insns.decode:150 */
                        if (trans_nop(ctx, &u.f_empty)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x00001040:
                /* 000001.. ........ ...10010 11...... */
                decode_extract_addrx(ctx, &u.f_ldst, insn);
                switch ((insn >> 13) & 0x1) {
                case 0x0:
                    /* 000001.. ........ ..010010 11...... */
                    /* ../target/hppa/insns.decode:152 */
                    if (trans_nop_addrx(ctx, &u.f_ldst)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x6:
            /* 000001.. ........ ....0011 0....... */
            switch (insn & 0x00003040) {
            case 0x00001000:
                /* 000001.. ........ ..010011 00...... */
                decode_extract_decode_Fmt_17(ctx, &u.f_decode18, insn);
                switch ((insn >> 5) & 0x1) {
                case 0x0:
                    /* 000001.. ........ ..010011 000..... */
                    /* ../target/hppa/insns.decode:192 */
                    if (trans_lci(ctx, &u.f_decode18)) return true;
                    break;
                }
                break;
            case 0x00001040:
                /* 000001.. ........ ..010011 01...... */
                /* ../target/hppa/insns.decode:189 */
                decode_extract_decode_Fmt_34(ctx, &u.f_ldst, insn);
                if (trans_lpa(ctx, &u.f_ldst)) return true;
                break;
            }
            break;
        case 0x7:
            /* 000001.. ........ ....0011 1....... */
            decode_extract_addrx(ctx, &u.f_ldst, insn);
            switch (insn & 0x0000305f) {
            case 0x00001000:
                /* 000001.. ........ ..010011 10.00000 */
                /* ../target/hppa/insns.decode:156 */
                if (trans_nop_addrx(ctx, &u.f_ldst)) return true;
                break;
            case 0x00001040:
                /* 000001.. ........ ..010011 11.00000 */
                /* ../target/hppa/insns.decode:154 */
                if (trans_fic(ctx, &u.f_ldst)) return true;
                break;
            }
            break;
        case 0x8:
            /* 000001.. ........ ....0100 0....... */
            decode_extract_decode_Fmt_26(ctx, &u.f_decode25, insn);
            switch (insn & 0x03e0e03f) {
            case 0x00000000:
                /* 00000100 000..... 000.0100 0.000000 */
                /* ../target/hppa/insns.decode:166 */
                if (trans_ixtlbxf(ctx, &u.f_decode25)) return true;
                break;
            }
            break;
        case 0xc:
            /* 000001.. ........ ....0110 0....... */
            switch (insn & 0x00001040) {
            case 0x00000000:
                /* 000001.. ........ ...00110 00...... */
                /* ../target/hppa/insns.decode:180 */
                decode_extract_decode_Fmt_31(ctx, &u.f_ldst, insn);
                if (trans_pxtlb_l(ctx, &u.f_ldst)) return true;
                break;
            case 0x00001000:
                /* 000001.. ........ ...10110 00...... */
                decode_extract_decode_Fmt_30(ctx, &u.f_ldst, insn);
                switch ((insn >> 13) & 0x1) {
                case 0x0:
                    /* 000001.. ........ ..010110 00...... */
                    /* ../target/hppa/insns.decode:178 */
                    if (trans_pxtlb_l(ctx, &u.f_ldst)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x10:
            /* 000001.. ........ ....1000 0....... */
            decode_extract_decode_Fmt_27(ctx, &u.f_decode26, insn);
            switch (insn & 0x0000e07f) {
            case 0x00000000:
                /* 000001.. ........ 000.1000 00000000 */
                /* ../target/hppa/insns.decode:169 */
                if (trans_ixtlbt(ctx, &u.f_decode26)) return true;
                break;
            }
            break;
        }
        break;
    case 0x2:
        /* 000010.. ........ ........ ........ */
        switch ((insn >> 8) & 0xf) {
        case 0x0:
            /* 000010.. ........ ....0000 ........ */
            decode_extract_rrr_cf_d(ctx, &u.f_rrr_cf_d, insn);
            switch ((insn >> 6) & 0x3) {
            case 0x0:
                /* 000010.. ........ ....0000 00...... */
                /* ../target/hppa/insns.decode:198 */
                if (trans_andcm(ctx, &u.f_rrr_cf_d)) return true;
                break;
            }
            break;
        case 0x1:
            /* 000010.. ........ ....0001 ........ */
            decode_extract_rrr(ctx, &u.f_rrr, insn);
            switch (insn & 0x0000f0e0) {
            case 0x00000000:
                /* 000010.. ........ 00000001 000..... */
                /* ../target/hppa/insns.decode:255 */
                if (trans_hsub_us(ctx, &u.f_rrr)) return true;
                break;
            case 0x00000040:
                /* 000010.. ........ 00000001 010..... */
                /* ../target/hppa/insns.decode:254 */
                if (trans_hsub_ss(ctx, &u.f_rrr)) return true;
                break;
            case 0x000000c0:
                /* 000010.. ........ 00000001 110..... */
                /* ../target/hppa/insns.decode:253 */
                if (trans_hsub(ctx, &u.f_rrr)) return true;
                break;
            }
            break;
        case 0x2:
            /* 000010.. ........ ....0010 ........ */
            switch ((insn >> 6) & 0x3) {
            case 0x0:
                /* 000010.. ........ ....0010 00...... */
                /* ../target/hppa/insns.decode:199 */
                decode_extract_rrr_cf_d(ctx, &u.f_rrr_cf_d, insn);
                if (trans_and(ctx, &u.f_rrr_cf_d)) return true;
                break;
            case 0x1:
                /* 000010.. ........ ....0010 01...... */
                /* ../target/hppa/insns.decode:200 */
                decode_extract_rrr_cf_d(ctx, &u.f_rrr_cf_d, insn);
                if (trans_or(ctx, &u.f_rrr_cf_d)) return true;
                break;
            case 0x2:
                /* 000010.. ........ ....0010 10...... */
                /* ../target/hppa/insns.decode:201 */
                decode_extract_rrr_cf_d(ctx, &u.f_rrr_cf_d, insn);
                if (trans_xor(ctx, &u.f_rrr_cf_d)) return true;
                break;
            case 0x3:
                /* 000010.. ........ ....0010 11...... */
                decode_extract_rrr(ctx, &u.f_rrr, insn);
                switch (insn & 0x0000f020) {
                case 0x00000000:
                    /* 000010.. ........ 00000010 110..... */
                    /* ../target/hppa/insns.decode:247 */
                    if (trans_havg(ctx, &u.f_rrr)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x3:
            /* 000010.. ........ ....0011 ........ */
            switch ((insn >> 6) & 0x3) {
            case 0x0:
                /* 000010.. ........ ....0011 00...... */
                decode_extract_rrr(ctx, &u.f_rrr, insn);
                switch (insn & 0x0000f020) {
                case 0x00000000:
                    /* 000010.. ........ 00000011 000..... */
                    /* ../target/hppa/insns.decode:245 */
                    if (trans_hadd_us(ctx, &u.f_rrr)) return true;
                    break;
                }
                break;
            case 0x1:
                /* 000010.. ........ ....0011 01...... */
                decode_extract_rrr(ctx, &u.f_rrr, insn);
                switch (insn & 0x0000f020) {
                case 0x00000000:
                    /* 000010.. ........ 00000011 010..... */
                    /* ../target/hppa/insns.decode:244 */
                    if (trans_hadd_ss(ctx, &u.f_rrr)) return true;
                    break;
                }
                break;
            case 0x2:
                /* 000010.. ........ ....0011 10...... */
                /* ../target/hppa/insns.decode:202 */
                decode_extract_rrr_cf_d(ctx, &u.f_rrr_cf_d, insn);
                if (trans_uxor(ctx, &u.f_rrr_cf_d)) return true;
                break;
            case 0x3:
                /* 000010.. ........ ....0011 11...... */
                decode_extract_rrr(ctx, &u.f_rrr, insn);
                switch (insn & 0x0000f020) {
                case 0x00000000:
                    /* 000010.. ........ 00000011 110..... */
                    /* ../target/hppa/insns.decode:243 */
                    if (trans_hadd(ctx, &u.f_rrr)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x4:
            /* 000010.. ........ ....0100 ........ */
            switch ((insn >> 6) & 0x3) {
            case 0x0:
                /* 000010.. ........ ....0100 00...... */
                /* ../target/hppa/insns.decode:219 */
                decode_extract_rrr_cf_d(ctx, &u.f_rrr_cf_d, insn);
                if (trans_sub(ctx, &u.f_rrr_cf_d)) return true;
                break;
            case 0x1:
                /* 000010.. ........ ....0100 01...... */
                decode_extract_rrr_cf(ctx, &u.f_rrr_cf, insn);
                switch ((insn >> 5) & 0x1) {
                case 0x0:
                    /* 000010.. ........ ....0100 010..... */
                    /* ../target/hppa/insns.decode:203 */
                    if (trans_ds(ctx, &u.f_rrr_cf)) return true;
                    break;
                }
                break;
            case 0x3:
                /* 000010.. ........ ....0100 11...... */
                /* ../target/hppa/insns.decode:221 */
                decode_extract_rrr_cf_d(ctx, &u.f_rrr_cf_d, insn);
                if (trans_sub_tc(ctx, &u.f_rrr_cf_d)) return true;
                break;
            }
            break;
        case 0x5:
            /* 000010.. ........ ....0101 ........ */
            if ((insn & 0x000000c0) == 0x00000000) {
                /* 000010.. ........ ....0101 00...... */
                /* ../target/hppa/insns.decode:224 */
                decode_extract_rrr_cf_d(ctx, &u.f_rrr_cf_d, insn);
                if (trans_sub_b(ctx, &u.f_rrr_cf_d)) return true;
            }
            if ((insn & 0x0000f020) == 0x00000000) {
                /* 000010.. ........ 00000101 ..0..... */
                /* ../target/hppa/insns.decode:225 */
                decode_extract_rrr_sh(ctx, &u.f_rrr_sh, insn);
                if (trans_hshradd(ctx, &u.f_rrr_sh)) return true;
            }
            break;
        case 0x6:
            /* 000010.. ........ ....0110 ........ */
            /* ../target/hppa/insns.decode:210 */
            decode_extract_rrr_cf_d_sh(ctx, &u.f_rrr_cf_d_sh, insn);
            if (trans_add(ctx, &u.f_rrr_cf_d_sh)) return true;
            break;
        case 0x7:
            /* 000010.. ........ ....0111 ........ */
            if ((insn & 0x000000c0) == 0x00000000) {
                /* 000010.. ........ ....0111 00...... */
                /* ../target/hppa/insns.decode:214 */
                decode_extract_rrr_cf_d_sh0(ctx, &u.f_rrr_cf_d_sh, insn);
                if (trans_add_c(ctx, &u.f_rrr_cf_d_sh)) return true;
            }
            if ((insn & 0x0000f020) == 0x00000000) {
                /* 000010.. ........ 00000111 ..0..... */
                /* ../target/hppa/insns.decode:215 */
                decode_extract_rrr_sh(ctx, &u.f_rrr_sh, insn);
                if (trans_hshladd(ctx, &u.f_rrr_sh)) return true;
            }
            break;
        case 0x8:
            /* 000010.. ........ ....1000 ........ */
            decode_extract_rrr_cf_d(ctx, &u.f_rrr_cf_d, insn);
            switch ((insn >> 6) & 0x3) {
            case 0x2:
                /* 000010.. ........ ....1000 10...... */
                /* ../target/hppa/insns.decode:204 */
                if (trans_cmpclr(ctx, &u.f_rrr_cf_d)) return true;
                break;
            }
            break;
        case 0x9:
            /* 000010.. ........ ....1001 ........ */
            decode_extract_rrr_cf_d(ctx, &u.f_rrr_cf_d, insn);
            switch ((insn >> 6) & 0x3) {
            case 0x2:
                /* 000010.. ........ ....1001 10...... */
                /* ../target/hppa/insns.decode:205 */
                if (trans_uaddcm(ctx, &u.f_rrr_cf_d)) return true;
                break;
            case 0x3:
                /* 000010.. ........ ....1001 11...... */
                /* ../target/hppa/insns.decode:206 */
                if (trans_uaddcm_tc(ctx, &u.f_rrr_cf_d)) return true;
                break;
            }
            break;
        case 0xa:
            /* 000010.. ........ ....1010 ........ */
            /* ../target/hppa/insns.decode:211 */
            decode_extract_rrr_cf_d_sh(ctx, &u.f_rrr_cf_d_sh, insn);
            if (trans_add_l(ctx, &u.f_rrr_cf_d_sh)) return true;
            break;
        case 0xb:
            /* 000010.. ........ ....1011 ........ */
            decode_extract_rr_cf_d(ctx, &u.f_rr_cf_d, insn);
            switch (insn & 0x001f00c0) {
            case 0x00000080:
                /* 000010.. ...00000 ....1011 10...... */
                /* ../target/hppa/insns.decode:207 */
                if (trans_dcor(ctx, &u.f_rr_cf_d)) return true;
                break;
            case 0x000000c0:
                /* 000010.. ...00000 ....1011 11...... */
                /* ../target/hppa/insns.decode:208 */
                if (trans_dcor_i(ctx, &u.f_rr_cf_d)) return true;
                break;
            }
            break;
        case 0xc:
            /* 000010.. ........ ....1100 ........ */
            decode_extract_rrr_cf_d(ctx, &u.f_rrr_cf_d, insn);
            switch ((insn >> 6) & 0x3) {
            case 0x0:
                /* 000010.. ........ ....1100 00...... */
                /* ../target/hppa/insns.decode:220 */
                if (trans_sub_tsv(ctx, &u.f_rrr_cf_d)) return true;
                break;
            case 0x3:
                /* 000010.. ........ ....1100 11...... */
                /* ../target/hppa/insns.decode:222 */
                if (trans_sub_tsv_tc(ctx, &u.f_rrr_cf_d)) return true;
                break;
            }
            break;
        case 0xd:
            /* 000010.. ........ ....1101 ........ */
            decode_extract_rrr_cf_d(ctx, &u.f_rrr_cf_d, insn);
            switch ((insn >> 6) & 0x3) {
            case 0x0:
                /* 000010.. ........ ....1101 00...... */
                /* ../target/hppa/insns.decode:227 */
                if (trans_sub_b_tsv(ctx, &u.f_rrr_cf_d)) return true;
                break;
            }
            break;
        case 0xe:
            /* 000010.. ........ ....1110 ........ */
            /* ../target/hppa/insns.decode:212 */
            decode_extract_rrr_cf_d_sh(ctx, &u.f_rrr_cf_d_sh, insn);
            if (trans_add_tsv(ctx, &u.f_rrr_cf_d_sh)) return true;
            break;
        case 0xf:
            /* 000010.. ........ ....1111 ........ */
            decode_extract_rrr_cf_d_sh0(ctx, &u.f_rrr_cf_d_sh, insn);
            switch ((insn >> 6) & 0x3) {
            case 0x0:
                /* 000010.. ........ ....1111 00...... */
                /* ../target/hppa/insns.decode:217 */
                if (trans_add_c_tsv(ctx, &u.f_rrr_cf_d_sh)) return true;
                break;
            }
            break;
        }
        break;
    case 0x3:
        /* 000011.. ........ ........ ........ */
        switch (insn & 0x00001300) {
        case 0x00000000:
            /* 000011.. ........ ...0..00 ........ */
            /* ../target/hppa/insns.decode:275 */
            decode_extract_ldstx(ctx, &u.f_ldst, insn);
            u.f_ldst.size = extract32(insn, 6, 2);
            if (trans_ld(ctx, &u.f_ldst)) return true;
            break;
        case 0x00000100:
            /* 000011.. ........ ...0..01 ........ */
            decode_extract_ldstx(ctx, &u.f_ldst, insn);
            switch ((insn >> 6) & 0x3) {
            case 0x0:
                /* 000011.. ........ ...0..01 00...... */
                /* ../target/hppa/insns.decode:284 */
                u.f_ldst.size = 3;
                if (trans_lda(ctx, &u.f_ldst)) return true;
                break;
            case 0x1:
                /* 000011.. ........ ...0..01 01...... */
                /* ../target/hppa/insns.decode:280 */
                u.f_ldst.size = 3;
                if (trans_ldc(ctx, &u.f_ldst)) return true;
                break;
            case 0x2:
                /* 000011.. ........ ...0..01 10...... */
                /* ../target/hppa/insns.decode:282 */
                u.f_ldst.size = 2;
                if (trans_lda(ctx, &u.f_ldst)) return true;
                break;
            case 0x3:
                /* 000011.. ........ ...0..01 11...... */
                /* ../target/hppa/insns.decode:278 */
                u.f_ldst.size = 2;
                if (trans_ldc(ctx, &u.f_ldst)) return true;
                break;
            }
            break;
        case 0x00001000:
            /* 000011.. ........ ...1..00 ........ */
            /* ../target/hppa/insns.decode:274 */
            decode_extract_ldim5(ctx, &u.f_ldst, insn);
            u.f_ldst.size = extract32(insn, 6, 2);
            if (trans_ld(ctx, &u.f_ldst)) return true;
            break;
        case 0x00001100:
            /* 000011.. ........ ...1..01 ........ */
            decode_extract_ldim5(ctx, &u.f_ldst, insn);
            switch ((insn >> 6) & 0x3) {
            case 0x0:
                /* 000011.. ........ ...1..01 00...... */
                /* ../target/hppa/insns.decode:283 */
                u.f_ldst.size = 3;
                if (trans_lda(ctx, &u.f_ldst)) return true;
                break;
            case 0x1:
                /* 000011.. ........ ...1..01 01...... */
                /* ../target/hppa/insns.decode:279 */
                u.f_ldst.size = 3;
                if (trans_ldc(ctx, &u.f_ldst)) return true;
                break;
            case 0x2:
                /* 000011.. ........ ...1..01 10...... */
                /* ../target/hppa/insns.decode:281 */
                u.f_ldst.size = 2;
                if (trans_lda(ctx, &u.f_ldst)) return true;
                break;
            case 0x3:
                /* 000011.. ........ ...1..01 11...... */
                /* ../target/hppa/insns.decode:277 */
                u.f_ldst.size = 2;
                if (trans_ldc(ctx, &u.f_ldst)) return true;
                break;
            }
            break;
        case 0x00001200:
            /* 000011.. ........ ...1..10 ........ */
            /* ../target/hppa/insns.decode:276 */
            decode_extract_stim5(ctx, &u.f_ldst, insn);
            u.f_ldst.size = extract32(insn, 6, 2);
            if (trans_st(ctx, &u.f_ldst)) return true;
            break;
        case 0x00001300:
            /* 000011.. ........ ...1..11 ........ */
            switch ((insn >> 6) & 0x3) {
            case 0x0:
                /* 000011.. ........ ...1..11 00...... */
                /* ../target/hppa/insns.decode:287 */
                decode_extract_decode_Fmt_44(ctx, &u.f_decode30, insn);
                if (trans_stby(ctx, &u.f_decode30)) return true;
                break;
            case 0x1:
                /* 000011.. ........ ...1..11 01...... */
                /* ../target/hppa/insns.decode:288 */
                decode_extract_decode_Fmt_44(ctx, &u.f_decode30, insn);
                if (trans_stdby(ctx, &u.f_decode30)) return true;
                break;
            case 0x2:
                /* 000011.. ........ ...1..11 10...... */
                /* ../target/hppa/insns.decode:285 */
                decode_extract_stim5(ctx, &u.f_ldst, insn);
                u.f_ldst.size = 2;
                if (trans_sta(ctx, &u.f_ldst)) return true;
                break;
            case 0x3:
                /* 000011.. ........ ...1..11 11...... */
                /* ../target/hppa/insns.decode:286 */
                decode_extract_stim5(ctx, &u.f_ldst, insn);
                u.f_ldst.size = 3;
                if (trans_sta(ctx, &u.f_ldst)) return true;
                break;
            }
            break;
        }
        break;
    case 0x5:
        /* 000101.. ........ ........ ........ */
        if ((insn & 0x0387e4be) == 0x00000000) {
            /* 00010100 0....000 000..0.. 0.00000. */
            decode_extract_decode_Fmt_13(ctx, &u.f_empty, insn);
            switch (insn & 0x00781b41) {
            case 0x00000100:
                /* 00010100 00000000 00000001 00000000 */
                /* ../target/hppa/insns.decode:641 */
                if (trans_diag_btlb(ctx, &u.f_empty)) return true;
                break;
            case 0x00000101:
                /* 00010100 00000000 00000001 00000001 */
                /* ../target/hppa/insns.decode:642 */
                if (trans_diag_cout(ctx, &u.f_empty)) return true;
                break;
            case 0x00001a00:
                /* 00010100 00000000 00011010 00000000 */
                /* ../target/hppa/insns.decode:645 */
                if (trans_diag_getshadowregs_pa1(ctx, &u.f_empty)) return true;
                break;
            case 0x00001a40:
                /* 00010100 00000000 00011010 01000000 */
                /* ../target/hppa/insns.decode:646 */
                if (trans_diag_putshadowregs_pa1(ctx, &u.f_empty)) return true;
                break;
            case 0x00701840:
                /* 00010100 01110000 00011000 01000000 */
                /* ../target/hppa/insns.decode:650 */
                if (trans_diag_putshadowregs_pa2(ctx, &u.f_empty)) return true;
                break;
            case 0x00781840:
                /* 00010100 01111000 00011000 01000000 */
                /* ../target/hppa/insns.decode:649 */
                if (trans_diag_getshadowregs_pa2(ctx, &u.f_empty)) return true;
                break;
            }
        }
        /* ../target/hppa/insns.decode:652 */
        decode_extract_decode_Fmt_100(ctx, &u.f_decode52, insn);
        if (trans_diag_unimp(ctx, &u.f_decode52)) return true;
        break;
    case 0x6:
        /* 000110.. ........ ........ ........ */
        decode_extract_mpyadd(ctx, &u.f_mpyadd, insn);
        switch ((insn >> 5) & 0x1) {
        case 0x0:
            /* 000110.. ........ ........ ..0..... */
            /* ../target/hppa/insns.decode:368 */
            if (trans_fmpyadd_f(ctx, &u.f_mpyadd)) return true;
            break;
        case 0x1:
            /* 000110.. ........ ........ ..1..... */
            /* ../target/hppa/insns.decode:369 */
            if (trans_fmpyadd_d(ctx, &u.f_mpyadd)) return true;
            break;
        }
        break;
    case 0x8:
        /* 001000.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:229 */
        decode_extract_decode_Fmt_35(ctx, &u.f_decode22, insn);
        if (trans_ldil(ctx, &u.f_decode22)) return true;
        break;
    case 0x9:
        /* 001001.. ........ ........ ........ */
        switch (insn & 0x00001380) {
        case 0x00000000:
            /* 001001.. ........ ...0..00 0....... */
            /* ../target/hppa/insns.decode:295 */
            decode_extract_fldstwx(ctx, &u.f_ldst, insn);
            if (trans_fldw(ctx, &u.f_ldst)) return true;
            break;
        case 0x00000200:
            /* 001001.. ........ ...0..10 0....... */
            /* ../target/hppa/insns.decode:297 */
            decode_extract_fldstwx(ctx, &u.f_ldst, insn);
            if (trans_fstw(ctx, &u.f_ldst)) return true;
            break;
        case 0x00001000:
            /* 001001.. ........ ...1..00 0....... */
            /* ../target/hppa/insns.decode:296 */
            decode_extract_fldstwi(ctx, &u.f_ldst, insn);
            if (trans_fldw(ctx, &u.f_ldst)) return true;
            break;
        case 0x00001200:
            /* 001001.. ........ ...1..10 0....... */
            /* ../target/hppa/insns.decode:298 */
            decode_extract_fldstwi(ctx, &u.f_ldst, insn);
            if (trans_fstw(ctx, &u.f_ldst)) return true;
            break;
        }
        break;
    case 0xa:
        /* 001010.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:230 */
        decode_extract_decode_Fmt_36(ctx, &u.f_decode27, insn);
        if (trans_addil(ctx, &u.f_decode27)) return true;
        break;
    case 0xb:
        /* 001011.. ........ ........ ........ */
        switch (insn & 0x000013c0) {
        case 0x00000000:
            /* 001011.. ........ ...0..00 00...... */
            /* ../target/hppa/insns.decode:305 */
            decode_extract_fldstdx(ctx, &u.f_ldst, insn);
            if (trans_fldd(ctx, &u.f_ldst)) return true;
            break;
        case 0x00000200:
            /* 001011.. ........ ...0..10 00...... */
            /* ../target/hppa/insns.decode:307 */
            decode_extract_fldstdx(ctx, &u.f_ldst, insn);
            if (trans_fstd(ctx, &u.f_ldst)) return true;
            break;
        case 0x00001000:
            /* 001011.. ........ ...1..00 00...... */
            /* ../target/hppa/insns.decode:306 */
            decode_extract_fldstdi(ctx, &u.f_ldst, insn);
            if (trans_fldd(ctx, &u.f_ldst)) return true;
            break;
        case 0x00001200:
            /* 001011.. ........ ...1..10 00...... */
            /* ../target/hppa/insns.decode:308 */
            decode_extract_fldstdi(ctx, &u.f_ldst, insn);
            if (trans_fstd(ctx, &u.f_ldst)) return true;
            break;
        }
        break;
    case 0xc:
        /* 001100.. ........ ........ ........ */
        switch ((insn >> 5) & 0xff) {
        case 0x0:
            /* 001100.. ........ ...00000 000..... */
            switch ((insn >> 13) & 0xff) {
            case 0x0:
                /* 001100.. ...00000 00000000 000..... */
                decode_extract_decode_Fmt_13(ctx, &u.f_empty, insn);
                switch (insn & 0x03e0001f) {
                case 0x00000000:
                    /* 00110000 00000000 00000000 00000000 */
                    /* ../target/hppa/insns.decode:499 */
                    if (trans_fid_f(ctx, &u.f_empty)) return true;
                    break;
                }
                break;
            case 0x2:
                /* 001100.. ...00000 01000000 000..... */
                /* ../target/hppa/insns.decode:501 */
                decode_extract_f0c_0(ctx, &u.f_fclass01, insn);
                if (trans_fcpy_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0x3:
                /* 001100.. ...00000 01100000 000..... */
                /* ../target/hppa/insns.decode:502 */
                decode_extract_f0c_0(ctx, &u.f_fclass01, insn);
                if (trans_fabs_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0x4:
                /* 001100.. ...00000 10000000 000..... */
                /* ../target/hppa/insns.decode:503 */
                decode_extract_f0c_0(ctx, &u.f_fclass01, insn);
                if (trans_fsqrt_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0x5:
                /* 001100.. ...00000 10100000 000..... */
                /* ../target/hppa/insns.decode:504 */
                decode_extract_f0c_0(ctx, &u.f_fclass01, insn);
                if (trans_frnd_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0x6:
                /* 001100.. ...00000 11000000 000..... */
                /* ../target/hppa/insns.decode:505 */
                decode_extract_f0c_0(ctx, &u.f_fclass01, insn);
                if (trans_fneg_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0x7:
                /* 001100.. ...00000 11100000 000..... */
                /* ../target/hppa/insns.decode:506 */
                decode_extract_f0c_0(ctx, &u.f_fclass01, insn);
                if (trans_fnegabs_f(ctx, &u.f_fclass01)) return true;
                break;
            }
            break;
        case 0x10:
            /* 001100.. ........ ...00010 000..... */
            decode_extract_f0c_1(ctx, &u.f_fclass01, insn);
            switch ((insn >> 13) & 0xff) {
            case 0x1:
                /* 001100.. ...00000 00100010 000..... */
                /* ../target/hppa/insns.decode:533 */
                if (trans_fcnv_f_d(ctx, &u.f_fclass01)) return true;
                break;
            case 0x4:
                /* 001100.. ...00000 10000010 000..... */
                /* ../target/hppa/insns.decode:539 */
                if (trans_fcnv_w_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0x5:
                /* 001100.. ...00000 10100010 000..... */
                /* ../target/hppa/insns.decode:541 */
                if (trans_fcnv_w_d(ctx, &u.f_fclass01)) return true;
                break;
            case 0x8:
                /* 001100.. ...00001 00000010 000..... */
                /* ../target/hppa/insns.decode:550 */
                if (trans_fcnv_f_w(ctx, &u.f_fclass01)) return true;
                break;
            case 0x9:
                /* 001100.. ...00001 00100010 000..... */
                /* ../target/hppa/insns.decode:552 */
                if (trans_fcnv_f_q(ctx, &u.f_fclass01)) return true;
                break;
            case 0xc:
                /* 001100.. ...00001 10000010 000..... */
                /* ../target/hppa/insns.decode:561 */
                if (trans_fcnv_t_f_w(ctx, &u.f_fclass01)) return true;
                break;
            case 0xd:
                /* 001100.. ...00001 10100010 000..... */
                /* ../target/hppa/insns.decode:563 */
                if (trans_fcnv_t_f_q(ctx, &u.f_fclass01)) return true;
                break;
            case 0x14:
                /* 001100.. ...00010 10000010 000..... */
                /* ../target/hppa/insns.decode:572 */
                if (trans_fcnv_uw_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0x15:
                /* 001100.. ...00010 10100010 000..... */
                /* ../target/hppa/insns.decode:574 */
                if (trans_fcnv_uw_d(ctx, &u.f_fclass01)) return true;
                break;
            case 0x18:
                /* 001100.. ...00011 00000010 000..... */
                /* ../target/hppa/insns.decode:583 */
                if (trans_fcnv_f_uw(ctx, &u.f_fclass01)) return true;
                break;
            case 0x19:
                /* 001100.. ...00011 00100010 000..... */
                /* ../target/hppa/insns.decode:585 */
                if (trans_fcnv_f_uq(ctx, &u.f_fclass01)) return true;
                break;
            case 0x1c:
                /* 001100.. ...00011 10000010 000..... */
                /* ../target/hppa/insns.decode:594 */
                if (trans_fcnv_t_f_uw(ctx, &u.f_fclass01)) return true;
                break;
            case 0x1d:
                /* 001100.. ...00011 10100010 000..... */
                /* ../target/hppa/insns.decode:596 */
                if (trans_fcnv_t_f_uq(ctx, &u.f_fclass01)) return true;
                break;
            }
            break;
        case 0x20:
            /* 001100.. ........ ...00100 000..... */
            /* ../target/hppa/insns.decode:608 */
            decode_extract_f0c_2(ctx, &u.f_fclass2, insn);
            if (trans_fcmp_f(ctx, &u.f_fclass2)) return true;
            break;
        case 0x21:
            /* 001100.. ........ ...00100 001..... */
            decode_extract_decode_Fmt_98(ctx, &u.f_decode51, insn);
            switch ((insn >> 16) & 0x3ff) {
            case 0x0:
                /* 00110000 00000000 ...00100 001..... */
                /* ../target/hppa/insns.decode:606 */
                if (trans_ftest(ctx, &u.f_decode51)) return true;
                break;
            }
            break;
        case 0x30:
            /* 001100.. ........ ...00110 000..... */
            decode_extract_f0c_3(ctx, &u.f_fclass3, insn);
            switch ((insn >> 13) & 0x7) {
            case 0x0:
                /* 001100.. ........ 00000110 000..... */
                /* ../target/hppa/insns.decode:616 */
                if (trans_fadd_f(ctx, &u.f_fclass3)) return true;
                break;
            case 0x1:
                /* 001100.. ........ 00100110 000..... */
                /* ../target/hppa/insns.decode:617 */
                if (trans_fsub_f(ctx, &u.f_fclass3)) return true;
                break;
            case 0x2:
                /* 001100.. ........ 01000110 000..... */
                /* ../target/hppa/insns.decode:618 */
                if (trans_fmpy_f(ctx, &u.f_fclass3)) return true;
                break;
            case 0x3:
                /* 001100.. ........ 01100110 000..... */
                /* ../target/hppa/insns.decode:619 */
                if (trans_fdiv_f(ctx, &u.f_fclass3)) return true;
                break;
            }
            break;
        case 0x40:
            /* 001100.. ........ ...01000 000..... */
            decode_extract_f0c_0(ctx, &u.f_fclass01, insn);
            switch ((insn >> 13) & 0xff) {
            case 0x2:
                /* 001100.. ...00000 01001000 000..... */
                /* ../target/hppa/insns.decode:508 */
                if (trans_fcpy_d(ctx, &u.f_fclass01)) return true;
                break;
            case 0x3:
                /* 001100.. ...00000 01101000 000..... */
                /* ../target/hppa/insns.decode:509 */
                if (trans_fabs_d(ctx, &u.f_fclass01)) return true;
                break;
            case 0x4:
                /* 001100.. ...00000 10001000 000..... */
                /* ../target/hppa/insns.decode:510 */
                if (trans_fsqrt_d(ctx, &u.f_fclass01)) return true;
                break;
            case 0x5:
                /* 001100.. ...00000 10101000 000..... */
                /* ../target/hppa/insns.decode:511 */
                if (trans_frnd_d(ctx, &u.f_fclass01)) return true;
                break;
            case 0x6:
                /* 001100.. ...00000 11001000 000..... */
                /* ../target/hppa/insns.decode:512 */
                if (trans_fneg_d(ctx, &u.f_fclass01)) return true;
                break;
            case 0x7:
                /* 001100.. ...00000 11101000 000..... */
                /* ../target/hppa/insns.decode:513 */
                if (trans_fnegabs_d(ctx, &u.f_fclass01)) return true;
                break;
            }
            break;
        case 0x50:
            /* 001100.. ........ ...01010 000..... */
            decode_extract_f0c_1(ctx, &u.f_fclass01, insn);
            switch ((insn >> 13) & 0xff) {
            case 0x0:
                /* 001100.. ...00000 00001010 000..... */
                /* ../target/hppa/insns.decode:532 */
                if (trans_fcnv_d_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0x4:
                /* 001100.. ...00000 10001010 000..... */
                /* ../target/hppa/insns.decode:540 */
                if (trans_fcnv_q_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0x5:
                /* 001100.. ...00000 10101010 000..... */
                /* ../target/hppa/insns.decode:542 */
                if (trans_fcnv_q_d(ctx, &u.f_fclass01)) return true;
                break;
            case 0x8:
                /* 001100.. ...00001 00001010 000..... */
                /* ../target/hppa/insns.decode:551 */
                if (trans_fcnv_d_w(ctx, &u.f_fclass01)) return true;
                break;
            case 0x9:
                /* 001100.. ...00001 00101010 000..... */
                /* ../target/hppa/insns.decode:553 */
                if (trans_fcnv_d_q(ctx, &u.f_fclass01)) return true;
                break;
            case 0xc:
                /* 001100.. ...00001 10001010 000..... */
                /* ../target/hppa/insns.decode:562 */
                if (trans_fcnv_t_d_w(ctx, &u.f_fclass01)) return true;
                break;
            case 0xd:
                /* 001100.. ...00001 10101010 000..... */
                /* ../target/hppa/insns.decode:564 */
                if (trans_fcnv_t_d_q(ctx, &u.f_fclass01)) return true;
                break;
            case 0x14:
                /* 001100.. ...00010 10001010 000..... */
                /* ../target/hppa/insns.decode:573 */
                if (trans_fcnv_uq_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0x15:
                /* 001100.. ...00010 10101010 000..... */
                /* ../target/hppa/insns.decode:575 */
                if (trans_fcnv_uq_d(ctx, &u.f_fclass01)) return true;
                break;
            case 0x18:
                /* 001100.. ...00011 00001010 000..... */
                /* ../target/hppa/insns.decode:584 */
                if (trans_fcnv_d_uw(ctx, &u.f_fclass01)) return true;
                break;
            case 0x19:
                /* 001100.. ...00011 00101010 000..... */
                /* ../target/hppa/insns.decode:586 */
                if (trans_fcnv_d_uq(ctx, &u.f_fclass01)) return true;
                break;
            case 0x1c:
                /* 001100.. ...00011 10001010 000..... */
                /* ../target/hppa/insns.decode:595 */
                if (trans_fcnv_t_d_uw(ctx, &u.f_fclass01)) return true;
                break;
            case 0x1d:
                /* 001100.. ...00011 10101010 000..... */
                /* ../target/hppa/insns.decode:597 */
                if (trans_fcnv_t_d_uq(ctx, &u.f_fclass01)) return true;
                break;
            }
            break;
        case 0x60:
            /* 001100.. ........ ...01100 000..... */
            /* ../target/hppa/insns.decode:609 */
            decode_extract_f0c_2(ctx, &u.f_fclass2, insn);
            if (trans_fcmp_d(ctx, &u.f_fclass2)) return true;
            break;
        case 0x70:
            /* 001100.. ........ ...01110 000..... */
            decode_extract_f0c_3(ctx, &u.f_fclass3, insn);
            switch ((insn >> 13) & 0x7) {
            case 0x0:
                /* 001100.. ........ 00001110 000..... */
                /* ../target/hppa/insns.decode:621 */
                if (trans_fadd_d(ctx, &u.f_fclass3)) return true;
                break;
            case 0x1:
                /* 001100.. ........ 00101110 000..... */
                /* ../target/hppa/insns.decode:622 */
                if (trans_fsub_d(ctx, &u.f_fclass3)) return true;
                break;
            case 0x2:
                /* 001100.. ........ 01001110 000..... */
                /* ../target/hppa/insns.decode:623 */
                if (trans_fmpy_d(ctx, &u.f_fclass3)) return true;
                break;
            case 0x3:
                /* 001100.. ........ 01101110 000..... */
                /* ../target/hppa/insns.decode:624 */
                if (trans_fdiv_d(ctx, &u.f_fclass3)) return true;
                break;
            }
            break;
        }
        break;
    case 0xd:
        /* 001101.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:231 */
        decode_extract_decode_Fmt_37(ctx, &u.f_decode28, insn);
        if (trans_ldo(ctx, &u.f_decode28)) return true;
        break;
    case 0xe:
        /* 001110.. ........ ........ ........ */
        switch (insn & 0x00000f20) {
        case 0x00000000:
            /* 001110.. ........ ....0000 ..0..... */
            decode_extract_f0e_f_0(ctx, &u.f_fclass01, insn);
            switch ((insn >> 12) & 0x1ff) {
            case 0x4:
                /* 001110.. ...00000 01000000 ..0..... */
                /* ../target/hppa/insns.decode:515 */
                if (trans_fcpy_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0x6:
                /* 001110.. ...00000 01100000 ..0..... */
                /* ../target/hppa/insns.decode:516 */
                if (trans_fabs_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0x8:
                /* 001110.. ...00000 10000000 ..0..... */
                /* ../target/hppa/insns.decode:517 */
                if (trans_fsqrt_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0xa:
                /* 001110.. ...00000 10100000 ..0..... */
                /* ../target/hppa/insns.decode:518 */
                if (trans_frnd_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0xc:
                /* 001110.. ...00000 11000000 ..0..... */
                /* ../target/hppa/insns.decode:519 */
                if (trans_fneg_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0xe:
                /* 001110.. ...00000 11100000 ..0..... */
                /* ../target/hppa/insns.decode:520 */
                if (trans_fnegabs_f(ctx, &u.f_fclass01)) return true;
                break;
            }
            break;
        case 0x00000200:
            /* 001110.. ........ ....0010 ..0..... */
            switch ((insn >> 12) & 0x1ff) {
            case 0x2:
                /* 001110.. ...00000 00100010 ..0..... */
                decode_extract_f0e_fd_1(ctx, &u.f_fclass01, insn);
                switch ((insn >> 6) & 0x1) {
                case 0x0:
                    /* 001110.. ...00000 00100010 .00..... */
                    /* ../target/hppa/insns.decode:536 */
                    if (trans_fcnv_f_d(ctx, &u.f_fclass01)) return true;
                    break;
                }
                break;
            case 0x8:
                /* 001110.. ...00000 10000010 ..0..... */
                /* ../target/hppa/insns.decode:544 */
                decode_extract_f0e_ff_1(ctx, &u.f_fclass01, insn);
                if (trans_fcnv_w_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0xa:
                /* 001110.. ...00000 10100010 ..0..... */
                decode_extract_f0e_fd_1(ctx, &u.f_fclass01, insn);
                switch ((insn >> 6) & 0x1) {
                case 0x0:
                    /* 001110.. ...00000 10100010 .00..... */
                    /* ../target/hppa/insns.decode:546 */
                    if (trans_fcnv_w_d(ctx, &u.f_fclass01)) return true;
                    break;
                }
                break;
            case 0x10:
                /* 001110.. ...00001 00000010 ..0..... */
                /* ../target/hppa/insns.decode:555 */
                decode_extract_f0e_ff_1(ctx, &u.f_fclass01, insn);
                if (trans_fcnv_f_w(ctx, &u.f_fclass01)) return true;
                break;
            case 0x12:
                /* 001110.. ...00001 00100010 ..0..... */
                decode_extract_f0e_fd_1(ctx, &u.f_fclass01, insn);
                switch ((insn >> 6) & 0x1) {
                case 0x0:
                    /* 001110.. ...00001 00100010 .00..... */
                    /* ../target/hppa/insns.decode:557 */
                    if (trans_fcnv_f_q(ctx, &u.f_fclass01)) return true;
                    break;
                }
                break;
            case 0x18:
                /* 001110.. ...00001 10000010 ..0..... */
                /* ../target/hppa/insns.decode:566 */
                decode_extract_f0e_ff_1(ctx, &u.f_fclass01, insn);
                if (trans_fcnv_t_f_w(ctx, &u.f_fclass01)) return true;
                break;
            case 0x1a:
                /* 001110.. ...00001 10100010 ..0..... */
                decode_extract_f0e_fd_1(ctx, &u.f_fclass01, insn);
                switch ((insn >> 6) & 0x1) {
                case 0x0:
                    /* 001110.. ...00001 10100010 .00..... */
                    /* ../target/hppa/insns.decode:568 */
                    if (trans_fcnv_t_f_q(ctx, &u.f_fclass01)) return true;
                    break;
                }
                break;
            case 0x28:
                /* 001110.. ...00010 10000010 ..0..... */
                /* ../target/hppa/insns.decode:577 */
                decode_extract_f0e_ff_1(ctx, &u.f_fclass01, insn);
                if (trans_fcnv_uw_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0x2a:
                /* 001110.. ...00010 10100010 ..0..... */
                decode_extract_f0e_fd_1(ctx, &u.f_fclass01, insn);
                switch ((insn >> 6) & 0x1) {
                case 0x0:
                    /* 001110.. ...00010 10100010 .00..... */
                    /* ../target/hppa/insns.decode:579 */
                    if (trans_fcnv_uw_d(ctx, &u.f_fclass01)) return true;
                    break;
                }
                break;
            case 0x30:
                /* 001110.. ...00011 00000010 ..0..... */
                /* ../target/hppa/insns.decode:588 */
                decode_extract_f0e_ff_1(ctx, &u.f_fclass01, insn);
                if (trans_fcnv_f_uw(ctx, &u.f_fclass01)) return true;
                break;
            case 0x32:
                /* 001110.. ...00011 00100010 ..0..... */
                decode_extract_f0e_fd_1(ctx, &u.f_fclass01, insn);
                switch ((insn >> 6) & 0x1) {
                case 0x0:
                    /* 001110.. ...00011 00100010 .00..... */
                    /* ../target/hppa/insns.decode:590 */
                    if (trans_fcnv_f_uq(ctx, &u.f_fclass01)) return true;
                    break;
                }
                break;
            case 0x38:
                /* 001110.. ...00011 10000010 ..0..... */
                /* ../target/hppa/insns.decode:599 */
                decode_extract_f0e_ff_1(ctx, &u.f_fclass01, insn);
                if (trans_fcnv_t_f_uw(ctx, &u.f_fclass01)) return true;
                break;
            case 0x3a:
                /* 001110.. ...00011 10100010 ..0..... */
                decode_extract_f0e_fd_1(ctx, &u.f_fclass01, insn);
                switch ((insn >> 6) & 0x1) {
                case 0x0:
                    /* 001110.. ...00011 10100010 .00..... */
                    /* ../target/hppa/insns.decode:601 */
                    if (trans_fcnv_t_f_uq(ctx, &u.f_fclass01)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x00000400:
            /* 001110.. ........ ....0100 ..0..... */
            decode_extract_f0e_f_2(ctx, &u.f_fclass2, insn);
            switch ((insn >> 6) & 0x1) {
            case 0x0:
                /* 001110.. ........ ....0100 .00..... */
                /* ../target/hppa/insns.decode:611 */
                if (trans_fcmp_f(ctx, &u.f_fclass2)) return true;
                break;
            }
            break;
        case 0x00000600:
            /* 001110.. ........ ....0110 ..0..... */
            decode_extract_f0e_f_3(ctx, &u.f_fclass3, insn);
            switch ((insn >> 13) & 0x7) {
            case 0x0:
                /* 001110.. ........ 000.0110 ..0..... */
                /* ../target/hppa/insns.decode:626 */
                if (trans_fadd_f(ctx, &u.f_fclass3)) return true;
                break;
            case 0x1:
                /* 001110.. ........ 001.0110 ..0..... */
                /* ../target/hppa/insns.decode:627 */
                if (trans_fsub_f(ctx, &u.f_fclass3)) return true;
                break;
            case 0x2:
                /* 001110.. ........ 010.0110 ..0..... */
                /* ../target/hppa/insns.decode:628 */
                if (trans_fmpy_f(ctx, &u.f_fclass3)) return true;
                break;
            case 0x3:
                /* 001110.. ........ 011.0110 ..0..... */
                /* ../target/hppa/insns.decode:629 */
                if (trans_fdiv_f(ctx, &u.f_fclass3)) return true;
                break;
            }
            break;
        case 0x00000700:
            /* 001110.. ........ ....0111 ..0..... */
            decode_extract_decode_Fmt_99(ctx, &u.f_rrr, insn);
            switch (insn & 0x0000e040) {
            case 0x00004000:
                /* 001110.. ........ 010.0111 .00..... */
                /* ../target/hppa/insns.decode:636 */
                if (trans_xmpyu(ctx, &u.f_rrr)) return true;
                break;
            }
            break;
        case 0x00000800:
            /* 001110.. ........ ....1000 ..0..... */
            decode_extract_f0e_d_0(ctx, &u.f_fclass01, insn);
            switch (insn & 0x001ff0c0) {
            case 0x00004000:
                /* 001110.. ...00000 01001000 000..... */
                /* ../target/hppa/insns.decode:522 */
                if (trans_fcpy_d(ctx, &u.f_fclass01)) return true;
                break;
            case 0x00006000:
                /* 001110.. ...00000 01101000 000..... */
                /* ../target/hppa/insns.decode:523 */
                if (trans_fabs_d(ctx, &u.f_fclass01)) return true;
                break;
            case 0x00008000:
                /* 001110.. ...00000 10001000 000..... */
                /* ../target/hppa/insns.decode:524 */
                if (trans_fsqrt_d(ctx, &u.f_fclass01)) return true;
                break;
            case 0x0000a000:
                /* 001110.. ...00000 10101000 000..... */
                /* ../target/hppa/insns.decode:525 */
                if (trans_frnd_d(ctx, &u.f_fclass01)) return true;
                break;
            case 0x0000c000:
                /* 001110.. ...00000 11001000 000..... */
                /* ../target/hppa/insns.decode:526 */
                if (trans_fneg_d(ctx, &u.f_fclass01)) return true;
                break;
            case 0x0000e000:
                /* 001110.. ...00000 11101000 000..... */
                /* ../target/hppa/insns.decode:527 */
                if (trans_fnegabs_d(ctx, &u.f_fclass01)) return true;
                break;
            }
            break;
        case 0x00000a00:
            /* 001110.. ........ ....1010 ..0..... */
            switch (insn & 0x001ff080) {
            case 0x00000000:
                /* 001110.. ...00000 00001010 0.0..... */
                /* ../target/hppa/insns.decode:535 */
                decode_extract_f0e_df_1(ctx, &u.f_fclass01, insn);
                if (trans_fcnv_d_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0x00008000:
                /* 001110.. ...00000 10001010 0.0..... */
                /* ../target/hppa/insns.decode:545 */
                decode_extract_f0e_df_1(ctx, &u.f_fclass01, insn);
                if (trans_fcnv_q_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0x0000a000:
                /* 001110.. ...00000 10101010 0.0..... */
                decode_extract_f0e_dd_1(ctx, &u.f_fclass01, insn);
                switch ((insn >> 6) & 0x1) {
                case 0x0:
                    /* 001110.. ...00000 10101010 000..... */
                    /* ../target/hppa/insns.decode:547 */
                    if (trans_fcnv_q_d(ctx, &u.f_fclass01)) return true;
                    break;
                }
                break;
            case 0x00010000:
                /* 001110.. ...00001 00001010 0.0..... */
                /* ../target/hppa/insns.decode:556 */
                decode_extract_f0e_df_1(ctx, &u.f_fclass01, insn);
                if (trans_fcnv_d_w(ctx, &u.f_fclass01)) return true;
                break;
            case 0x00012000:
                /* 001110.. ...00001 00101010 0.0..... */
                decode_extract_f0e_dd_1(ctx, &u.f_fclass01, insn);
                switch ((insn >> 6) & 0x1) {
                case 0x0:
                    /* 001110.. ...00001 00101010 000..... */
                    /* ../target/hppa/insns.decode:558 */
                    if (trans_fcnv_d_q(ctx, &u.f_fclass01)) return true;
                    break;
                }
                break;
            case 0x00018000:
                /* 001110.. ...00001 10001010 0.0..... */
                /* ../target/hppa/insns.decode:567 */
                decode_extract_f0e_df_1(ctx, &u.f_fclass01, insn);
                if (trans_fcnv_t_d_w(ctx, &u.f_fclass01)) return true;
                break;
            case 0x0001a000:
                /* 001110.. ...00001 10101010 0.0..... */
                decode_extract_f0e_dd_1(ctx, &u.f_fclass01, insn);
                switch ((insn >> 6) & 0x1) {
                case 0x0:
                    /* 001110.. ...00001 10101010 000..... */
                    /* ../target/hppa/insns.decode:569 */
                    if (trans_fcnv_t_d_q(ctx, &u.f_fclass01)) return true;
                    break;
                }
                break;
            case 0x00028000:
                /* 001110.. ...00010 10001010 0.0..... */
                /* ../target/hppa/insns.decode:578 */
                decode_extract_f0e_df_1(ctx, &u.f_fclass01, insn);
                if (trans_fcnv_uq_f(ctx, &u.f_fclass01)) return true;
                break;
            case 0x0002a000:
                /* 001110.. ...00010 10101010 0.0..... */
                decode_extract_f0e_dd_1(ctx, &u.f_fclass01, insn);
                switch ((insn >> 6) & 0x1) {
                case 0x0:
                    /* 001110.. ...00010 10101010 000..... */
                    /* ../target/hppa/insns.decode:580 */
                    if (trans_fcnv_uq_d(ctx, &u.f_fclass01)) return true;
                    break;
                }
                break;
            case 0x00030000:
                /* 001110.. ...00011 00001010 0.0..... */
                /* ../target/hppa/insns.decode:589 */
                decode_extract_f0e_df_1(ctx, &u.f_fclass01, insn);
                if (trans_fcnv_d_uw(ctx, &u.f_fclass01)) return true;
                break;
            case 0x00032000:
                /* 001110.. ...00011 00101010 0.0..... */
                decode_extract_f0e_dd_1(ctx, &u.f_fclass01, insn);
                switch ((insn >> 6) & 0x1) {
                case 0x0:
                    /* 001110.. ...00011 00101010 000..... */
                    /* ../target/hppa/insns.decode:591 */
                    if (trans_fcnv_d_uq(ctx, &u.f_fclass01)) return true;
                    break;
                }
                break;
            case 0x00038000:
                /* 001110.. ...00011 10001010 0.0..... */
                /* ../target/hppa/insns.decode:600 */
                decode_extract_f0e_df_1(ctx, &u.f_fclass01, insn);
                if (trans_fcnv_t_d_uw(ctx, &u.f_fclass01)) return true;
                break;
            case 0x0003a000:
                /* 001110.. ...00011 10101010 0.0..... */
                decode_extract_f0e_dd_1(ctx, &u.f_fclass01, insn);
                switch ((insn >> 6) & 0x1) {
                case 0x0:
                    /* 001110.. ...00011 10101010 000..... */
                    /* ../target/hppa/insns.decode:602 */
                    if (trans_fcnv_t_d_uq(ctx, &u.f_fclass01)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x00000c00:
            /* 001110.. ........ ....1100 ..0..... */
            decode_extract_f0e_d_2(ctx, &u.f_fclass2, insn);
            switch (insn & 0x000010c0) {
            case 0x00000000:
                /* 001110.. ........ ...01100 000..... */
                /* ../target/hppa/insns.decode:612 */
                if (trans_fcmp_d(ctx, &u.f_fclass2)) return true;
                break;
            }
            break;
        case 0x00000e00:
            /* 001110.. ........ ....1110 ..0..... */
            decode_extract_f0e_d_3(ctx, &u.f_fclass3, insn);
            switch (insn & 0x0000f0c0) {
            case 0x00000000:
                /* 001110.. ........ 00001110 000..... */
                /* ../target/hppa/insns.decode:631 */
                if (trans_fadd_d(ctx, &u.f_fclass3)) return true;
                break;
            case 0x00002000:
                /* 001110.. ........ 00101110 000..... */
                /* ../target/hppa/insns.decode:632 */
                if (trans_fsub_d(ctx, &u.f_fclass3)) return true;
                break;
            case 0x00004000:
                /* 001110.. ........ 01001110 000..... */
                /* ../target/hppa/insns.decode:633 */
                if (trans_fmpy_d(ctx, &u.f_fclass3)) return true;
                break;
            case 0x00006000:
                /* 001110.. ........ 01101110 000..... */
                /* ../target/hppa/insns.decode:634 */
                if (trans_fdiv_d(ctx, &u.f_fclass3)) return true;
                break;
            }
            break;
        }
        break;
    case 0x10:
        /* 010000.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:328 */
        decode_extract_ldstim14(ctx, &u.f_ldst, insn);
        u.f_ldst.size = 0;
        if (trans_ld(ctx, &u.f_ldst)) return true;
        break;
    case 0x11:
        /* 010001.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:329 */
        decode_extract_ldstim14(ctx, &u.f_ldst, insn);
        u.f_ldst.size = 1;
        if (trans_ld(ctx, &u.f_ldst)) return true;
        break;
    case 0x12:
        /* 010010.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:330 */
        decode_extract_ldstim14(ctx, &u.f_ldst, insn);
        u.f_ldst.size = 2;
        if (trans_ld(ctx, &u.f_ldst)) return true;
        break;
    case 0x13:
        /* 010011.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:331 */
        decode_extract_ldstim14m(ctx, &u.f_ldst, insn);
        u.f_ldst.size = 2;
        if (trans_ld(ctx, &u.f_ldst)) return true;
        break;
    case 0x14:
        /* 010100.. ........ ........ ........ */
        decode_extract_ldstim11(ctx, &u.f_ldst, insn);
        switch ((insn >> 1) & 0x1) {
        case 0x0:
            /* 010100.. ........ ........ ......0. */
            /* ../target/hppa/insns.decode:355 */
            if (trans_ld(ctx, &u.f_ldst)) return true;
            break;
        case 0x1:
            /* 010100.. ........ ........ ......1. */
            /* ../target/hppa/insns.decode:356 */
            if (trans_fldd(ctx, &u.f_ldst)) return true;
            break;
        }
        break;
    case 0x16:
        /* 010110.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:341 */
        decode_extract_decode_Fmt_53(ctx, &u.f_ldst, insn);
        if (trans_fldw(ctx, &u.f_ldst)) return true;
        break;
    case 0x17:
        /* 010111.. ........ ........ ........ */
        switch ((insn >> 2) & 0x1) {
        case 0x0:
            /* 010111.. ........ ........ .....0.. */
            /* ../target/hppa/insns.decode:344 */
            decode_extract_decode_Fmt_54(ctx, &u.f_ldst, insn);
            if (trans_fldw(ctx, &u.f_ldst)) return true;
            break;
        case 0x1:
            /* 010111.. ........ ........ .....1.. */
            decode_extract_ldstim12m(ctx, &u.f_ldst, insn);
            switch ((insn >> 1) & 0x1) {
            case 0x0:
                /* 010111.. ........ ........ .....10. */
                /* ../target/hppa/insns.decode:332 */
                u.f_ldst.size = 2;
                if (trans_ld(ctx, &u.f_ldst)) return true;
                break;
            }
            break;
        }
        break;
    case 0x18:
        /* 011000.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:335 */
        decode_extract_ldstim14(ctx, &u.f_ldst, insn);
        u.f_ldst.size = 0;
        if (trans_st(ctx, &u.f_ldst)) return true;
        break;
    case 0x19:
        /* 011001.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:336 */
        decode_extract_ldstim14(ctx, &u.f_ldst, insn);
        u.f_ldst.size = 1;
        if (trans_st(ctx, &u.f_ldst)) return true;
        break;
    case 0x1a:
        /* 011010.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:337 */
        decode_extract_ldstim14(ctx, &u.f_ldst, insn);
        u.f_ldst.size = 2;
        if (trans_st(ctx, &u.f_ldst)) return true;
        break;
    case 0x1b:
        /* 011011.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:338 */
        decode_extract_ldstim14m(ctx, &u.f_ldst, insn);
        u.f_ldst.size = 2;
        if (trans_st(ctx, &u.f_ldst)) return true;
        break;
    case 0x1c:
        /* 011100.. ........ ........ ........ */
        decode_extract_ldstim11(ctx, &u.f_ldst, insn);
        switch ((insn >> 1) & 0x1) {
        case 0x0:
            /* 011100.. ........ ........ ......0. */
            /* ../target/hppa/insns.decode:358 */
            if (trans_st(ctx, &u.f_ldst)) return true;
            break;
        case 0x1:
            /* 011100.. ........ ........ ......1. */
            /* ../target/hppa/insns.decode:359 */
            if (trans_fstd(ctx, &u.f_ldst)) return true;
            break;
        }
        break;
    case 0x1e:
        /* 011110.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:348 */
        decode_extract_decode_Fmt_55(ctx, &u.f_ldst, insn);
        if (trans_fstw(ctx, &u.f_ldst)) return true;
        break;
    case 0x1f:
        /* 011111.. ........ ........ ........ */
        switch ((insn >> 2) & 0x1) {
        case 0x0:
            /* 011111.. ........ ........ .....0.. */
            /* ../target/hppa/insns.decode:351 */
            decode_extract_decode_Fmt_56(ctx, &u.f_ldst, insn);
            if (trans_fstw(ctx, &u.f_ldst)) return true;
            break;
        case 0x1:
            /* 011111.. ........ ........ .....1.. */
            decode_extract_ldstim12m(ctx, &u.f_ldst, insn);
            switch ((insn >> 1) & 0x1) {
            case 0x0:
                /* 011111.. ........ ........ .....10. */
                /* ../target/hppa/insns.decode:339 */
                u.f_ldst.size = 2;
                if (trans_st(ctx, &u.f_ldst)) return true;
                break;
            }
            break;
        }
        break;
    case 0x20:
        /* 100000.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:385 */
        decode_extract_rrb_cdf(ctx, &u.f_rrb_c_d_f, insn);
        u.f_rrb_c_d_f.d = 0;
        u.f_rrb_c_d_f.f = 0;
        if (trans_cmpb(ctx, &u.f_rrb_c_d_f)) return true;
        break;
    case 0x21:
        /* 100001.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:389 */
        decode_extract_rib_cdf(ctx, &u.f_rib_c_d_f, insn);
        u.f_rib_c_d_f.d = 0;
        u.f_rib_c_d_f.f = 0;
        if (trans_cmpbi(ctx, &u.f_rib_c_d_f)) return true;
        break;
    case 0x22:
        /* 100010.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:386 */
        decode_extract_rrb_cdf(ctx, &u.f_rrb_c_d_f, insn);
        u.f_rrb_c_d_f.d = 0;
        u.f_rrb_c_d_f.f = 1;
        if (trans_cmpb(ctx, &u.f_rrb_c_d_f)) return true;
        break;
    case 0x23:
        /* 100011.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:390 */
        decode_extract_rib_cdf(ctx, &u.f_rib_c_d_f, insn);
        u.f_rib_c_d_f.d = 0;
        u.f_rib_c_d_f.f = 1;
        if (trans_cmpbi(ctx, &u.f_rib_c_d_f)) return true;
        break;
    case 0x24:
        /* 100100.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:241 */
        decode_extract_rri_cf_d(ctx, &u.f_rri_cf_d, insn);
        if (trans_cmpiclr(ctx, &u.f_rri_cf_d)) return true;
        break;
    case 0x25:
        /* 100101.. ........ ........ ........ */
        decode_extract_rri_cf(ctx, &u.f_rri_cf, insn);
        switch ((insn >> 11) & 0x1) {
        case 0x0:
            /* 100101.. ........ ....0... ........ */
            /* ../target/hppa/insns.decode:238 */
            if (trans_subi(ctx, &u.f_rri_cf)) return true;
            break;
        case 0x1:
            /* 100101.. ........ ....1... ........ */
            /* ../target/hppa/insns.decode:239 */
            if (trans_subi_tsv(ctx, &u.f_rri_cf)) return true;
            break;
        }
        break;
    case 0x26:
        /* 100110.. ........ ........ ........ */
        decode_extract_mpyadd(ctx, &u.f_mpyadd, insn);
        switch ((insn >> 5) & 0x1) {
        case 0x0:
            /* 100110.. ........ ........ ..0..... */
            /* ../target/hppa/insns.decode:370 */
            if (trans_fmpysub_f(ctx, &u.f_mpyadd)) return true;
            break;
        case 0x1:
            /* 100110.. ........ ........ ..1..... */
            /* ../target/hppa/insns.decode:371 */
            if (trans_fmpysub_d(ctx, &u.f_mpyadd)) return true;
            break;
        }
        break;
    case 0x27:
        /* 100111.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:387 */
        decode_extract_rrb_cdf(ctx, &u.f_rrb_c_d_f, insn);
        u.f_rrb_c_d_f.d = 1;
        u.f_rrb_c_d_f.f = 0;
        if (trans_cmpb(ctx, &u.f_rrb_c_d_f)) return true;
        break;
    case 0x28:
        /* 101000.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:394 */
        decode_extract_rrb_cf(ctx, &u.f_rrb_c_f, insn);
        u.f_rrb_c_f.f = 0;
        if (trans_addb(ctx, &u.f_rrb_c_f)) return true;
        break;
    case 0x29:
        /* 101001.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:396 */
        decode_extract_rib_cf(ctx, &u.f_rib_c_f, insn);
        u.f_rib_c_f.f = 0;
        if (trans_addbi(ctx, &u.f_rib_c_f)) return true;
        break;
    case 0x2a:
        /* 101010.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:395 */
        decode_extract_rrb_cf(ctx, &u.f_rrb_c_f, insn);
        u.f_rrb_c_f.f = 1;
        if (trans_addb(ctx, &u.f_rrb_c_f)) return true;
        break;
    case 0x2b:
        /* 101011.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:397 */
        decode_extract_rib_cf(ctx, &u.f_rib_c_f, insn);
        u.f_rib_c_f.f = 1;
        if (trans_addbi(ctx, &u.f_rib_c_f)) return true;
        break;
    case 0x2c:
        /* 101100.. ........ ........ ........ */
        decode_extract_rri_cf(ctx, &u.f_rri_cf, insn);
        switch ((insn >> 11) & 0x1) {
        case 0x0:
            /* 101100.. ........ ....0... ........ */
            /* ../target/hppa/insns.decode:235 */
            if (trans_addi_tc(ctx, &u.f_rri_cf)) return true;
            break;
        case 0x1:
            /* 101100.. ........ ....1... ........ */
            /* ../target/hppa/insns.decode:236 */
            if (trans_addi_tc_tsv(ctx, &u.f_rri_cf)) return true;
            break;
        }
        break;
    case 0x2d:
        /* 101101.. ........ ........ ........ */
        decode_extract_rri_cf(ctx, &u.f_rri_cf, insn);
        switch ((insn >> 11) & 0x1) {
        case 0x0:
            /* 101101.. ........ ....0... ........ */
            /* ../target/hppa/insns.decode:233 */
            if (trans_addi(ctx, &u.f_rri_cf)) return true;
            break;
        case 0x1:
            /* 101101.. ........ ....1... ........ */
            /* ../target/hppa/insns.decode:234 */
            if (trans_addi_tsv(ctx, &u.f_rri_cf)) return true;
            break;
        }
        break;
    case 0x2e:
        /* 101110.. ........ ........ ........ */
        switch ((insn >> 11) & 0x1) {
        case 0x0:
            /* 101110.. ........ ....0... ........ */
            /* ../target/hppa/insns.decode:462 */
            decode_extract_decode_Fmt_82(ctx, &u.f_decode47, insn);
            if (trans_fmpyfadd_f(ctx, &u.f_decode47)) return true;
            break;
        case 0x1:
            /* 101110.. ........ ....1... ........ */
            decode_extract_decode_Fmt_83(ctx, &u.f_decode47, insn);
            switch (insn & 0x000011c0) {
            case 0x00000000:
                /* 101110.. ........ ...01..0 00...... */
                /* ../target/hppa/insns.decode:464 */
                if (trans_fmpyfadd_d(ctx, &u.f_decode47)) return true;
                break;
            }
            break;
        }
        break;
    case 0x2f:
        /* 101111.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:388 */
        decode_extract_rrb_cdf(ctx, &u.f_rrb_c_d_f, insn);
        u.f_rrb_c_d_f.d = 1;
        u.f_rrb_c_d_f.f = 1;
        if (trans_cmpb(ctx, &u.f_rrb_c_d_f)) return true;
        break;
    case 0x30:
        /* 110000.. ........ ........ ........ */
        decode_extract_decode_Fmt_58(ctx, &u.f_decode32, insn);
        switch (insn & 0x03e04000) {
        case 0x00004000:
            /* 11000000 000..... .1...... ........ */
            /* ../target/hppa/insns.decode:377 */
            if (trans_bb_sar(ctx, &u.f_decode32)) return true;
            break;
        }
        break;
    case 0x31:
        /* 110001.. ........ ........ ........ */
        decode_extract_decode_Fmt_59(ctx, &u.f_decode33, insn);
        switch ((insn >> 14) & 0x1) {
        case 0x1:
            /* 110001.. ........ .1...... ........ */
            /* ../target/hppa/insns.decode:379 */
            if (trans_bb_imm(ctx, &u.f_decode33)) return true;
            break;
        }
        break;
    case 0x32:
        /* 110010.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:382 */
        decode_extract_rrb_cf(ctx, &u.f_rrb_c_f, insn);
        u.f_rrb_c_f.f = 0;
        if (trans_movb(ctx, &u.f_rrb_c_f)) return true;
        break;
    case 0x33:
        /* 110011.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:383 */
        decode_extract_rib_cf(ctx, &u.f_rib_c_f, insn);
        u.f_rib_c_f.f = 0;
        if (trans_movbi(ctx, &u.f_rib_c_f)) return true;
        break;
    case 0x34:
        /* 110100.. ........ ........ ........ */
        switch ((insn >> 12) & 0x1) {
        case 0x0:
            /* 110100.. ........ ...0.... ........ */
            switch ((insn >> 10) & 0x1) {
            case 0x0:
                /* 110100.. ........ ...0.0.. ........ */
                switch ((insn >> 11) & 0x1) {
                case 0x0:
                    /* 110100.. ........ ...000.. ........ */
                    decode_extract_decode_Fmt_61(ctx, &u.f_decode34, insn);
                    switch ((insn >> 5) & 0xf) {
                    case 0x0:
                        /* 110100.. ........ ...000.0 000..... */
                        /* ../target/hppa/insns.decode:403 */
                        if (trans_shrp_sar(ctx, &u.f_decode34)) return true;
                        break;
                    }
                    break;
                case 0x1:
                    /* 110100.. ........ ...010.. ........ */
                    /* ../target/hppa/insns.decode:404 */
                    decode_extract_decode_Fmt_62(ctx, &u.f_decode35, insn);
                    if (trans_shrp_imm(ctx, &u.f_decode35)) return true;
                    break;
                }
                break;
            case 0x1:
                /* 110100.. ........ ...0.1.. ........ */
                /* ../target/hppa/insns.decode:405 */
                decode_extract_decode_Fmt_63(ctx, &u.f_decode35, insn);
                if (trans_shrp_imm(ctx, &u.f_decode35)) return true;
                break;
            }
            break;
        case 0x1:
            /* 110100.. ........ ...1.... ........ */
            switch ((insn >> 11) & 0x1) {
            case 0x0:
                /* 110100.. ........ ...10... ........ */
                switch (insn & 0x000002e0) {
                case 0x00000000:
                    /* 110100.. ........ ...10.0. 000..... */
                    decode_extract_decode_Fmt_64(ctx, &u.f_decode36, insn);
                    switch ((insn >> 8) & 0x1) {
                    case 0x0:
                        /* 110100.. ........ ...10.00 000..... */
                        /* ../target/hppa/insns.decode:408 */
                        if (trans_extr_sar(ctx, &u.f_decode36)) return true;
                        break;
                    }
                    break;
                case 0x00000200:
                    /* 110100.. ........ ...10.1. 000..... */
                    /* ../target/hppa/insns.decode:409 */
                    decode_extract_decode_Fmt_65(ctx, &u.f_decode36, insn);
                    if (trans_extr_sar(ctx, &u.f_decode36)) return true;
                    break;
                }
                break;
            case 0x1:
                /* 110100.. ........ ...11... ........ */
                /* ../target/hppa/insns.decode:410 */
                decode_extract_decode_Fmt_66(ctx, &u.f_decode37, insn);
                if (trans_extr_imm(ctx, &u.f_decode37)) return true;
                break;
            }
            break;
        }
        break;
    case 0x35:
        /* 110101.. ........ ........ ........ */
        switch ((insn >> 11) & 0x3) {
        case 0x0:
            /* 110101.. ........ ...00... ........ */
            switch (insn & 0x000002e0) {
            case 0x00000000:
                /* 110101.. ........ ...00.0. 000..... */
                decode_extract_decode_Fmt_68(ctx, &u.f_decode38, insn);
                switch ((insn >> 8) & 0x1) {
                case 0x0:
                    /* 110101.. ........ ...00.00 000..... */
                    /* ../target/hppa/insns.decode:414 */
                    if (trans_dep_sar(ctx, &u.f_decode38)) return true;
                    break;
                }
                break;
            case 0x00000200:
                /* 110101.. ........ ...00.1. 000..... */
                /* ../target/hppa/insns.decode:415 */
                decode_extract_decode_Fmt_69(ctx, &u.f_decode38, insn);
                if (trans_dep_sar(ctx, &u.f_decode38)) return true;
                break;
            }
            break;
        case 0x1:
            /* 110101.. ........ ...01... ........ */
            /* ../target/hppa/insns.decode:416 */
            decode_extract_decode_Fmt_70(ctx, &u.f_decode39, insn);
            if (trans_dep_imm(ctx, &u.f_decode39)) return true;
            break;
        case 0x2:
            /* 110101.. ........ ...10... ........ */
            decode_extract_decode_Fmt_72(ctx, &u.f_decode40, insn);
            switch ((insn >> 5) & 0x7) {
            case 0x0:
                /* 110101.. ........ ...10... 000..... */
                /* ../target/hppa/insns.decode:419 */
                if (trans_depi_sar(ctx, &u.f_decode40)) return true;
                break;
            }
            break;
        case 0x3:
            /* 110101.. ........ ...11... ........ */
            /* ../target/hppa/insns.decode:421 */
            decode_extract_decode_Fmt_73(ctx, &u.f_decode41, insn);
            if (trans_depi_imm(ctx, &u.f_decode41)) return true;
            break;
        }
        break;
    case 0x36:
        /* 110110.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:411 */
        decode_extract_decode_Fmt_67(ctx, &u.f_decode37, insn);
        if (trans_extr_imm(ctx, &u.f_decode37)) return true;
        break;
    case 0x38:
        /* 111000.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:434 */
        decode_extract_be(ctx, &u.f_BE, insn);
        u.f_BE.l = 0;
        if (trans_be(ctx, &u.f_BE)) return true;
        break;
    case 0x39:
        /* 111001.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:435 */
        decode_extract_be(ctx, &u.f_BE, insn);
        u.f_BE.l = 31;
        if (trans_be(ctx, &u.f_BE)) return true;
        break;
    case 0x3a:
        /* 111010.. ........ ........ ........ */
        switch ((insn >> 13) & 0x7) {
        case 0x0:
            /* 111010.. ........ 000..... ........ */
            /* ../target/hppa/insns.decode:445 */
            decode_extract_bl(ctx, &u.f_BL, insn);
            if (trans_bl(ctx, &u.f_BL)) return true;
            break;
        case 0x1:
            /* 111010.. ........ 001..... ........ */
            /* ../target/hppa/insns.decode:450 */
            decode_extract_bl(ctx, &u.f_BL, insn);
            if (trans_b_gate(ctx, &u.f_BL)) return true;
            break;
        case 0x2:
            /* 111010.. ........ 010..... ........ */
            switch (insn & 0x00001005) {
            case 0x00000000:
                /* 111010.. ........ 0100.... .....0.0 */
                decode_extract_decode_Fmt_78(ctx, &u.f_decode44, insn);
                switch ((insn >> 3) & 0x1ff) {
                case 0x0:
                    /* 111010.. ........ 01000000 000000.0 */
                    /* ../target/hppa/insns.decode:451 */
                    if (trans_blr(ctx, &u.f_decode44)) return true;
                    break;
                }
                break;
            case 0x00000001:
                /* 111010.. ........ 0100.... .....0.1 */
                decode_extract_decode_Fmt_13(ctx, &u.f_empty, insn);
                switch (insn & 0x03e00ffa) {
                case 0x00000000:
                    /* 11101000 000..... 01000000 00000001 */
                    /* ../target/hppa/insns.decode:453 */
                    if (trans_nopbts(ctx, &u.f_empty)) return true;
                    break;
                }
                break;
            case 0x00000005:
                /* 111010.. ........ 0100.... .....1.1 */
                decode_extract_decode_Fmt_13(ctx, &u.f_empty, insn);
                switch (insn & 0x03ff0002) {
                case 0x00000000:
                    /* 11101000 00000000 0100.... .....101 */
                    /* ../target/hppa/insns.decode:452 */
                    if (trans_nopbts(ctx, &u.f_empty)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x4:
            /* 111010.. ........ 100..... ........ */
            /* ../target/hppa/insns.decode:446 */
            decode_extract_bl(ctx, &u.f_BL, insn);
            if (trans_bl(ctx, &u.f_BL)) return true;
            break;
        case 0x5:
            /* 111010.. ........ 101..... ........ */
            /* ../target/hppa/insns.decode:448 */
            decode_extract_decode_Fmt_77(ctx, &u.f_BL, insn);
            if (trans_bl(ctx, &u.f_BL)) return true;
            break;
        case 0x6:
            /* 111010.. ........ 110..... ........ */
            switch ((insn >> 2) & 0x7ff) {
            case 0x0:
                /* 111010.. ........ 11000000 000000.. */
                decode_extract_decode_Fmt_79(ctx, &u.f_decode45, insn);
                switch (insn & 0x00000001) {
                case 0x00000000:
                    /* 111010.. ........ 11000000 000000.0 */
                    /* ../target/hppa/insns.decode:454 */
                    if (trans_bv(ctx, &u.f_decode45)) return true;
                    break;
                }
                break;
            case 0x400:
                /* 111010.. ........ 11010000 000000.. */
                decode_extract_decode_Fmt_80(ctx, &u.f_decode46, insn);
                switch ((insn >> 16) & 0x1f) {
                case 0x0:
                    /* 111010.. ...00000 11010000 000000.. */
                    /* ../target/hppa/insns.decode:455 */
                    if (trans_bve(ctx, &u.f_decode46)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x7:
            /* 111010.. ........ 111..... ........ */
            decode_extract_decode_Fmt_81(ctx, &u.f_decode46, insn);
            switch (insn & 0x001f1ffc) {
            case 0x00001000:
                /* 111010.. ...00000 11110000 000000.. */
                /* ../target/hppa/insns.decode:456 */
                if (trans_bve(ctx, &u.f_decode46)) return true;
                break;
            }
            break;
        }
        break;
    case 0x3b:
        /* 111011.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:391 */
        decode_extract_decode_Fmt_60(ctx, &u.f_rib_c_d_f, insn);
        if (trans_cmpbi(ctx, &u.f_rib_c_d_f)) return true;
        break;
    case 0x3c:
        /* 111100.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:417 */
        decode_extract_decode_Fmt_71(ctx, &u.f_decode39, insn);
        if (trans_dep_imm(ctx, &u.f_decode39)) return true;
        break;
    case 0x3d:
        /* 111101.. ........ ........ ........ */
        /* ../target/hppa/insns.decode:423 */
        decode_extract_decode_Fmt_74(ctx, &u.f_decode41, insn);
        if (trans_depi_imm(ctx, &u.f_decode41)) return true;
        break;
    case 0x3e:
        /* 111110.. ........ ........ ........ */
        switch (insn & 0x00009020) {
        case 0x00000000:
            /* 111110.. ........ 0..0.... ..0..... */
            /* ../target/hppa/insns.decode:262 */
            decode_extract_decode_Fmt_40(ctx, &u.f_decode29, insn);
            if (trans_permh(ctx, &u.f_decode29)) return true;
            break;
        case 0x00008000:
            /* 111110.. ........ 1..0.... ..0..... */
            switch (insn & 0x00006c00) {
            case 0x00000000:
                /* 111110.. ........ 100000.. ..0..... */
                decode_extract_rrr(ctx, &u.f_rrr, insn);
                switch ((insn >> 6) & 0xf) {
                case 0x0:
                    /* 111110.. ........ 10000000 000..... */
                    /* ../target/hppa/insns.decode:259 */
                    if (trans_mixw_l(ctx, &u.f_rrr)) return true;
                    break;
                }
                break;
            case 0x00000400:
                /* 111110.. ........ 100001.. ..0..... */
                decode_extract_rrr(ctx, &u.f_rrr, insn);
                switch ((insn >> 6) & 0xf) {
                case 0x0:
                    /* 111110.. ........ 10000100 000..... */
                    /* ../target/hppa/insns.decode:257 */
                    if (trans_mixh_l(ctx, &u.f_rrr)) return true;
                    break;
                }
                break;
            case 0x00000800:
                /* 111110.. ........ 100010.. ..0..... */
                decode_extract_decode_Fmt_38(ctx, &u.f_rri, insn);
                switch ((insn >> 21) & 0x1f) {
                case 0x0:
                    /* 11111000 000..... 100010.. ..0..... */
                    /* ../target/hppa/insns.decode:249 */
                    if (trans_hshl(ctx, &u.f_rri)) return true;
                    break;
                }
                break;
            case 0x00004000:
                /* 111110.. ........ 110000.. ..0..... */
                decode_extract_rrr(ctx, &u.f_rrr, insn);
                switch ((insn >> 6) & 0xf) {
                case 0x0:
                    /* 111110.. ........ 11000000 000..... */
                    /* ../target/hppa/insns.decode:260 */
                    if (trans_mixw_r(ctx, &u.f_rrr)) return true;
                    break;
                }
                break;
            case 0x00004400:
                /* 111110.. ........ 110001.. ..0..... */
                decode_extract_rrr(ctx, &u.f_rrr, insn);
                switch ((insn >> 6) & 0xf) {
                case 0x0:
                    /* 111110.. ........ 11000100 000..... */
                    /* ../target/hppa/insns.decode:258 */
                    if (trans_mixh_r(ctx, &u.f_rrr)) return true;
                    break;
                }
                break;
            case 0x00004800:
                /* 111110.. ........ 110010.. ..0..... */
                decode_extract_decode_Fmt_39(ctx, &u.f_rri, insn);
                switch ((insn >> 16) & 0x1f) {
                case 0x0:
                    /* 111110.. ...00000 110010.. ..0..... */
                    /* ../target/hppa/insns.decode:251 */
                    if (trans_hshr_u(ctx, &u.f_rri)) return true;
                    break;
                }
                break;
            case 0x00004c00:
                /* 111110.. ........ 110011.. ..0..... */
                decode_extract_decode_Fmt_39(ctx, &u.f_rri, insn);
                switch ((insn >> 16) & 0x1f) {
                case 0x0:
                    /* 111110.. ...00000 110011.. ..0..... */
                    /* ../target/hppa/insns.decode:250 */
                    if (trans_hshr_s(ctx, &u.f_rri)) return true;
                    break;
                }
                break;
            }
            break;
        }
        break;
    case 0x3f:
        /* 111111.. ........ ........ ........ */
        decode_extract_decode_Fmt_13(ctx, &u.f_empty, insn);
        switch (insn & 0x03ffffff) {
        case 0x03fdead0:
            /* 11111111 11111101 11101010 11010000 */
            /* ../target/hppa/insns.decode:139 */
            if (trans_halt(ctx, &u.f_empty)) return true;
            break;
        case 0x03fdead1:
            /* 11111111 11111101 11101010 11010001 */
            /* ../target/hppa/insns.decode:140 */
            if (trans_reset(ctx, &u.f_empty)) return true;
            break;
        case 0x03fdead2:
            /* 11111111 11111101 11101010 11010010 */
            /* ../target/hppa/insns.decode:141 */
            if (trans_getshadowregs(ctx, &u.f_empty)) return true;
            break;
        }
        break;
    }
    return false;
}
